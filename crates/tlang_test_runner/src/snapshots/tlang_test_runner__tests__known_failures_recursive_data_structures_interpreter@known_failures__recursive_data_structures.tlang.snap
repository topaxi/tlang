---
source: crates/tlang_test_runner/src/main.rs
description: Known failure - output may not match expected
expression: output
input_file: tests/known_failures/recursive_data_structures.tlang
---
=== Recursive Data Structures Test ===
5050

[2025-08-27T11:34:28Z WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'left' on line 49:41. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[2025-08-27T11:34:28Z WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'right' on line 50:42. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[2025-08-27T11:34:28Z WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'left' on line 49:41, as it has not been resolved
[2025-08-27T11:34:28Z WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'right' on line 50:42, as it has not been resolved

thread 'main' panicked at crates/tlang_runtime/tlang_memory/src/state.rs:328:9:
Could not resolve path "left" (Res { hir_id: None, binding_kind: Unknown, slot: None })
Current scope: [
  {
    LinkedList::Empty,
    BinaryTree::Empty,
    fn create_list#17(n),
    fn create_balanced_tree#39(depth, value),
    fn sum_list#79(list),
    fn tree_depth#97(tree),
    fn create_unbalanced_tree#136(depth),
    LinkedList::Node(0: 100, 1: LinkedList::Node(0: 99, 1: LinkedList::Node(0: 98, 1: LinkedList::Node(0: 97, 1: LinkedList::Node(0: 96, 1: LinkedList::Node(0: 95, 1: LinkedList::Node(0: 94, 1: LinkedList::Node(0: 93, 1: LinkedList::Node(0: 92, 1: LinkedList::Node(0: 91, 1: LinkedList::Node(0: 90, 1: LinkedList::Node(0: 89, 1: LinkedList::Node(0: 88, 1: LinkedList::Node(0: 87, 1: LinkedList::Node(0: 86, 1: LinkedList::Node(0: 85, 1: LinkedList::Node(0: 84, 1: LinkedList::Node(0: 83, 1: LinkedList::Node(0: 82, 1: LinkedList::Node(0: 81, 1: LinkedList::Node(0: 80, 1: LinkedList::Node(0: 79, 1: LinkedList::Node(0: 78, 1: LinkedList::Node(0: 77, 1: LinkedList::Node(0: 76, 1: LinkedList::Node(0: 75, 1: LinkedList::Node(0: 74, 1: LinkedList::Node(0: 73, 1: LinkedList::Node(0: 72, 1: LinkedList::Node(0: 71, 1: LinkedList::Node(0: 70, 1: LinkedList::Node(0: 69, 1: LinkedList::Node(0: 68, 1: LinkedList::Node(0: 67, 1: LinkedList::Node(0: 66, 1: LinkedList::Node(0: 65, 1: LinkedList::Node(0: 64, 1: LinkedList::Node(0: 63, 1: LinkedList::Node(0: 62, 1: LinkedList::Node(0: 61, 1: LinkedList::Node(0: 60, 1: LinkedList::Node(0: 59, 1: LinkedList::Node(0: 58, 1: LinkedList::Node(0: 57, 1: LinkedList::Node(0: 56, 1: LinkedList::Node(0: 55, 1: LinkedList::Node(0: 54, 1: LinkedList::Node(0: 53, 1: LinkedList::Node(0: 52, 1: LinkedList::Node(0: 51, 1: LinkedList::Node(0: 50, 1: LinkedList::Node(0: 49, 1: LinkedList::Node(0: 48, 1: LinkedList::Node(0: 47, 1: LinkedList::Node(0: 46, 1: LinkedList::Node(0: 45, 1: LinkedList::Node(0: 44, 1: LinkedList::Node(0: 43, 1: LinkedList::Node(0: 42, 1: LinkedList::Node(0: 41, 1: LinkedList::Node(0: 40, 1: LinkedList::Node(0: 39, 1: LinkedList::Node(0: 38, 1: LinkedList::Node(0: 37, 1: LinkedList::Node(0: 36, 1: LinkedList::Node(0: 35, 1: LinkedList::Node(0: 34, 1: LinkedList::Node(0: 33, 1: LinkedList::Node(0: 32, 1: LinkedList::Node(0: 31, 1: LinkedList::Node(0: 30, 1: LinkedList::Node(0: 29, 1: LinkedList::Node(0: 28, 1: LinkedList::Node(0: 27, 1: LinkedList::Node(0: 26, 1: LinkedList::Node(0: 25, 1: LinkedList::Node(0: 24, 1: LinkedList::Node(0: 23, 1: LinkedList::Node(0: 22, 1: LinkedList::Node(0: 21, 1: LinkedList::Node(0: 20, 1: LinkedList::Node(0: 19, 1: LinkedList::Node(0: 18, 1: LinkedList::Node(0: 17, 1: LinkedList::Node(0: 16, 1: LinkedList::Node(0: 15, 1: LinkedList::Node(0: 14, 1: LinkedList::Node(0: 13, 1: LinkedList::Node(0: 12, 1: LinkedList::Node(0: 11, 1: LinkedList::Node(0: 10, 1: LinkedList::Node(0: 9, 1: LinkedList::Node(0: 8, 1: LinkedList::Node(0: 7, 1: LinkedList::Node(0: 6, 1: LinkedList::Node(0: 5, 1: LinkedList::Node(0: 4, 1: LinkedList::Node(0: 3, 1: LinkedList::Node(0: 2, 1: LinkedList::Node(0: 1, 1: LinkedList::Empty)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
    BinaryTree::Node(0: 1, 2: BinaryTree::Node(0: 3, 2: BinaryTree::Node(0: 7, 2: BinaryTree::Node(0: 15, 2: BinaryTree::Node(0: 31, 2: BinaryTree::Node(0: 63, 2: BinaryTree::Node(0: 127, 2: BinaryTree::Node(0: 255, 2: BinaryTree::Leaf(0: 511), 1: BinaryTree::Leaf(0: 510)), 1: BinaryTree::Node(0: 254, 2: BinaryTree::Leaf(0: 509), 1: BinaryTree::Leaf(0: 508))), 1: BinaryTree::Node(0: 126, 2: BinaryTree::Node(0: 253, 2: BinaryTree::Leaf(0: 507), 1: BinaryTree::Leaf(0: 506)), 1: BinaryTree::Node(0: 252, 2: BinaryTree::Leaf(0: 505), 1: BinaryTree::Leaf(0: 504)))), 1: BinaryTree::Node(0: 62, 2: BinaryTree::Node(0: 125, 2: BinaryTree::Node(0: 251, 2: BinaryTree::Leaf(0: 503), 1: BinaryTree::Leaf(0: 502)), 1: BinaryTree::Node(0: 250, 2: BinaryTree::Leaf(0: 501), 1: BinaryTree::Leaf(0: 500))), 1: BinaryTree::Node(0: 124, 2: BinaryTree::Node(0: 249, 2: BinaryTree::Leaf(0: 499), 1: BinaryTree::Leaf(0: 498)), 1: BinaryTree::Node(0: 248, 2: BinaryTree::Leaf(0: 497), 1: BinaryTree::Leaf(0: 496))))), 1: BinaryTree::Node(0: 30, 2: BinaryTree::Node(0: 61, 2: BinaryTree::Node(0: 123, 2: BinaryTree::Node(0: 247, 2: BinaryTree::Leaf(0: 495), 1: BinaryTree::Leaf(0: 494)), 1: BinaryTree::Node(0: 246, 2: BinaryTree::Leaf(0: 493), 1: BinaryTree::Leaf(0: 492))), 1: BinaryTree::Node(0: 122, 2: BinaryTree::Node(0: 245, 2: BinaryTree::Leaf(0: 491), 1: BinaryTree::Leaf(0: 490)), 1: BinaryTree::Node(0: 244, 2: BinaryTree::Leaf(0: 489), 1: BinaryTree::Leaf(0: 488)))), 1: BinaryTree::Node(0: 60, 2: BinaryTree::Node(0: 121, 2: BinaryTree::Node(0: 243, 2: BinaryTree::Leaf(0: 487), 1: BinaryTree::Leaf(0: 486)), 1: BinaryTree::Node(0: 242, 2: BinaryTree::Leaf(0: 485), 1: BinaryTree::Leaf(0: 484))), 1: BinaryTree::Node(0: 120, 2: BinaryTree::Node(0: 241, 2: BinaryTree::Leaf(0: 483), 1: BinaryTree::Leaf(0: 482)), 1: BinaryTree::Node(0: 240, 2: BinaryTree::Leaf(0: 481), 1: BinaryTree::Leaf(0: 480)))))), 1: BinaryTree::Node(0: 14, 2: BinaryTree::Node(0: 29, 2: BinaryTree::Node(0: 59, 2: BinaryTree::Node(0: 119, 2: BinaryTree::Node(0: 239, 2: BinaryTree::Leaf(0: 479), 1: BinaryTree::Leaf(0: 478)), 1: BinaryTree::Node(0: 238, 2: BinaryTree::Leaf(0: 477), 1: BinaryTree::Leaf(0: 476))), 1: BinaryTree::Node(0: 118, 2: BinaryTree::Node(0: 237, 2: BinaryTree::Leaf(0: 475), 1: BinaryTree::Leaf(0: 474)), 1: BinaryTree::Node(0: 236, 2: BinaryTree::Leaf(0: 473), 1: BinaryTree::Leaf(0: 472)))), 1: BinaryTree::Node(0: 58, 2: BinaryTree::Node(0: 117, 2: BinaryTree::Node(0: 235, 2: BinaryTree::Leaf(0: 471), 1: BinaryTree::Leaf(0: 470)), 1: BinaryTree::Node(0: 234, 2: BinaryTree::Leaf(0: 469), 1: BinaryTree::Leaf(0: 468))), 1: BinaryTree::Node(0: 116, 2: BinaryTree::Node(0: 233, 2: BinaryTree::Leaf(0: 467), 1: BinaryTree::Leaf(0: 466)), 1: BinaryTree::Node(0: 232, 2: BinaryTree::Leaf(0: 465), 1: BinaryTree::Leaf(0: 464))))), 1: BinaryTree::Node(0: 28, 2: BinaryTree::Node(0: 57, 2: BinaryTree::Node(0: 115, 2: BinaryTree::Node(0: 231, 2: BinaryTree::Leaf(0: 463), 1: BinaryTree::Leaf(0: 462)), 1: BinaryTree::Node(0: 230, 2: BinaryTree::Leaf(0: 461), 1: BinaryTree::Leaf(0: 460))), 1: BinaryTree::Node(0: 114, 2: BinaryTree::Node(0: 229, 2: BinaryTree::Leaf(0: 459), 1: BinaryTree::Leaf(0: 458)), 1: BinaryTree::Node(0: 228, 2: BinaryTree::Leaf(0: 457), 1: BinaryTree::Leaf(0: 456)))), 1: BinaryTree::Node(0: 56, 2: BinaryTree::Node(0: 113, 2: BinaryTree::Node(0: 227, 2: BinaryTree::Leaf(0: 455), 1: BinaryTree::Leaf(0: 454)), 1: BinaryTree::Node(0: 226, 2: BinaryTree::Leaf(0: 453), 1: BinaryTree::Leaf(0: 452))), 1: BinaryTree::Node(0: 112, 2: BinaryTree::Node(0: 225, 2: BinaryTree::Leaf(0: 451), 1: BinaryTree::Leaf(0: 450)), 1: BinaryTree::Node(0: 224, 2: BinaryTree::Leaf(0: 449), 1: BinaryTree::Leaf(0: 448))))))), 1: BinaryTree::Node(0: 6, 2: BinaryTree::Node(0: 13, 2: BinaryTree::Node(0: 27, 2: BinaryTree::Node(0: 55, 2: BinaryTree::Node(0: 111, 2: BinaryTree::Node(0: 223, 2: BinaryTree::Leaf(0: 447), 1: BinaryTree::Leaf(0: 446)), 1: BinaryTree::Node(0: 222, 2: BinaryTree::Leaf(0: 445), 1: BinaryTree::Leaf(0: 444))), 1: BinaryTree::Node(0: 110, 2: BinaryTree::Node(0: 221, 2: BinaryTree::Leaf(0: 443), 1: BinaryTree::Leaf(0: 442)), 1: BinaryTree::Node(0: 220, 2: BinaryTree::Leaf(0: 441), 1: BinaryTree::Leaf(0: 440)))), 1: BinaryTree::Node(0: 54, 2: BinaryTree::Node(0: 109, 2: BinaryTree::Node(0: 219, 2: BinaryTree::Leaf(0: 439), 1: BinaryTree::Leaf(0: 438)), 1: BinaryTree::Node(0: 218, 2: BinaryTree::Leaf(0: 437), 1: BinaryTree::Leaf(0: 436))), 1: BinaryTree::Node(0: 108, 2: BinaryTree::Node(0: 217, 2: BinaryTree::Leaf(0: 435), 1: BinaryTree::Leaf(0: 434)), 1: BinaryTree::Node(0: 216, 2: BinaryTree::Leaf(0: 433), 1: BinaryTree::Leaf(0: 432))))), 1: BinaryTree::Node(0: 26, 2: BinaryTree::Node(0: 53, 2: BinaryTree::Node(0: 107, 2: BinaryTree::Node(0: 215, 2: BinaryTree::Leaf(0: 431), 1: BinaryTree::Leaf(0: 430)), 1: BinaryTree::Node(0: 214, 2: BinaryTree::Leaf(0: 429), 1: BinaryTree::Leaf(0: 428))), 1: BinaryTree::Node(0: 106, 2: BinaryTree::Node(0: 213, 2: BinaryTree::Leaf(0: 427), 1: BinaryTree::Leaf(0: 426)), 1: BinaryTree::Node(0: 212, 2: BinaryTree::Leaf(0: 425), 1: BinaryTree::Leaf(0: 424)))), 1: BinaryTree::Node(0: 52, 2: BinaryTree::Node(0: 105, 2: BinaryTree::Node(0: 211, 2: BinaryTree::Leaf(0: 423), 1: BinaryTree::Leaf(0: 422)), 1: BinaryTree::Node(0: 210, 2: BinaryTree::Leaf(0: 421), 1: BinaryTree::Leaf(0: 420))), 1: BinaryTree::Node(0: 104, 2: BinaryTree::Node(0: 209, 2: BinaryTree::Leaf(0: 419), 1: BinaryTree::Leaf(0: 418)), 1: BinaryTree::Node(0: 208, 2: BinaryTree::Leaf(0: 417), 1: BinaryTree::Leaf(0: 416)))))), 1: BinaryTree::Node(0: 12, 2: BinaryTree::Node(0: 25, 2: BinaryTree::Node(0: 51, 2: BinaryTree::Node(0: 103, 2: BinaryTree::Node(0: 207, 2: BinaryTree::Leaf(0: 415), 1: BinaryTree::Leaf(0: 414)), 1: BinaryTree::Node(0: 206, 2: BinaryTree::Leaf(0: 413), 1: BinaryTree::Leaf(0: 412))), 1: BinaryTree::Node(0: 102, 2: BinaryTree::Node(0: 205, 2: BinaryTree::Leaf(0: 411), 1: BinaryTree::Leaf(0: 410)), 1: BinaryTree::Node(0: 204, 2: BinaryTree::Leaf(0: 409), 1: BinaryTree::Leaf(0: 408)))), 1: BinaryTree::Node(0: 50, 2: BinaryTree::Node(0: 101, 2: BinaryTree::Node(0: 203, 2: BinaryTree::Leaf(0: 407), 1: BinaryTree::Leaf(0: 406)), 1: BinaryTree::Node(0: 202, 2: BinaryTree::Leaf(0: 405), 1: BinaryTree::Leaf(0: 404))), 1: BinaryTree::Node(0: 100, 2: BinaryTree::Node(0: 201, 2: BinaryTree::Leaf(0: 403), 1: BinaryTree::Leaf(0: 402)), 1: BinaryTree::Node(0: 200, 2: BinaryTree::Leaf(0: 401), 1: BinaryTree::Leaf(0: 400))))), 1: BinaryTree::Node(0: 24, 2: BinaryTree::Node(0: 49, 2: BinaryTree::Node(0: 99, 2: BinaryTree::Node(0: 199, 2: BinaryTree::Leaf(0: 399), 1: BinaryTree::Leaf(0: 398)), 1: BinaryTree::Node(0: 198, 2: BinaryTree::Leaf(0: 397), 1: BinaryTree::Leaf(0: 396))), 1: BinaryTree::Node(0: 98, 2: BinaryTree::Node(0: 197, 2: BinaryTree::Leaf(0: 395), 1: BinaryTree::Leaf(0: 394)), 1: BinaryTree::Node(0: 196, 2: BinaryTree::Leaf(0: 393), 1: BinaryTree::Leaf(0: 392)))), 1: BinaryTree::Node(0: 48, 2: BinaryTree::Node(0: 97, 2: BinaryTree::Node(0: 195, 2: BinaryTree::Leaf(0: 391), 1: BinaryTree::Leaf(0: 390)), 1: BinaryTree::Node(0: 194, 2: BinaryTree::Leaf(0: 389), 1: BinaryTree::Leaf(0: 388))), 1: BinaryTree::Node(0: 96, 2: BinaryTree::Node(0: 193, 2: BinaryTree::Leaf(0: 387), 1: BinaryTree::Leaf(0: 386)), 1: BinaryTree::Node(0: 192, 2: BinaryTree::Leaf(0: 385), 1: BinaryTree::Leaf(0: 384)))))))), 1: BinaryTree::Node(0: 2, 2: BinaryTree::Node(0: 5, 2: BinaryTree::Node(0: 11, 2: BinaryTree::Node(0: 23, 2: BinaryTree::Node(0: 47, 2: BinaryTree::Node(0: 95, 2: BinaryTree::Node(0: 191, 2: BinaryTree::Leaf(0: 383), 1: BinaryTree::Leaf(0: 382)), 1: BinaryTree::Node(0: 190, 2: BinaryTree::Leaf(0: 381), 1: BinaryTree::Leaf(0: 380))), 1: BinaryTree::Node(0: 94, 2: BinaryTree::Node(0: 189, 2: BinaryTree::Leaf(0: 379), 1: BinaryTree::Leaf(0: 378)), 1: BinaryTree::Node(0: 188, 2: BinaryTree::Leaf(0: 377), 1: BinaryTree::Leaf(0: 376)))), 1: BinaryTree::Node(0: 46, 2: BinaryTree::Node(0: 93, 2: BinaryTree::Node(0: 187, 2: BinaryTree::Leaf(0: 375), 1: BinaryTree::Leaf(0: 374)), 1: BinaryTree::Node(0: 186, 2: BinaryTree::Leaf(0: 373), 1: BinaryTree::Leaf(0: 372))), 1: BinaryTree::Node(0: 92, 2: BinaryTree::Node(0: 185, 2: BinaryTree::Leaf(0: 371), 1: BinaryTree::Leaf(0: 370)), 1: BinaryTree::Node(0: 184, 2: BinaryTree::Leaf(0: 369), 1: BinaryTree::Leaf(0: 368))))), 1: BinaryTree::Node(0: 22, 2: BinaryTree::Node(0: 45, 2: BinaryTree::Node(0: 91, 2: BinaryTree::Node(0: 183, 2: BinaryTree::Leaf(0: 367), 1: BinaryTree::Leaf(0: 366)), 1: BinaryTree::Node(0: 182, 2: BinaryTree::Leaf(0: 365), 1: BinaryTree::Leaf(0: 364))), 1: BinaryTree::Node(0: 90, 2: BinaryTree::Node(0: 181, 2: BinaryTree::Leaf(0: 363), 1: BinaryTree::Leaf(0: 362)), 1: BinaryTree::Node(0: 180, 2: BinaryTree::Leaf(0: 361), 1: BinaryTree::Leaf(0: 360)))), 1: BinaryTree::Node(0: 44, 2: BinaryTree::Node(0: 89, 2: BinaryTree::Node(0: 179, 2: BinaryTree::Leaf(0: 359), 1: BinaryTree::Leaf(0: 358)), 1: BinaryTree::Node(0: 178, 2: BinaryTree::Leaf(0: 357), 1: BinaryTree::Leaf(0: 356))), 1: BinaryTree::Node(0: 88, 2: BinaryTree::Node(0: 177, 2: BinaryTree::Leaf(0: 355), 1: BinaryTree::Leaf(0: 354)), 1: BinaryTree::Node(0: 176, 2: BinaryTree::Leaf(0: 353), 1: BinaryTree::Leaf(0: 352)))))), 1: BinaryTree::Node(0: 10, 2: BinaryTree::Node(0: 21, 2: BinaryTree::Node(0: 43, 2: BinaryTree::Node(0: 87, 2: BinaryTree::Node(0: 175, 2: BinaryTree::Leaf(0: 351), 1: BinaryTree::Leaf(0: 350)), 1: BinaryTree::Node(0: 174, 2: BinaryTree::Leaf(0: 349), 1: BinaryTree::Leaf(0: 348))), 1: BinaryTree::Node(0: 86, 2: BinaryTree::Node(0: 173, 2: BinaryTree::Leaf(0: 347), 1: BinaryTree::Leaf(0: 346)), 1: BinaryTree::Node(0: 172, 2: BinaryTree::Leaf(0: 345), 1: BinaryTree::Leaf(0: 344)))), 1: BinaryTree::Node(0: 42, 2: BinaryTree::Node(0: 85, 2: BinaryTree::Node(0: 171, 2: BinaryTree::Leaf(0: 343), 1: BinaryTree::Leaf(0: 342)), 1: BinaryTree::Node(0: 170, 2: BinaryTree::Leaf(0: 341), 1: BinaryTree::Leaf(0: 340))), 1: BinaryTree::Node(0: 84, 2: BinaryTree::Node(0: 169, 2: BinaryTree::Leaf(0: 339), 1: BinaryTree::Leaf(0: 338)), 1: BinaryTree::Node(0: 168, 2: BinaryTree::Leaf(0: 337), 1: BinaryTree::Leaf(0: 336))))), 1: BinaryTree::Node(0: 20, 2: BinaryTree::Node(0: 41, 2: BinaryTree::Node(0: 83, 2: BinaryTree::Node(0: 167, 2: BinaryTree::Leaf(0: 335), 1: BinaryTree::Leaf(0: 334)), 1: BinaryTree::Node(0: 166, 2: BinaryTree::Leaf(0: 333), 1: BinaryTree::Leaf(0: 332))), 1: BinaryTree::Node(0: 82, 2: BinaryTree::Node(0: 165, 2: BinaryTree::Leaf(0: 331), 1: BinaryTree::Leaf(0: 330)), 1: BinaryTree::Node(0: 164, 2: BinaryTree::Leaf(0: 329), 1: BinaryTree::Leaf(0: 328)))), 1: BinaryTree::Node(0: 40, 2: BinaryTree::Node(0: 81, 2: BinaryTree::Node(0: 163, 2: BinaryTree::Leaf(0: 327), 1: BinaryTree::Leaf(0: 326)), 1: BinaryTree::Node(0: 162, 2: BinaryTree::Leaf(0: 325), 1: BinaryTree::Leaf(0: 324))), 1: BinaryTree::Node(0: 80, 2: BinaryTree::Node(0: 161, 2: BinaryTree::Leaf(0: 323), 1: BinaryTree::Leaf(0: 322)), 1: BinaryTree::Node(0: 160, 2: BinaryTree::Leaf(0: 321), 1: BinaryTree::Leaf(0: 320))))))), 1: BinaryTree::Node(0: 4, 2: BinaryTree::Node(0: 9, 2: BinaryTree::Node(0: 19, 2: BinaryTree::Node(0: 39, 2: BinaryTree::Node(0: 79, 2: BinaryTree::Node(0: 159, 2: BinaryTree::Leaf(0: 319), 1: BinaryTree::Leaf(0: 318)), 1: BinaryTree::Node(0: 158, 2: BinaryTree::Leaf(0: 317), 1: BinaryTree::Leaf(0: 316))), 1: BinaryTree::Node(0: 78, 2: BinaryTree::Node(0: 157, 2: BinaryTree::Leaf(0: 315), 1: BinaryTree::Leaf(0: 314)), 1: BinaryTree::Node(0: 156, 2: BinaryTree::Leaf(0: 313), 1: BinaryTree::Leaf(0: 312)))), 1: BinaryTree::Node(0: 38, 2: BinaryTree::Node(0: 77, 2: BinaryTree::Node(0: 155, 2: BinaryTree::Leaf(0: 311), 1: BinaryTree::Leaf(0: 310)), 1: BinaryTree::Node(0: 154, 2: BinaryTree::Leaf(0: 309), 1: BinaryTree::Leaf(0: 308))), 1: BinaryTree::Node(0: 76, 2: BinaryTree::Node(0: 153, 2: BinaryTree::Leaf(0: 307), 1: BinaryTree::Leaf(0: 306)), 1: BinaryTree::Node(0: 152, 2: BinaryTree::Leaf(0: 305), 1: BinaryTree::Leaf(0: 304))))), 1: BinaryTree::Node(0: 18, 2: BinaryTree::Node(0: 37, 2: BinaryTree::Node(0: 75, 2: BinaryTree::Node(0: 151, 2: BinaryTree::Leaf(0: 303), 1: BinaryTree::Leaf(0: 302)), 1: BinaryTree::Node(0: 150, 2: BinaryTree::Leaf(0: 301), 1: BinaryTree::Leaf(0: 300))), 1: BinaryTree::Node(0: 74, 2: BinaryTree::Node(0: 149, 2: BinaryTree::Leaf(0: 299), 1: BinaryTree::Leaf(0: 298)), 1: BinaryTree::Node(0: 148, 2: BinaryTree::Leaf(0: 297), 1: BinaryTree::Leaf(0: 296)))), 1: BinaryTree::Node(0: 36, 2: BinaryTree::Node(0: 73, 2: BinaryTree::Node(0: 147, 2: BinaryTree::Leaf(0: 295), 1: BinaryTree::Leaf(0: 294)), 1: BinaryTree::Node(0: 146, 2: BinaryTree::Leaf(0: 293), 1: BinaryTree::Leaf(0: 292))), 1: BinaryTree::Node(0: 72, 2: BinaryTree::Node(0: 145, 2: BinaryTree::Leaf(0: 291), 1: BinaryTree::Leaf(0: 290)), 1: BinaryTree::Node(0: 144, 2: BinaryTree::Leaf(0: 289), 1: BinaryTree::Leaf(0: 288)))))), 1: BinaryTree::Node(0: 8, 2: BinaryTree::Node(0: 17, 2: BinaryTree::Node(0: 35, 2: BinaryTree::Node(0: 71, 2: BinaryTree::Node(0: 143, 2: BinaryTree::Leaf(0: 287), 1: BinaryTree::Leaf(0: 286)), 1: BinaryTree::Node(0: 142, 2: BinaryTree::Leaf(0: 285), 1: BinaryTree::Leaf(0: 284))), 1: BinaryTree::Node(0: 70, 2: BinaryTree::Node(0: 141, 2: BinaryTree::Leaf(0: 283), 1: BinaryTree::Leaf(0: 282)), 1: BinaryTree::Node(0: 140, 2: BinaryTree::Leaf(0: 281), 1: BinaryTree::Leaf(0: 280)))), 1: BinaryTree::Node(0: 34, 2: BinaryTree::Node(0: 69, 2: BinaryTree::Node(0: 139, 2: BinaryTree::Leaf(0: 279), 1: BinaryTree::Leaf(0: 278)), 1: BinaryTree::Node(0: 138, 2: BinaryTree::Leaf(0: 277), 1: BinaryTree::Leaf(0: 276))), 1: BinaryTree::Node(0: 68, 2: BinaryTree::Node(0: 137, 2: BinaryTree::Leaf(0: 275), 1: BinaryTree::Leaf(0: 274)), 1: BinaryTree::Node(0: 136, 2: BinaryTree::Leaf(0: 273), 1: BinaryTree::Leaf(0: 272))))), 1: BinaryTree::Node(0: 16, 2: BinaryTree::Node(0: 33, 2: BinaryTree::Node(0: 67, 2: BinaryTree::Node(0: 135, 2: BinaryTree::Leaf(0: 271), 1: BinaryTree::Leaf(0: 270)), 1: BinaryTree::Node(0: 134, 2: BinaryTree::Leaf(0: 269), 1: BinaryTree::Leaf(0: 268))), 1: BinaryTree::Node(0: 66, 2: BinaryTree::Node(0: 133, 2: BinaryTree::Leaf(0: 267), 1: BinaryTree::Leaf(0: 266)), 1: BinaryTree::Node(0: 132, 2: BinaryTree::Leaf(0: 265), 1: BinaryTree::Leaf(0: 264)))), 1: BinaryTree::Node(0: 32, 2: BinaryTree::Node(0: 65, 2: BinaryTree::Node(0: 131, 2: BinaryTree::Leaf(0: 263), 1: BinaryTree::Leaf(0: 262)), 1: BinaryTree::Node(0: 130, 2: BinaryTree::Leaf(0: 261), 1: BinaryTree::Leaf(0: 260))), 1: BinaryTree::Node(0: 64, 2: BinaryTree::Node(0: 129, 2: BinaryTree::Leaf(0: 259), 1: BinaryTree::Leaf(0: 258)), 1: BinaryTree::Node(0: 128, 2: BinaryTree::Leaf(0: 257), 1: BinaryTree::Leaf(0: 256))))))))),
    BinaryTree::Node(0: 50, 2: BinaryTree::Leaf(0: 500), 1: BinaryTree::Node(0: 49, 2: BinaryTree::Leaf(0: 490), 1: BinaryTree::Node(0: 48, 2: BinaryTree::Leaf(0: 480), 1: BinaryTree::Node(0: 47, 2: BinaryTree::Leaf(0: 470), 1: BinaryTree::Node(0: 46, 2: BinaryTree::Leaf(0: 460), 1: BinaryTree::Node(0: 45, 2: BinaryTree::Leaf(0: 450), 1: BinaryTree::Node(0: 44, 2: BinaryTree::Leaf(0: 440), 1: BinaryTree::Node(0: 43, 2: BinaryTree::Leaf(0: 430), 1: BinaryTree::Node(0: 42, 2: BinaryTree::Leaf(0: 420), 1: BinaryTree::Node(0: 41, 2: BinaryTree::Leaf(0: 410), 1: BinaryTree::Node(0: 40, 2: BinaryTree::Leaf(0: 400), 1: BinaryTree::Node(0: 39, 2: BinaryTree::Leaf(0: 390), 1: BinaryTree::Node(0: 38, 2: BinaryTree::Leaf(0: 380), 1: BinaryTree::Node(0: 37, 2: BinaryTree::Leaf(0: 370), 1: BinaryTree::Node(0: 36, 2: BinaryTree::Leaf(0: 360), 1: BinaryTree::Node(0: 35, 2: BinaryTree::Leaf(0: 350), 1: BinaryTree::Node(0: 34, 2: BinaryTree::Leaf(0: 340), 1: BinaryTree::Node(0: 33, 2: BinaryTree::Leaf(0: 330), 1: BinaryTree::Node(0: 32, 2: BinaryTree::Leaf(0: 320), 1: BinaryTree::Node(0: 31, 2: BinaryTree::Leaf(0: 310), 1: BinaryTree::Node(0: 30, 2: BinaryTree::Leaf(0: 300), 1: BinaryTree::Node(0: 29, 2: BinaryTree::Leaf(0: 290), 1: BinaryTree::Node(0: 28, 2: BinaryTree::Leaf(0: 280), 1: BinaryTree::Node(0: 27, 2: BinaryTree::Leaf(0: 270), 1: BinaryTree::Node(0: 26, 2: BinaryTree::Leaf(0: 260), 1: BinaryTree::Node(0: 25, 2: BinaryTree::Leaf(0: 250), 1: BinaryTree::Node(0: 24, 2: BinaryTree::Leaf(0: 240), 1: BinaryTree::Node(0: 23, 2: BinaryTree::Leaf(0: 230), 1: BinaryTree::Node(0: 22, 2: BinaryTree::Leaf(0: 220), 1: BinaryTree::Node(0: 21, 2: BinaryTree::Leaf(0: 210), 1: BinaryTree::Node(0: 20, 2: BinaryTree::Leaf(0: 200), 1: BinaryTree::Node(0: 19, 2: BinaryTree::Leaf(0: 190), 1: BinaryTree::Node(0: 18, 2: BinaryTree::Leaf(0: 180), 1: BinaryTree::Node(0: 17, 2: BinaryTree::Leaf(0: 170), 1: BinaryTree::Node(0: 16, 2: BinaryTree::Leaf(0: 160), 1: BinaryTree::Node(0: 15, 2: BinaryTree::Leaf(0: 150), 1: BinaryTree::Node(0: 14, 2: BinaryTree::Leaf(0: 140), 1: BinaryTree::Node(0: 13, 2: BinaryTree::Leaf(0: 130), 1: BinaryTree::Node(0: 12, 2: BinaryTree::Leaf(0: 120), 1: BinaryTree::Node(0: 11, 2: BinaryTree::Leaf(0: 110), 1: BinaryTree::Node(0: 10, 2: BinaryTree::Leaf(0: 100), 1: BinaryTree::Node(0: 9, 2: BinaryTree::Leaf(0: 90), 1: BinaryTree::Node(0: 8, 2: BinaryTree::Leaf(0: 80), 1: BinaryTree::Node(0: 7, 2: BinaryTree::Leaf(0: 70), 1: BinaryTree::Node(0: 6, 2: BinaryTree::Leaf(0: 60), 1: BinaryTree::Node(0: 5, 2: BinaryTree::Leaf(0: 50), 1: BinaryTree::Node(0: 4, 2: BinaryTree::Leaf(0: 40), 1: BinaryTree::Node(0: 3, 2: BinaryTree::Leaf(0: 30), 1: BinaryTree::Node(0: 2, 2: BinaryTree::Leaf(0: 20), 1: BinaryTree::Node(0: 1, 2: BinaryTree::Leaf(0: 10), 1: BinaryTree::Empty)))))))))))))))))))))))))))))))))))))))))))))))))),
  },
  {
    fn tree_depth#97(tree),
    BinaryTree::Node(0: 1, 2: BinaryTree::Node(0: 3, 2: BinaryTree::Node(0: 7, 2: BinaryTree::Node(0: 15, 2: BinaryTree::Node(0: 31, 2: BinaryTree::Node(0: 63, 2: BinaryTree::Node(0: 127, 2: BinaryTree::Node(0: 255, 2: BinaryTree::Leaf(0: 511), 1: BinaryTree::Leaf(0: 510)), 1: BinaryTree::Node(0: 254, 2: BinaryTree::Leaf(0: 509), 1: BinaryTree::Leaf(0: 508))), 1: BinaryTree::Node(0: 126, 2: BinaryTree::Node(0: 253, 2: BinaryTree::Leaf(0: 507), 1: BinaryTree::Leaf(0: 506)), 1: BinaryTree::Node(0: 252, 2: BinaryTree::Leaf(0: 505), 1: BinaryTree::Leaf(0: 504)))), 1: BinaryTree::Node(0: 62, 2: BinaryTree::Node(0: 125, 2: BinaryTree::Node(0: 251, 2: BinaryTree::Leaf(0: 503), 1: BinaryTree::Leaf(0: 502)), 1: BinaryTree::Node(0: 250, 2: BinaryTree::Leaf(0: 501), 1: BinaryTree::Leaf(0: 500))), 1: BinaryTree::Node(0: 124, 2: BinaryTree::Node(0: 249, 2: BinaryTree::Leaf(0: 499), 1: BinaryTree::Leaf(0: 498)), 1: BinaryTree::Node(0: 248, 2: BinaryTree::Leaf(0: 497), 1: BinaryTree::Leaf(0: 496))))), 1: BinaryTree::Node(0: 30, 2: BinaryTree::Node(0: 61, 2: BinaryTree::Node(0: 123, 2: BinaryTree::Node(0: 247, 2: BinaryTree::Leaf(0: 495), 1: BinaryTree::Leaf(0: 494)), 1: BinaryTree::Node(0: 246, 2: BinaryTree::Leaf(0: 493), 1: BinaryTree::Leaf(0: 492))), 1: BinaryTree::Node(0: 122, 2: BinaryTree::Node(0: 245, 2: BinaryTree::Leaf(0: 491), 1: BinaryTree::Leaf(0: 490)), 1: BinaryTree::Node(0: 244, 2: BinaryTree::Leaf(0: 489), 1: BinaryTree::Leaf(0: 488)))), 1: BinaryTree::Node(0: 60, 2: BinaryTree::Node(0: 121, 2: BinaryTree::Node(0: 243, 2: BinaryTree::Leaf(0: 487), 1: BinaryTree::Leaf(0: 486)), 1: BinaryTree::Node(0: 242, 2: BinaryTree::Leaf(0: 485), 1: BinaryTree::Leaf(0: 484))), 1: BinaryTree::Node(0: 120, 2: BinaryTree::Node(0: 241, 2: BinaryTree::Leaf(0: 483), 1: BinaryTree::Leaf(0: 482)), 1: BinaryTree::Node(0: 240, 2: BinaryTree::Leaf(0: 481), 1: BinaryTree::Leaf(0: 480)))))), 1: BinaryTree::Node(0: 14, 2: BinaryTree::Node(0: 29, 2: BinaryTree::Node(0: 59, 2: BinaryTree::Node(0: 119, 2: BinaryTree::Node(0: 239, 2: BinaryTree::Leaf(0: 479), 1: BinaryTree::Leaf(0: 478)), 1: BinaryTree::Node(0: 238, 2: BinaryTree::Leaf(0: 477), 1: BinaryTree::Leaf(0: 476))), 1: BinaryTree::Node(0: 118, 2: BinaryTree::Node(0: 237, 2: BinaryTree::Leaf(0: 475), 1: BinaryTree::Leaf(0: 474)), 1: BinaryTree::Node(0: 236, 2: BinaryTree::Leaf(0: 473), 1: BinaryTree::Leaf(0: 472)))), 1: BinaryTree::Node(0: 58, 2: BinaryTree::Node(0: 117, 2: BinaryTree::Node(0: 235, 2: BinaryTree::Leaf(0: 471), 1: BinaryTree::Leaf(0: 470)), 1: BinaryTree::Node(0: 234, 2: BinaryTree::Leaf(0: 469), 1: BinaryTree::Leaf(0: 468))), 1: BinaryTree::Node(0: 116, 2: BinaryTree::Node(0: 233, 2: BinaryTree::Leaf(0: 467), 1: BinaryTree::Leaf(0: 466)), 1: BinaryTree::Node(0: 232, 2: BinaryTree::Leaf(0: 465), 1: BinaryTree::Leaf(0: 464))))), 1: BinaryTree::Node(0: 28, 2: BinaryTree::Node(0: 57, 2: BinaryTree::Node(0: 115, 2: BinaryTree::Node(0: 231, 2: BinaryTree::Leaf(0: 463), 1: BinaryTree::Leaf(0: 462)), 1: BinaryTree::Node(0: 230, 2: BinaryTree::Leaf(0: 461), 1: BinaryTree::Leaf(0: 460))), 1: BinaryTree::Node(0: 114, 2: BinaryTree::Node(0: 229, 2: BinaryTree::Leaf(0: 459), 1: BinaryTree::Leaf(0: 458)), 1: BinaryTree::Node(0: 228, 2: BinaryTree::Leaf(0: 457), 1: BinaryTree::Leaf(0: 456)))), 1: BinaryTree::Node(0: 56, 2: BinaryTree::Node(0: 113, 2: BinaryTree::Node(0: 227, 2: BinaryTree::Leaf(0: 455), 1: BinaryTree::Leaf(0: 454)), 1: BinaryTree::Node(0: 226, 2: BinaryTree::Leaf(0: 453), 1: BinaryTree::Leaf(0: 452))), 1: BinaryTree::Node(0: 112, 2: BinaryTree::Node(0: 225, 2: BinaryTree::Leaf(0: 451), 1: BinaryTree::Leaf(0: 450)), 1: BinaryTree::Node(0: 224, 2: BinaryTree::Leaf(0: 449), 1: BinaryTree::Leaf(0: 448))))))), 1: BinaryTree::Node(0: 6, 2: BinaryTree::Node(0: 13, 2: BinaryTree::Node(0: 27, 2: BinaryTree::Node(0: 55, 2: BinaryTree::Node(0: 111, 2: BinaryTree::Node(0: 223, 2: BinaryTree::Leaf(0: 447), 1: BinaryTree::Leaf(0: 446)), 1: BinaryTree::Node(0: 222, 2: BinaryTree::Leaf(0: 445), 1: BinaryTree::Leaf(0: 444))), 1: BinaryTree::Node(0: 110, 2: BinaryTree::Node(0: 221, 2: BinaryTree::Leaf(0: 443), 1: BinaryTree::Leaf(0: 442)), 1: BinaryTree::Node(0: 220, 2: BinaryTree::Leaf(0: 441), 1: BinaryTree::Leaf(0: 440)))), 1: BinaryTree::Node(0: 54, 2: BinaryTree::Node(0: 109, 2: BinaryTree::Node(0: 219, 2: BinaryTree::Leaf(0: 439), 1: BinaryTree::Leaf(0: 438)), 1: BinaryTree::Node(0: 218, 2: BinaryTree::Leaf(0: 437), 1: BinaryTree::Leaf(0: 436))), 1: BinaryTree::Node(0: 108, 2: BinaryTree::Node(0: 217, 2: BinaryTree::Leaf(0: 435), 1: BinaryTree::Leaf(0: 434)), 1: BinaryTree::Node(0: 216, 2: BinaryTree::Leaf(0: 433), 1: BinaryTree::Leaf(0: 432))))), 1: BinaryTree::Node(0: 26, 2: BinaryTree::Node(0: 53, 2: BinaryTree::Node(0: 107, 2: BinaryTree::Node(0: 215, 2: BinaryTree::Leaf(0: 431), 1: BinaryTree::Leaf(0: 430)), 1: BinaryTree::Node(0: 214, 2: BinaryTree::Leaf(0: 429), 1: BinaryTree::Leaf(0: 428))), 1: BinaryTree::Node(0: 106, 2: BinaryTree::Node(0: 213, 2: BinaryTree::Leaf(0: 427), 1: BinaryTree::Leaf(0: 426)), 1: BinaryTree::Node(0: 212, 2: BinaryTree::Leaf(0: 425), 1: BinaryTree::Leaf(0: 424)))), 1: BinaryTree::Node(0: 52, 2: BinaryTree::Node(0: 105, 2: BinaryTree::Node(0: 211, 2: BinaryTree::Leaf(0: 423), 1: BinaryTree::Leaf(0: 422)), 1: BinaryTree::Node(0: 210, 2: BinaryTree::Leaf(0: 421), 1: BinaryTree::Leaf(0: 420))), 1: BinaryTree::Node(0: 104, 2: BinaryTree::Node(0: 209, 2: BinaryTree::Leaf(0: 419), 1: BinaryTree::Leaf(0: 418)), 1: BinaryTree::Node(0: 208, 2: BinaryTree::Leaf(0: 417), 1: BinaryTree::Leaf(0: 416)))))), 1: BinaryTree::Node(0: 12, 2: BinaryTree::Node(0: 25, 2: BinaryTree::Node(0: 51, 2: BinaryTree::Node(0: 103, 2: BinaryTree::Node(0: 207, 2: BinaryTree::Leaf(0: 415), 1: BinaryTree::Leaf(0: 414)), 1: BinaryTree::Node(0: 206, 2: BinaryTree::Leaf(0: 413), 1: BinaryTree::Leaf(0: 412))), 1: BinaryTree::Node(0: 102, 2: BinaryTree::Node(0: 205, 2: BinaryTree::Leaf(0: 411), 1: BinaryTree::Leaf(0: 410)), 1: BinaryTree::Node(0: 204, 2: BinaryTree::Leaf(0: 409), 1: BinaryTree::Leaf(0: 408)))), 1: BinaryTree::Node(0: 50, 2: BinaryTree::Node(0: 101, 2: BinaryTree::Node(0: 203, 2: BinaryTree::Leaf(0: 407), 1: BinaryTree::Leaf(0: 406)), 1: BinaryTree::Node(0: 202, 2: BinaryTree::Leaf(0: 405), 1: BinaryTree::Leaf(0: 404))), 1: BinaryTree::Node(0: 100, 2: BinaryTree::Node(0: 201, 2: BinaryTree::Leaf(0: 403), 1: BinaryTree::Leaf(0: 402)), 1: BinaryTree::Node(0: 200, 2: BinaryTree::Leaf(0: 401), 1: BinaryTree::Leaf(0: 400))))), 1: BinaryTree::Node(0: 24, 2: BinaryTree::Node(0: 49, 2: BinaryTree::Node(0: 99, 2: BinaryTree::Node(0: 199, 2: BinaryTree::Leaf(0: 399), 1: BinaryTree::Leaf(0: 398)), 1: BinaryTree::Node(0: 198, 2: BinaryTree::Leaf(0: 397), 1: BinaryTree::Leaf(0: 396))), 1: BinaryTree::Node(0: 98, 2: BinaryTree::Node(0: 197, 2: BinaryTree::Leaf(0: 395), 1: BinaryTree::Leaf(0: 394)), 1: BinaryTree::Node(0: 196, 2: BinaryTree::Leaf(0: 393), 1: BinaryTree::Leaf(0: 392)))), 1: BinaryTree::Node(0: 48, 2: BinaryTree::Node(0: 97, 2: BinaryTree::Node(0: 195, 2: BinaryTree::Leaf(0: 391), 1: BinaryTree::Leaf(0: 390)), 1: BinaryTree::Node(0: 194, 2: BinaryTree::Leaf(0: 389), 1: BinaryTree::Leaf(0: 388))), 1: BinaryTree::Node(0: 96, 2: BinaryTree::Node(0: 193, 2: BinaryTree::Leaf(0: 387), 1: BinaryTree::Leaf(0: 386)), 1: BinaryTree::Node(0: 192, 2: BinaryTree::Leaf(0: 385), 1: BinaryTree::Leaf(0: 384)))))))), 1: BinaryTree::Node(0: 2, 2: BinaryTree::Node(0: 5, 2: BinaryTree::Node(0: 11, 2: BinaryTree::Node(0: 23, 2: BinaryTree::Node(0: 47, 2: BinaryTree::Node(0: 95, 2: BinaryTree::Node(0: 191, 2: BinaryTree::Leaf(0: 383), 1: BinaryTree::Leaf(0: 382)), 1: BinaryTree::Node(0: 190, 2: BinaryTree::Leaf(0: 381), 1: BinaryTree::Leaf(0: 380))), 1: BinaryTree::Node(0: 94, 2: BinaryTree::Node(0: 189, 2: BinaryTree::Leaf(0: 379), 1: BinaryTree::Leaf(0: 378)), 1: BinaryTree::Node(0: 188, 2: BinaryTree::Leaf(0: 377), 1: BinaryTree::Leaf(0: 376)))), 1: BinaryTree::Node(0: 46, 2: BinaryTree::Node(0: 93, 2: BinaryTree::Node(0: 187, 2: BinaryTree::Leaf(0: 375), 1: BinaryTree::Leaf(0: 374)), 1: BinaryTree::Node(0: 186, 2: BinaryTree::Leaf(0: 373), 1: BinaryTree::Leaf(0: 372))), 1: BinaryTree::Node(0: 92, 2: BinaryTree::Node(0: 185, 2: BinaryTree::Leaf(0: 371), 1: BinaryTree::Leaf(0: 370)), 1: BinaryTree::Node(0: 184, 2: BinaryTree::Leaf(0: 369), 1: BinaryTree::Leaf(0: 368))))), 1: BinaryTree::Node(0: 22, 2: BinaryTree::Node(0: 45, 2: BinaryTree::Node(0: 91, 2: BinaryTree::Node(0: 183, 2: BinaryTree::Leaf(0: 367), 1: BinaryTree::Leaf(0: 366)), 1: BinaryTree::Node(0: 182, 2: BinaryTree::Leaf(0: 365), 1: BinaryTree::Leaf(0: 364))), 1: BinaryTree::Node(0: 90, 2: BinaryTree::Node(0: 181, 2: BinaryTree::Leaf(0: 363), 1: BinaryTree::Leaf(0: 362)), 1: BinaryTree::Node(0: 180, 2: BinaryTree::Leaf(0: 361), 1: BinaryTree::Leaf(0: 360)))), 1: BinaryTree::Node(0: 44, 2: BinaryTree::Node(0: 89, 2: BinaryTree::Node(0: 179, 2: BinaryTree::Leaf(0: 359), 1: BinaryTree::Leaf(0: 358)), 1: BinaryTree::Node(0: 178, 2: BinaryTree::Leaf(0: 357), 1: BinaryTree::Leaf(0: 356))), 1: BinaryTree::Node(0: 88, 2: BinaryTree::Node(0: 177, 2: BinaryTree::Leaf(0: 355), 1: BinaryTree::Leaf(0: 354)), 1: BinaryTree::Node(0: 176, 2: BinaryTree::Leaf(0: 353), 1: BinaryTree::Leaf(0: 352)))))), 1: BinaryTree::Node(0: 10, 2: BinaryTree::Node(0: 21, 2: BinaryTree::Node(0: 43, 2: BinaryTree::Node(0: 87, 2: BinaryTree::Node(0: 175, 2: BinaryTree::Leaf(0: 351), 1: BinaryTree::Leaf(0: 350)), 1: BinaryTree::Node(0: 174, 2: BinaryTree::Leaf(0: 349), 1: BinaryTree::Leaf(0: 348))), 1: BinaryTree::Node(0: 86, 2: BinaryTree::Node(0: 173, 2: BinaryTree::Leaf(0: 347), 1: BinaryTree::Leaf(0: 346)), 1: BinaryTree::Node(0: 172, 2: BinaryTree::Leaf(0: 345), 1: BinaryTree::Leaf(0: 344)))), 1: BinaryTree::Node(0: 42, 2: BinaryTree::Node(0: 85, 2: BinaryTree::Node(0: 171, 2: BinaryTree::Leaf(0: 343), 1: BinaryTree::Leaf(0: 342)), 1: BinaryTree::Node(0: 170, 2: BinaryTree::Leaf(0: 341), 1: BinaryTree::Leaf(0: 340))), 1: BinaryTree::Node(0: 84, 2: BinaryTree::Node(0: 169, 2: BinaryTree::Leaf(0: 339), 1: BinaryTree::Leaf(0: 338)), 1: BinaryTree::Node(0: 168, 2: BinaryTree::Leaf(0: 337), 1: BinaryTree::Leaf(0: 336))))), 1: BinaryTree::Node(0: 20, 2: BinaryTree::Node(0: 41, 2: BinaryTree::Node(0: 83, 2: BinaryTree::Node(0: 167, 2: BinaryTree::Leaf(0: 335), 1: BinaryTree::Leaf(0: 334)), 1: BinaryTree::Node(0: 166, 2: BinaryTree::Leaf(0: 333), 1: BinaryTree::Leaf(0: 332))), 1: BinaryTree::Node(0: 82, 2: BinaryTree::Node(0: 165, 2: BinaryTree::Leaf(0: 331), 1: BinaryTree::Leaf(0: 330)), 1: BinaryTree::Node(0: 164, 2: BinaryTree::Leaf(0: 329), 1: BinaryTree::Leaf(0: 328)))), 1: BinaryTree::Node(0: 40, 2: BinaryTree::Node(0: 81, 2: BinaryTree::Node(0: 163, 2: BinaryTree::Leaf(0: 327), 1: BinaryTree::Leaf(0: 326)), 1: BinaryTree::Node(0: 162, 2: BinaryTree::Leaf(0: 325), 1: BinaryTree::Leaf(0: 324))), 1: BinaryTree::Node(0: 80, 2: BinaryTree::Node(0: 161, 2: BinaryTree::Leaf(0: 323), 1: BinaryTree::Leaf(0: 322)), 1: BinaryTree::Node(0: 160, 2: BinaryTree::Leaf(0: 321), 1: BinaryTree::Leaf(0: 320))))))), 1: BinaryTree::Node(0: 4, 2: BinaryTree::Node(0: 9, 2: BinaryTree::Node(0: 19, 2: BinaryTree::Node(0: 39, 2: BinaryTree::Node(0: 79, 2: BinaryTree::Node(0: 159, 2: BinaryTree::Leaf(0: 319), 1: BinaryTree::Leaf(0: 318)), 1: BinaryTree::Node(0: 158, 2: BinaryTree::Leaf(0: 317), 1: BinaryTree::Leaf(0: 316))), 1: BinaryTree::Node(0: 78, 2: BinaryTree::Node(0: 157, 2: BinaryTree::Leaf(0: 315), 1: BinaryTree::Leaf(0: 314)), 1: BinaryTree::Node(0: 156, 2: BinaryTree::Leaf(0: 313), 1: BinaryTree::Leaf(0: 312)))), 1: BinaryTree::Node(0: 38, 2: BinaryTree::Node(0: 77, 2: BinaryTree::Node(0: 155, 2: BinaryTree::Leaf(0: 311), 1: BinaryTree::Leaf(0: 310)), 1: BinaryTree::Node(0: 154, 2: BinaryTree::Leaf(0: 309), 1: BinaryTree::Leaf(0: 308))), 1: BinaryTree::Node(0: 76, 2: BinaryTree::Node(0: 153, 2: BinaryTree::Leaf(0: 307), 1: BinaryTree::Leaf(0: 306)), 1: BinaryTree::Node(0: 152, 2: BinaryTree::Leaf(0: 305), 1: BinaryTree::Leaf(0: 304))))), 1: BinaryTree::Node(0: 18, 2: BinaryTree::Node(0: 37, 2: BinaryTree::Node(0: 75, 2: BinaryTree::Node(0: 151, 2: BinaryTree::Leaf(0: 303), 1: BinaryTree::Leaf(0: 302)), 1: BinaryTree::Node(0: 150, 2: BinaryTree::Leaf(0: 301), 1: BinaryTree::Leaf(0: 300))), 1: BinaryTree::Node(0: 74, 2: BinaryTree::Node(0: 149, 2: BinaryTree::Leaf(0: 299), 1: BinaryTree::Leaf(0: 298)), 1: BinaryTree::Node(0: 148, 2: BinaryTree::Leaf(0: 297), 1: BinaryTree::Leaf(0: 296)))), 1: BinaryTree::Node(0: 36, 2: BinaryTree::Node(0: 73, 2: BinaryTree::Node(0: 147, 2: BinaryTree::Leaf(0: 295), 1: BinaryTree::Leaf(0: 294)), 1: BinaryTree::Node(0: 146, 2: BinaryTree::Leaf(0: 293), 1: BinaryTree::Leaf(0: 292))), 1: BinaryTree::Node(0: 72, 2: BinaryTree::Node(0: 145, 2: BinaryTree::Leaf(0: 291), 1: BinaryTree::Leaf(0: 290)), 1: BinaryTree::Node(0: 144, 2: BinaryTree::Leaf(0: 289), 1: BinaryTree::Leaf(0: 288)))))), 1: BinaryTree::Node(0: 8, 2: BinaryTree::Node(0: 17, 2: BinaryTree::Node(0: 35, 2: BinaryTree::Node(0: 71, 2: BinaryTree::Node(0: 143, 2: BinaryTree::Leaf(0: 287), 1: BinaryTree::Leaf(0: 286)), 1: BinaryTree::Node(0: 142, 2: BinaryTree::Leaf(0: 285), 1: BinaryTree::Leaf(0: 284))), 1: BinaryTree::Node(0: 70, 2: BinaryTree::Node(0: 141, 2: BinaryTree::Leaf(0: 283), 1: BinaryTree::Leaf(0: 282)), 1: BinaryTree::Node(0: 140, 2: BinaryTree::Leaf(0: 281), 1: BinaryTree::Leaf(0: 280)))), 1: BinaryTree::Node(0: 34, 2: BinaryTree::Node(0: 69, 2: BinaryTree::Node(0: 139, 2: BinaryTree::Leaf(0: 279), 1: BinaryTree::Leaf(0: 278)), 1: BinaryTree::Node(0: 138, 2: BinaryTree::Leaf(0: 277), 1: BinaryTree::Leaf(0: 276))), 1: BinaryTree::Node(0: 68, 2: BinaryTree::Node(0: 137, 2: BinaryTree::Leaf(0: 275), 1: BinaryTree::Leaf(0: 274)), 1: BinaryTree::Node(0: 136, 2: BinaryTree::Leaf(0: 273), 1: BinaryTree::Leaf(0: 272))))), 1: BinaryTree::Node(0: 16, 2: BinaryTree::Node(0: 33, 2: BinaryTree::Node(0: 67, 2: BinaryTree::Node(0: 135, 2: BinaryTree::Leaf(0: 271), 1: BinaryTree::Leaf(0: 270)), 1: BinaryTree::Node(0: 134, 2: BinaryTree::Leaf(0: 269), 1: BinaryTree::Leaf(0: 268))), 1: BinaryTree::Node(0: 66, 2: BinaryTree::Node(0: 133, 2: BinaryTree::Leaf(0: 267), 1: BinaryTree::Leaf(0: 266)), 1: BinaryTree::Node(0: 132, 2: BinaryTree::Leaf(0: 265), 1: BinaryTree::Leaf(0: 264)))), 1: BinaryTree::Node(0: 32, 2: BinaryTree::Node(0: 65, 2: BinaryTree::Node(0: 131, 2: BinaryTree::Leaf(0: 263), 1: BinaryTree::Leaf(0: 262)), 1: BinaryTree::Node(0: 130, 2: BinaryTree::Leaf(0: 261), 1: BinaryTree::Leaf(0: 260))), 1: BinaryTree::Node(0: 64, 2: BinaryTree::Node(0: 129, 2: BinaryTree::Leaf(0: 259), 1: BinaryTree::Leaf(0: 258)), 1: BinaryTree::Node(0: 128, 2: BinaryTree::Leaf(0: 257), 1: BinaryTree::Leaf(0: 256))))))))),
  },
  {
    BinaryTree::Node(0: 2, 2: BinaryTree::Node(0: 5, 2: BinaryTree::Node(0: 11, 2: BinaryTree::Node(0: 23, 2: BinaryTree::Node(0: 47, 2: BinaryTree::Node(0: 95, 2: BinaryTree::Node(0: 191, 2: BinaryTree::Leaf(0: 383), 1: BinaryTree::Leaf(0: 382)), 1: BinaryTree::Node(0: 190, 2: BinaryTree::Leaf(0: 381), 1: BinaryTree::Leaf(0: 380))), 1: BinaryTree::Node(0: 94, 2: BinaryTree::Node(0: 189, 2: BinaryTree::Leaf(0: 379), 1: BinaryTree::Leaf(0: 378)), 1: BinaryTree::Node(0: 188, 2: BinaryTree::Leaf(0: 377), 1: BinaryTree::Leaf(0: 376)))), 1: BinaryTree::Node(0: 46, 2: BinaryTree::Node(0: 93, 2: BinaryTree::Node(0: 187, 2: BinaryTree::Leaf(0: 375), 1: BinaryTree::Leaf(0: 374)), 1: BinaryTree::Node(0: 186, 2: BinaryTree::Leaf(0: 373), 1: BinaryTree::Leaf(0: 372))), 1: BinaryTree::Node(0: 92, 2: BinaryTree::Node(0: 185, 2: BinaryTree::Leaf(0: 371), 1: BinaryTree::Leaf(0: 370)), 1: BinaryTree::Node(0: 184, 2: BinaryTree::Leaf(0: 369), 1: BinaryTree::Leaf(0: 368))))), 1: BinaryTree::Node(0: 22, 2: BinaryTree::Node(0: 45, 2: BinaryTree::Node(0: 91, 2: BinaryTree::Node(0: 183, 2: BinaryTree::Leaf(0: 367), 1: BinaryTree::Leaf(0: 366)), 1: BinaryTree::Node(0: 182, 2: BinaryTree::Leaf(0: 365), 1: BinaryTree::Leaf(0: 364))), 1: BinaryTree::Node(0: 90, 2: BinaryTree::Node(0: 181, 2: BinaryTree::Leaf(0: 363), 1: BinaryTree::Leaf(0: 362)), 1: BinaryTree::Node(0: 180, 2: BinaryTree::Leaf(0: 361), 1: BinaryTree::Leaf(0: 360)))), 1: BinaryTree::Node(0: 44, 2: BinaryTree::Node(0: 89, 2: BinaryTree::Node(0: 179, 2: BinaryTree::Leaf(0: 359), 1: BinaryTree::Leaf(0: 358)), 1: BinaryTree::Node(0: 178, 2: BinaryTree::Leaf(0: 357), 1: BinaryTree::Leaf(0: 356))), 1: BinaryTree::Node(0: 88, 2: BinaryTree::Node(0: 177, 2: BinaryTree::Leaf(0: 355), 1: BinaryTree::Leaf(0: 354)), 1: BinaryTree::Node(0: 176, 2: BinaryTree::Leaf(0: 353), 1: BinaryTree::Leaf(0: 352)))))), 1: BinaryTree::Node(0: 10, 2: BinaryTree::Node(0: 21, 2: BinaryTree::Node(0: 43, 2: BinaryTree::Node(0: 87, 2: BinaryTree::Node(0: 175, 2: BinaryTree::Leaf(0: 351), 1: BinaryTree::Leaf(0: 350)), 1: BinaryTree::Node(0: 174, 2: BinaryTree::Leaf(0: 349), 1: BinaryTree::Leaf(0: 348))), 1: BinaryTree::Node(0: 86, 2: BinaryTree::Node(0: 173, 2: BinaryTree::Leaf(0: 347), 1: BinaryTree::Leaf(0: 346)), 1: BinaryTree::Node(0: 172, 2: BinaryTree::Leaf(0: 345), 1: BinaryTree::Leaf(0: 344)))), 1: BinaryTree::Node(0: 42, 2: BinaryTree::Node(0: 85, 2: BinaryTree::Node(0: 171, 2: BinaryTree::Leaf(0: 343), 1: BinaryTree::Leaf(0: 342)), 1: BinaryTree::Node(0: 170, 2: BinaryTree::Leaf(0: 341), 1: BinaryTree::Leaf(0: 340))), 1: BinaryTree::Node(0: 84, 2: BinaryTree::Node(0: 169, 2: BinaryTree::Leaf(0: 339), 1: BinaryTree::Leaf(0: 338)), 1: BinaryTree::Node(0: 168, 2: BinaryTree::Leaf(0: 337), 1: BinaryTree::Leaf(0: 336))))), 1: BinaryTree::Node(0: 20, 2: BinaryTree::Node(0: 41, 2: BinaryTree::Node(0: 83, 2: BinaryTree::Node(0: 167, 2: BinaryTree::Leaf(0: 335), 1: BinaryTree::Leaf(0: 334)), 1: BinaryTree::Node(0: 166, 2: BinaryTree::Leaf(0: 333), 1: BinaryTree::Leaf(0: 332))), 1: BinaryTree::Node(0: 82, 2: BinaryTree::Node(0: 165, 2: BinaryTree::Leaf(0: 331), 1: BinaryTree::Leaf(0: 330)), 1: BinaryTree::Node(0: 164, 2: BinaryTree::Leaf(0: 329), 1: BinaryTree::Leaf(0: 328)))), 1: BinaryTree::Node(0: 40, 2: BinaryTree::Node(0: 81, 2: BinaryTree::Node(0: 163, 2: BinaryTree::Leaf(0: 327), 1: BinaryTree::Leaf(0: 326)), 1: BinaryTree::Node(0: 162, 2: BinaryTree::Leaf(0: 325), 1: BinaryTree::Leaf(0: 324))), 1: BinaryTree::Node(0: 80, 2: BinaryTree::Node(0: 161, 2: BinaryTree::Leaf(0: 323), 1: BinaryTree::Leaf(0: 322)), 1: BinaryTree::Node(0: 160, 2: BinaryTree::Leaf(0: 321), 1: BinaryTree::Leaf(0: 320))))))), 1: BinaryTree::Node(0: 4, 2: BinaryTree::Node(0: 9, 2: BinaryTree::Node(0: 19, 2: BinaryTree::Node(0: 39, 2: BinaryTree::Node(0: 79, 2: BinaryTree::Node(0: 159, 2: BinaryTree::Leaf(0: 319), 1: BinaryTree::Leaf(0: 318)), 1: BinaryTree::Node(0: 158, 2: BinaryTree::Leaf(0: 317), 1: BinaryTree::Leaf(0: 316))), 1: BinaryTree::Node(0: 78, 2: BinaryTree::Node(0: 157, 2: BinaryTree::Leaf(0: 315), 1: BinaryTree::Leaf(0: 314)), 1: BinaryTree::Node(0: 156, 2: BinaryTree::Leaf(0: 313), 1: BinaryTree::Leaf(0: 312)))), 1: BinaryTree::Node(0: 38, 2: BinaryTree::Node(0: 77, 2: BinaryTree::Node(0: 155, 2: BinaryTree::Leaf(0: 311), 1: BinaryTree::Leaf(0: 310)), 1: BinaryTree::Node(0: 154, 2: BinaryTree::Leaf(0: 309), 1: BinaryTree::Leaf(0: 308))), 1: BinaryTree::Node(0: 76, 2: BinaryTree::Node(0: 153, 2: BinaryTree::Leaf(0: 307), 1: BinaryTree::Leaf(0: 306)), 1: BinaryTree::Node(0: 152, 2: BinaryTree::Leaf(0: 305), 1: BinaryTree::Leaf(0: 304))))), 1: BinaryTree::Node(0: 18, 2: BinaryTree::Node(0: 37, 2: BinaryTree::Node(0: 75, 2: BinaryTree::Node(0: 151, 2: BinaryTree::Leaf(0: 303), 1: BinaryTree::Leaf(0: 302)), 1: BinaryTree::Node(0: 150, 2: BinaryTree::Leaf(0: 301), 1: BinaryTree::Leaf(0: 300))), 1: BinaryTree::Node(0: 74, 2: BinaryTree::Node(0: 149, 2: BinaryTree::Leaf(0: 299), 1: BinaryTree::Leaf(0: 298)), 1: BinaryTree::Node(0: 148, 2: BinaryTree::Leaf(0: 297), 1: BinaryTree::Leaf(0: 296)))), 1: BinaryTree::Node(0: 36, 2: BinaryTree::Node(0: 73, 2: BinaryTree::Node(0: 147, 2: BinaryTree::Leaf(0: 295), 1: BinaryTree::Leaf(0: 294)), 1: BinaryTree::Node(0: 146, 2: BinaryTree::Leaf(0: 293), 1: BinaryTree::Leaf(0: 292))), 1: BinaryTree::Node(0: 72, 2: BinaryTree::Node(0: 145, 2: BinaryTree::Leaf(0: 291), 1: BinaryTree::Leaf(0: 290)), 1: BinaryTree::Node(0: 144, 2: BinaryTree::Leaf(0: 289), 1: BinaryTree::Leaf(0: 288)))))), 1: BinaryTree::Node(0: 8, 2: BinaryTree::Node(0: 17, 2: BinaryTree::Node(0: 35, 2: BinaryTree::Node(0: 71, 2: BinaryTree::Node(0: 143, 2: BinaryTree::Leaf(0: 287), 1: BinaryTree::Leaf(0: 286)), 1: BinaryTree::Node(0: 142, 2: BinaryTree::Leaf(0: 285), 1: BinaryTree::Leaf(0: 284))), 1: BinaryTree::Node(0: 70, 2: BinaryTree::Node(0: 141, 2: BinaryTree::Leaf(0: 283), 1: BinaryTree::Leaf(0: 282)), 1: BinaryTree::Node(0: 140, 2: BinaryTree::Leaf(0: 281), 1: BinaryTree::Leaf(0: 280)))), 1: BinaryTree::Node(0: 34, 2: BinaryTree::Node(0: 69, 2: BinaryTree::Node(0: 139, 2: BinaryTree::Leaf(0: 279), 1: BinaryTree::Leaf(0: 278)), 1: BinaryTree::Node(0: 138, 2: BinaryTree::Leaf(0: 277), 1: BinaryTree::Leaf(0: 276))), 1: BinaryTree::Node(0: 68, 2: BinaryTree::Node(0: 137, 2: BinaryTree::Leaf(0: 275), 1: BinaryTree::Leaf(0: 274)), 1: BinaryTree::Node(0: 136, 2: BinaryTree::Leaf(0: 273), 1: BinaryTree::Leaf(0: 272))))), 1: BinaryTree::Node(0: 16, 2: BinaryTree::Node(0: 33, 2: BinaryTree::Node(0: 67, 2: BinaryTree::Node(0: 135, 2: BinaryTree::Leaf(0: 271), 1: BinaryTree::Leaf(0: 270)), 1: BinaryTree::Node(0: 134, 2: BinaryTree::Leaf(0: 269), 1: BinaryTree::Leaf(0: 268))), 1: BinaryTree::Node(0: 66, 2: BinaryTree::Node(0: 133, 2: BinaryTree::Leaf(0: 267), 1: BinaryTree::Leaf(0: 266)), 1: BinaryTree::Node(0: 132, 2: BinaryTree::Leaf(0: 265), 1: BinaryTree::Leaf(0: 264)))), 1: BinaryTree::Node(0: 32, 2: BinaryTree::Node(0: 65, 2: BinaryTree::Node(0: 131, 2: BinaryTree::Leaf(0: 263), 1: BinaryTree::Leaf(0: 262)), 1: BinaryTree::Node(0: 130, 2: BinaryTree::Leaf(0: 261), 1: BinaryTree::Leaf(0: 260))), 1: BinaryTree::Node(0: 64, 2: BinaryTree::Node(0: 129, 2: BinaryTree::Leaf(0: 259), 1: BinaryTree::Leaf(0: 258)), 1: BinaryTree::Node(0: 128, 2: BinaryTree::Leaf(0: 257), 1: BinaryTree::Leaf(0: 256)))))))),
    BinaryTree::Node(0: 3, 2: BinaryTree::Node(0: 7, 2: BinaryTree::Node(0: 15, 2: BinaryTree::Node(0: 31, 2: BinaryTree::Node(0: 63, 2: BinaryTree::Node(0: 127, 2: BinaryTree::Node(0: 255, 2: BinaryTree::Leaf(0: 511), 1: BinaryTree::Leaf(0: 510)), 1: BinaryTree::Node(0: 254, 2: BinaryTree::Leaf(0: 509), 1: BinaryTree::Leaf(0: 508))), 1: BinaryTree::Node(0: 126, 2: BinaryTree::Node(0: 253, 2: BinaryTree::Leaf(0: 507), 1: BinaryTree::Leaf(0: 506)), 1: BinaryTree::Node(0: 252, 2: BinaryTree::Leaf(0: 505), 1: BinaryTree::Leaf(0: 504)))), 1: BinaryTree::Node(0: 62, 2: BinaryTree::Node(0: 125, 2: BinaryTree::Node(0: 251, 2: BinaryTree::Leaf(0: 503), 1: BinaryTree::Leaf(0: 502)), 1: BinaryTree::Node(0: 250, 2: BinaryTree::Leaf(0: 501), 1: BinaryTree::Leaf(0: 500))), 1: BinaryTree::Node(0: 124, 2: BinaryTree::Node(0: 249, 2: BinaryTree::Leaf(0: 499), 1: BinaryTree::Leaf(0: 498)), 1: BinaryTree::Node(0: 248, 2: BinaryTree::Leaf(0: 497), 1: BinaryTree::Leaf(0: 496))))), 1: BinaryTree::Node(0: 30, 2: BinaryTree::Node(0: 61, 2: BinaryTree::Node(0: 123, 2: BinaryTree::Node(0: 247, 2: BinaryTree::Leaf(0: 495), 1: BinaryTree::Leaf(0: 494)), 1: BinaryTree::Node(0: 246, 2: BinaryTree::Leaf(0: 493), 1: BinaryTree::Leaf(0: 492))), 1: BinaryTree::Node(0: 122, 2: BinaryTree::Node(0: 245, 2: BinaryTree::Leaf(0: 491), 1: BinaryTree::Leaf(0: 490)), 1: BinaryTree::Node(0: 244, 2: BinaryTree::Leaf(0: 489), 1: BinaryTree::Leaf(0: 488)))), 1: BinaryTree::Node(0: 60, 2: BinaryTree::Node(0: 121, 2: BinaryTree::Node(0: 243, 2: BinaryTree::Leaf(0: 487), 1: BinaryTree::Leaf(0: 486)), 1: BinaryTree::Node(0: 242, 2: BinaryTree::Leaf(0: 485), 1: BinaryTree::Leaf(0: 484))), 1: BinaryTree::Node(0: 120, 2: BinaryTree::Node(0: 241, 2: BinaryTree::Leaf(0: 483), 1: BinaryTree::Leaf(0: 482)), 1: BinaryTree::Node(0: 240, 2: BinaryTree::Leaf(0: 481), 1: BinaryTree::Leaf(0: 480)))))), 1: BinaryTree::Node(0: 14, 2: BinaryTree::Node(0: 29, 2: BinaryTree::Node(0: 59, 2: BinaryTree::Node(0: 119, 2: BinaryTree::Node(0: 239, 2: BinaryTree::Leaf(0: 479), 1: BinaryTree::Leaf(0: 478)), 1: BinaryTree::Node(0: 238, 2: BinaryTree::Leaf(0: 477), 1: BinaryTree::Leaf(0: 476))), 1: BinaryTree::Node(0: 118, 2: BinaryTree::Node(0: 237, 2: BinaryTree::Leaf(0: 475), 1: BinaryTree::Leaf(0: 474)), 1: BinaryTree::Node(0: 236, 2: BinaryTree::Leaf(0: 473), 1: BinaryTree::Leaf(0: 472)))), 1: BinaryTree::Node(0: 58, 2: BinaryTree::Node(0: 117, 2: BinaryTree::Node(0: 235, 2: BinaryTree::Leaf(0: 471), 1: BinaryTree::Leaf(0: 470)), 1: BinaryTree::Node(0: 234, 2: BinaryTree::Leaf(0: 469), 1: BinaryTree::Leaf(0: 468))), 1: BinaryTree::Node(0: 116, 2: BinaryTree::Node(0: 233, 2: BinaryTree::Leaf(0: 467), 1: BinaryTree::Leaf(0: 466)), 1: BinaryTree::Node(0: 232, 2: BinaryTree::Leaf(0: 465), 1: BinaryTree::Leaf(0: 464))))), 1: BinaryTree::Node(0: 28, 2: BinaryTree::Node(0: 57, 2: BinaryTree::Node(0: 115, 2: BinaryTree::Node(0: 231, 2: BinaryTree::Leaf(0: 463), 1: BinaryTree::Leaf(0: 462)), 1: BinaryTree::Node(0: 230, 2: BinaryTree::Leaf(0: 461), 1: BinaryTree::Leaf(0: 460))), 1: BinaryTree::Node(0: 114, 2: BinaryTree::Node(0: 229, 2: BinaryTree::Leaf(0: 459), 1: BinaryTree::Leaf(0: 458)), 1: BinaryTree::Node(0: 228, 2: BinaryTree::Leaf(0: 457), 1: BinaryTree::Leaf(0: 456)))), 1: BinaryTree::Node(0: 56, 2: BinaryTree::Node(0: 113, 2: BinaryTree::Node(0: 227, 2: BinaryTree::Leaf(0: 455), 1: BinaryTree::Leaf(0: 454)), 1: BinaryTree::Node(0: 226, 2: BinaryTree::Leaf(0: 453), 1: BinaryTree::Leaf(0: 452))), 1: BinaryTree::Node(0: 112, 2: BinaryTree::Node(0: 225, 2: BinaryTree::Leaf(0: 451), 1: BinaryTree::Leaf(0: 450)), 1: BinaryTree::Node(0: 224, 2: BinaryTree::Leaf(0: 449), 1: BinaryTree::Leaf(0: 448))))))), 1: BinaryTree::Node(0: 6, 2: BinaryTree::Node(0: 13, 2: BinaryTree::Node(0: 27, 2: BinaryTree::Node(0: 55, 2: BinaryTree::Node(0: 111, 2: BinaryTree::Node(0: 223, 2: BinaryTree::Leaf(0: 447), 1: BinaryTree::Leaf(0: 446)), 1: BinaryTree::Node(0: 222, 2: BinaryTree::Leaf(0: 445), 1: BinaryTree::Leaf(0: 444))), 1: BinaryTree::Node(0: 110, 2: BinaryTree::Node(0: 221, 2: BinaryTree::Leaf(0: 443), 1: BinaryTree::Leaf(0: 442)), 1: BinaryTree::Node(0: 220, 2: BinaryTree::Leaf(0: 441), 1: BinaryTree::Leaf(0: 440)))), 1: BinaryTree::Node(0: 54, 2: BinaryTree::Node(0: 109, 2: BinaryTree::Node(0: 219, 2: BinaryTree::Leaf(0: 439), 1: BinaryTree::Leaf(0: 438)), 1: BinaryTree::Node(0: 218, 2: BinaryTree::Leaf(0: 437), 1: BinaryTree::Leaf(0: 436))), 1: BinaryTree::Node(0: 108, 2: BinaryTree::Node(0: 217, 2: BinaryTree::Leaf(0: 435), 1: BinaryTree::Leaf(0: 434)), 1: BinaryTree::Node(0: 216, 2: BinaryTree::Leaf(0: 433), 1: BinaryTree::Leaf(0: 432))))), 1: BinaryTree::Node(0: 26, 2: BinaryTree::Node(0: 53, 2: BinaryTree::Node(0: 107, 2: BinaryTree::Node(0: 215, 2: BinaryTree::Leaf(0: 431), 1: BinaryTree::Leaf(0: 430)), 1: BinaryTree::Node(0: 214, 2: BinaryTree::Leaf(0: 429), 1: BinaryTree::Leaf(0: 428))), 1: BinaryTree::Node(0: 106, 2: BinaryTree::Node(0: 213, 2: BinaryTree::Leaf(0: 427), 1: BinaryTree::Leaf(0: 426)), 1: BinaryTree::Node(0: 212, 2: BinaryTree::Leaf(0: 425), 1: BinaryTree::Leaf(0: 424)))), 1: BinaryTree::Node(0: 52, 2: BinaryTree::Node(0: 105, 2: BinaryTree::Node(0: 211, 2: BinaryTree::Leaf(0: 423), 1: BinaryTree::Leaf(0: 422)), 1: BinaryTree::Node(0: 210, 2: BinaryTree::Leaf(0: 421), 1: BinaryTree::Leaf(0: 420))), 1: BinaryTree::Node(0: 104, 2: BinaryTree::Node(0: 209, 2: BinaryTree::Leaf(0: 419), 1: BinaryTree::Leaf(0: 418)), 1: BinaryTree::Node(0: 208, 2: BinaryTree::Leaf(0: 417), 1: BinaryTree::Leaf(0: 416)))))), 1: BinaryTree::Node(0: 12, 2: BinaryTree::Node(0: 25, 2: BinaryTree::Node(0: 51, 2: BinaryTree::Node(0: 103, 2: BinaryTree::Node(0: 207, 2: BinaryTree::Leaf(0: 415), 1: BinaryTree::Leaf(0: 414)), 1: BinaryTree::Node(0: 206, 2: BinaryTree::Leaf(0: 413), 1: BinaryTree::Leaf(0: 412))), 1: BinaryTree::Node(0: 102, 2: BinaryTree::Node(0: 205, 2: BinaryTree::Leaf(0: 411), 1: BinaryTree::Leaf(0: 410)), 1: BinaryTree::Node(0: 204, 2: BinaryTree::Leaf(0: 409), 1: BinaryTree::Leaf(0: 408)))), 1: BinaryTree::Node(0: 50, 2: BinaryTree::Node(0: 101, 2: BinaryTree::Node(0: 203, 2: BinaryTree::Leaf(0: 407), 1: BinaryTree::Leaf(0: 406)), 1: BinaryTree::Node(0: 202, 2: BinaryTree::Leaf(0: 405), 1: BinaryTree::Leaf(0: 404))), 1: BinaryTree::Node(0: 100, 2: BinaryTree::Node(0: 201, 2: BinaryTree::Leaf(0: 403), 1: BinaryTree::Leaf(0: 402)), 1: BinaryTree::Node(0: 200, 2: BinaryTree::Leaf(0: 401), 1: BinaryTree::Leaf(0: 400))))), 1: BinaryTree::Node(0: 24, 2: BinaryTree::Node(0: 49, 2: BinaryTree::Node(0: 99, 2: BinaryTree::Node(0: 199, 2: BinaryTree::Leaf(0: 399), 1: BinaryTree::Leaf(0: 398)), 1: BinaryTree::Node(0: 198, 2: BinaryTree::Leaf(0: 397), 1: BinaryTree::Leaf(0: 396))), 1: BinaryTree::Node(0: 98, 2: BinaryTree::Node(0: 197, 2: BinaryTree::Leaf(0: 395), 1: BinaryTree::Leaf(0: 394)), 1: BinaryTree::Node(0: 196, 2: BinaryTree::Leaf(0: 393), 1: BinaryTree::Leaf(0: 392)))), 1: BinaryTree::Node(0: 48, 2: BinaryTree::Node(0: 97, 2: BinaryTree::Node(0: 195, 2: BinaryTree::Leaf(0: 391), 1: BinaryTree::Leaf(0: 390)), 1: BinaryTree::Node(0: 194, 2: BinaryTree::Leaf(0: 389), 1: BinaryTree::Leaf(0: 388))), 1: BinaryTree::Node(0: 96, 2: BinaryTree::Node(0: 193, 2: BinaryTree::Leaf(0: 387), 1: BinaryTree::Leaf(0: 386)), 1: BinaryTree::Node(0: 192, 2: BinaryTree::Leaf(0: 385), 1: BinaryTree::Leaf(0: 384)))))))),
  },
]

  at function tree_depth:49:41
  at root 82:12

stack backtrace:
   0: __rustc::rust_begin_unwind
   1: core::panicking::panic_fmt
   2: tlang_memory::state::InterpreterState::panic
   3: tlang_interpreter::Interpreter::panic
   4: tlang_interpreter::Interpreter::eval_expr
   5: tlang_interpreter::Interpreter::eval_call
   6: tlang_interpreter::Interpreter::eval_stmts
   7: tlang_interpreter::Interpreter::eval_expr
   8: tlang_interpreter::Interpreter::eval_fn_call
   9: tlang_interpreter::Interpreter::eval_call_object
  10: tlang_interpreter::Interpreter::eval_call
  11: tlang_interpreter::Interpreter::eval_call
  12: tlang_interpreter::Interpreter::eval_stmts
  13: tlangdi::main
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
