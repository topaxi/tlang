---
source: crates/tlang_test_runner/src/main.rs
description: Known failure - output may not match expected
expression: apply_redactions(&output)
input_file: tests/known_failures/recursive_data_structures.tlang
---
=== Recursive Data Structures Test ===
5050

[TIMESTAMP] WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'left' on line 49:41. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[TIMESTAMP] WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'right' on line 50:42. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[TIMESTAMP] WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'left' on line 49:41, as it has not been resolved
[TIMESTAMP] WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'right' on line 50:42, as it has not been resolved

thread 'main' panicked at crates/tlang_runtime/tlang_memory/src/state.rs:328:9:
Could not resolve path "left" (Res { hir_id: None, binding_kind: Unknown, slot: None })
Current scope: [
  {
    LinkedList::Empty,
    BinaryTree::Empty,
    fn create_list#17(n),
    fn create_balanced_tree#39(depth, value),
    fn sum_list#79(list),
    fn tree_depth#97(tree),
    fn create_unbalanced_tree#136(depth),
    LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Empty, 0: 1), 0: 2), 0: 3), 0: 4), 0: 5), 0: 6), 0: 7), 0: 8), 0: 9), 0: 10), 0: 11), 0: 12), 0: 13), 0: 14), 0: 15), 0: 16), 0: 17), 0: 18), 0: 19), 0: 20), 0: 21), 0: 22), 0: 23), 0: 24), 0: 25), 0: 26), 0: 27), 0: 28), 0: 29), 0: 30), 0: 31), 0: 32), 0: 33), 0: 34), 0: 35), 0: 36), 0: 37), 0: 38), 0: 39), 0: 40), 0: 41), 0: 42), 0: 43), 0: 44), 0: 45), 0: 46), 0: 47), 0: 48), 0: 49), 0: 50), 0: 51), 0: 52), 0: 53), 0: 54), 0: 55), 0: 56), 0: 57), 0: 58), 0: 59), 0: 60), 0: 61), 0: 62), 0: 63), 0: 64), 0: 65), 0: 66), 0: 67), 0: 68), 0: 69), 0: 70), 0: 71), 0: 72), 0: 73), 0: 74), 0: 75), 0: 76), 0: 77), 0: 78), 0: 79), 0: 80), 0: 81), 0: 82), 0: 83), 0: 84), 0: 85), 0: 86), 0: 87), 0: 88), 0: 89), 0: 90), 0: 91), 0: 92), 0: 93), 0: 94), 0: 95), 0: 96), 0: 97), 0: 98), 0: 99), 0: 100),
    BinaryTree::Node(0: 1, 1: BinaryTree::Node(0: 2, 1: BinaryTree::Node(0: 4, 1: BinaryTree::Node(0: 8, 1: BinaryTree::Node(0: 16, 1: BinaryTree::Node(0: 32, 1: BinaryTree::Node(0: 64, 1: BinaryTree::Node(0: 128, 1: BinaryTree::Leaf(0: 256), 2: BinaryTree::Leaf(0: 257)), 2: BinaryTree::Node(0: 129, 1: BinaryTree::Leaf(0: 258), 2: BinaryTree::Leaf(0: 259))), 2: BinaryTree::Node(0: 65, 1: BinaryTree::Node(0: 130, 1: BinaryTree::Leaf(0: 260), 2: BinaryTree::Leaf(0: 261)), 2: BinaryTree::Node(0: 131, 1: BinaryTree::Leaf(0: 262), 2: BinaryTree::Leaf(0: 263)))), 2: BinaryTree::Node(0: 33, 1: BinaryTree::Node(0: 66, 1: BinaryTree::Node(0: 132, 1: BinaryTree::Leaf(0: 264), 2: BinaryTree::Leaf(0: 265)), 2: BinaryTree::Node(0: 133, 1: BinaryTree::Leaf(0: 266), 2: BinaryTree::Leaf(0: 267))), 2: BinaryTree::Node(0: 67, 1: BinaryTree::Node(0: 134, 1: BinaryTree::Leaf(0: 268), 2: BinaryTree::Leaf(0: 269)), 2: BinaryTree::Node(0: 135, 1: BinaryTree::Leaf(0: 270), 2: BinaryTree::Leaf(0: 271))))), 2: BinaryTree::Node(0: 17, 1: BinaryTree::Node(0: 34, 1: BinaryTree::Node(0: 68, 1: BinaryTree::Node(0: 136, 1: BinaryTree::Leaf(0: 272), 2: BinaryTree::Leaf(0: 273)), 2: BinaryTree::Node(0: 137, 1: BinaryTree::Leaf(0: 274), 2: BinaryTree::Leaf(0: 275))), 2: BinaryTree::Node(0: 69, 1: BinaryTree::Node(0: 138, 1: BinaryTree::Leaf(0: 276), 2: BinaryTree::Leaf(0: 277)), 2: BinaryTree::Node(0: 139, 1: BinaryTree::Leaf(0: 278), 2: BinaryTree::Leaf(0: 279)))), 2: BinaryTree::Node(0: 35, 1: BinaryTree::Node(0: 70, 1: BinaryTree::Node(0: 140, 1: BinaryTree::Leaf(0: 280), 2: BinaryTree::Leaf(0: 281)), 2: BinaryTree::Node(0: 141, 1: BinaryTree::Leaf(0: 282), 2: BinaryTree::Leaf(0: 283))), 2: BinaryTree::Node(0: 71, 1: BinaryTree::Node(0: 142, 1: BinaryTree::Leaf(0: 284), 2: BinaryTree::Leaf(0: 285)), 2: BinaryTree::Node(0: 143, 1: BinaryTree::Leaf(0: 286), 2: BinaryTree::Leaf(0: 287)))))), 2: BinaryTree::Node(0: 9, 1: BinaryTree::Node(0: 18, 1: BinaryTree::Node(0: 36, 1: BinaryTree::Node(0: 72, 1: BinaryTree::Node(0: 144, 1: BinaryTree::Leaf(0: 288), 2: BinaryTree::Leaf(0: 289)), 2: BinaryTree::Node(0: 145, 1: BinaryTree::Leaf(0: 290), 2: BinaryTree::Leaf(0: 291))), 2: BinaryTree::Node(0: 73, 1: BinaryTree::Node(0: 146, 1: BinaryTree::Leaf(0: 292), 2: BinaryTree::Leaf(0: 293)), 2: BinaryTree::Node(0: 147, 1: BinaryTree::Leaf(0: 294), 2: BinaryTree::Leaf(0: 295)))), 2: BinaryTree::Node(0: 37, 1: BinaryTree::Node(0: 74, 1: BinaryTree::Node(0: 148, 1: BinaryTree::Leaf(0: 296), 2: BinaryTree::Leaf(0: 297)), 2: BinaryTree::Node(0: 149, 1: BinaryTree::Leaf(0: 298), 2: BinaryTree::Leaf(0: 299))), 2: BinaryTree::Node(0: 75, 1: BinaryTree::Node(0: 150, 1: BinaryTree::Leaf(0: 300), 2: BinaryTree::Leaf(0: 301)), 2: BinaryTree::Node(0: 151, 1: BinaryTree::Leaf(0: 302), 2: BinaryTree::Leaf(0: 303))))), 2: BinaryTree::Node(0: 19, 1: BinaryTree::Node(0: 38, 1: BinaryTree::Node(0: 76, 1: BinaryTree::Node(0: 152, 1: BinaryTree::Leaf(0: 304), 2: BinaryTree::Leaf(0: 305)), 2: BinaryTree::Node(0: 153, 1: BinaryTree::Leaf(0: 306), 2: BinaryTree::Leaf(0: 307))), 2: BinaryTree::Node(0: 77, 1: BinaryTree::Node(0: 154, 1: BinaryTree::Leaf(0: 308), 2: BinaryTree::Leaf(0: 309)), 2: BinaryTree::Node(0: 155, 1: BinaryTree::Leaf(0: 310), 2: BinaryTree::Leaf(0: 311)))), 2: BinaryTree::Node(0: 39, 1: BinaryTree::Node(0: 78, 1: BinaryTree::Node(0: 156, 1: BinaryTree::Leaf(0: 312), 2: BinaryTree::Leaf(0: 313)), 2: BinaryTree::Node(0: 157, 1: BinaryTree::Leaf(0: 314), 2: BinaryTree::Leaf(0: 315))), 2: BinaryTree::Node(0: 79, 1: BinaryTree::Node(0: 158, 1: BinaryTree::Leaf(0: 316), 2: BinaryTree::Leaf(0: 317)), 2: BinaryTree::Node(0: 159, 1: BinaryTree::Leaf(0: 318), 2: BinaryTree::Leaf(0: 319))))))), 2: BinaryTree::Node(0: 5, 1: BinaryTree::Node(0: 10, 1: BinaryTree::Node(0: 20, 1: BinaryTree::Node(0: 40, 1: BinaryTree::Node(0: 80, 1: BinaryTree::Node(0: 160, 1: BinaryTree::Leaf(0: 320), 2: BinaryTree::Leaf(0: 321)), 2: BinaryTree::Node(0: 161, 1: BinaryTree::Leaf(0: 322), 2: BinaryTree::Leaf(0: 323))), 2: BinaryTree::Node(0: 81, 1: BinaryTree::Node(0: 162, 1: BinaryTree::Leaf(0: 324), 2: BinaryTree::Leaf(0: 325)), 2: BinaryTree::Node(0: 163, 1: BinaryTree::Leaf(0: 326), 2: BinaryTree::Leaf(0: 327)))), 2: BinaryTree::Node(0: 41, 1: BinaryTree::Node(0: 82, 1: BinaryTree::Node(0: 164, 1: BinaryTree::Leaf(0: 328), 2: BinaryTree::Leaf(0: 329)), 2: BinaryTree::Node(0: 165, 1: BinaryTree::Leaf(0: 330), 2: BinaryTree::Leaf(0: 331))), 2: BinaryTree::Node(0: 83, 1: BinaryTree::Node(0: 166, 1: BinaryTree::Leaf(0: 332), 2: BinaryTree::Leaf(0: 333)), 2: BinaryTree::Node(0: 167, 1: BinaryTree::Leaf(0: 334), 2: BinaryTree::Leaf(0: 335))))), 2: BinaryTree::Node(0: 21, 1: BinaryTree::Node(0: 42, 1: BinaryTree::Node(0: 84, 1: BinaryTree::Node(0: 168, 1: BinaryTree::Leaf(0: 336), 2: BinaryTree::Leaf(0: 337)), 2: BinaryTree::Node(0: 169, 1: BinaryTree::Leaf(0: 338), 2: BinaryTree::Leaf(0: 339))), 2: BinaryTree::Node(0: 85, 1: BinaryTree::Node(0: 170, 1: BinaryTree::Leaf(0: 340), 2: BinaryTree::Leaf(0: 341)), 2: BinaryTree::Node(0: 171, 1: BinaryTree::Leaf(0: 342), 2: BinaryTree::Leaf(0: 343)))), 2: BinaryTree::Node(0: 43, 1: BinaryTree::Node(0: 86, 1: BinaryTree::Node(0: 172, 1: BinaryTree::Leaf(0: 344), 2: BinaryTree::Leaf(0: 345)), 2: BinaryTree::Node(0: 173, 1: BinaryTree::Leaf(0: 346), 2: BinaryTree::Leaf(0: 347))), 2: BinaryTree::Node(0: 87, 1: BinaryTree::Node(0: 174, 1: BinaryTree::Leaf(0: 348), 2: BinaryTree::Leaf(0: 349)), 2: BinaryTree::Node(0: 175, 1: BinaryTree::Leaf(0: 350), 2: BinaryTree::Leaf(0: 351)))))), 2: BinaryTree::Node(0: 11, 1: BinaryTree::Node(0: 22, 1: BinaryTree::Node(0: 44, 1: BinaryTree::Node(0: 88, 1: BinaryTree::Node(0: 176, 1: BinaryTree::Leaf(0: 352), 2: BinaryTree::Leaf(0: 353)), 2: BinaryTree::Node(0: 177, 1: BinaryTree::Leaf(0: 354), 2: BinaryTree::Leaf(0: 355))), 2: BinaryTree::Node(0: 89, 1: BinaryTree::Node(0: 178, 1: BinaryTree::Leaf(0: 356), 2: BinaryTree::Leaf(0: 357)), 2: BinaryTree::Node(0: 179, 1: BinaryTree::Leaf(0: 358), 2: BinaryTree::Leaf(0: 359)))), 2: BinaryTree::Node(0: 45, 1: BinaryTree::Node(0: 90, 1: BinaryTree::Node(0: 180, 1: BinaryTree::Leaf(0: 360), 2: BinaryTree::Leaf(0: 361)), 2: BinaryTree::Node(0: 181, 1: BinaryTree::Leaf(0: 362), 2: BinaryTree::Leaf(0: 363))), 2: BinaryTree::Node(0: 91, 1: BinaryTree::Node(0: 182, 1: BinaryTree::Leaf(0: 364), 2: BinaryTree::Leaf(0: 365)), 2: BinaryTree::Node(0: 183, 1: BinaryTree::Leaf(0: 366), 2: BinaryTree::Leaf(0: 367))))), 2: BinaryTree::Node(0: 23, 1: BinaryTree::Node(0: 46, 1: BinaryTree::Node(0: 92, 1: BinaryTree::Node(0: 184, 1: BinaryTree::Leaf(0: 368), 2: BinaryTree::Leaf(0: 369)), 2: BinaryTree::Node(0: 185, 1: BinaryTree::Leaf(0: 370), 2: BinaryTree::Leaf(0: 371))), 2: BinaryTree::Node(0: 93, 1: BinaryTree::Node(0: 186, 1: BinaryTree::Leaf(0: 372), 2: BinaryTree::Leaf(0: 373)), 2: BinaryTree::Node(0: 187, 1: BinaryTree::Leaf(0: 374), 2: BinaryTree::Leaf(0: 375)))), 2: BinaryTree::Node(0: 47, 1: BinaryTree::Node(0: 94, 1: BinaryTree::Node(0: 188, 1: BinaryTree::Leaf(0: 376), 2: BinaryTree::Leaf(0: 377)), 2: BinaryTree::Node(0: 189, 1: BinaryTree::Leaf(0: 378), 2: BinaryTree::Leaf(0: 379))), 2: BinaryTree::Node(0: 95, 1: BinaryTree::Node(0: 190, 1: BinaryTree::Leaf(0: 380), 2: BinaryTree::Leaf(0: 381)), 2: BinaryTree::Node(0: 191, 1: BinaryTree::Leaf(0: 382), 2: BinaryTree::Leaf(0: 383)))))))), 2: BinaryTree::Node(0: 3, 1: BinaryTree::Node(0: 6, 1: BinaryTree::Node(0: 12, 1: BinaryTree::Node(0: 24, 1: BinaryTree::Node(0: 48, 1: BinaryTree::Node(0: 96, 1: BinaryTree::Node(0: 192, 1: BinaryTree::Leaf(0: 384), 2: BinaryTree::Leaf(0: 385)), 2: BinaryTree::Node(0: 193, 1: BinaryTree::Leaf(0: 386), 2: BinaryTree::Leaf(0: 387))), 2: BinaryTree::Node(0: 97, 1: BinaryTree::Node(0: 194, 1: BinaryTree::Leaf(0: 388), 2: BinaryTree::Leaf(0: 389)), 2: BinaryTree::Node(0: 195, 1: BinaryTree::Leaf(0: 390), 2: BinaryTree::Leaf(0: 391)))), 2: BinaryTree::Node(0: 49, 1: BinaryTree::Node(0: 98, 1: BinaryTree::Node(0: 196, 1: BinaryTree::Leaf(0: 392), 2: BinaryTree::Leaf(0: 393)), 2: BinaryTree::Node(0: 197, 1: BinaryTree::Leaf(0: 394), 2: BinaryTree::Leaf(0: 395))), 2: BinaryTree::Node(0: 99, 1: BinaryTree::Node(0: 198, 1: BinaryTree::Leaf(0: 396), 2: BinaryTree::Leaf(0: 397)), 2: BinaryTree::Node(0: 199, 1: BinaryTree::Leaf(0: 398), 2: BinaryTree::Leaf(0: 399))))), 2: BinaryTree::Node(0: 25, 1: BinaryTree::Node(0: 50, 1: BinaryTree::Node(0: 100, 1: BinaryTree::Node(0: 200, 1: BinaryTree::Leaf(0: 400), 2: BinaryTree::Leaf(0: 401)), 2: BinaryTree::Node(0: 201, 1: BinaryTree::Leaf(0: 402), 2: BinaryTree::Leaf(0: 403))), 2: BinaryTree::Node(0: 101, 1: BinaryTree::Node(0: 202, 1: BinaryTree::Leaf(0: 404), 2: BinaryTree::Leaf(0: 405)), 2: BinaryTree::Node(0: 203, 1: BinaryTree::Leaf(0: 406), 2: BinaryTree::Leaf(0: 407)))), 2: BinaryTree::Node(0: 51, 1: BinaryTree::Node(0: 102, 1: BinaryTree::Node(0: 204, 1: BinaryTree::Leaf(0: 408), 2: BinaryTree::Leaf(0: 409)), 2: BinaryTree::Node(0: 205, 1: BinaryTree::Leaf(0: 410), 2: BinaryTree::Leaf(0: 411))), 2: BinaryTree::Node(0: 103, 1: BinaryTree::Node(0: 206, 1: BinaryTree::Leaf(0: 412), 2: BinaryTree::Leaf(0: 413)), 2: BinaryTree::Node(0: 207, 1: BinaryTree::Leaf(0: 414), 2: BinaryTree::Leaf(0: 415)))))), 2: BinaryTree::Node(0: 13, 1: BinaryTree::Node(0: 26, 1: BinaryTree::Node(0: 52, 1: BinaryTree::Node(0: 104, 1: BinaryTree::Node(0: 208, 1: BinaryTree::Leaf(0: 416), 2: BinaryTree::Leaf(0: 417)), 2: BinaryTree::Node(0: 209, 1: BinaryTree::Leaf(0: 418), 2: BinaryTree::Leaf(0: 419))), 2: BinaryTree::Node(0: 105, 1: BinaryTree::Node(0: 210, 1: BinaryTree::Leaf(0: 420), 2: BinaryTree::Leaf(0: 421)), 2: BinaryTree::Node(0: 211, 1: BinaryTree::Leaf(0: 422), 2: BinaryTree::Leaf(0: 423)))), 2: BinaryTree::Node(0: 53, 1: BinaryTree::Node(0: 106, 1: BinaryTree::Node(0: 212, 1: BinaryTree::Leaf(0: 424), 2: BinaryTree::Leaf(0: 425)), 2: BinaryTree::Node(0: 213, 1: BinaryTree::Leaf(0: 426), 2: BinaryTree::Leaf(0: 427))), 2: BinaryTree::Node(0: 107, 1: BinaryTree::Node(0: 214, 1: BinaryTree::Leaf(0: 428), 2: BinaryTree::Leaf(0: 429)), 2: BinaryTree::Node(0: 215, 1: BinaryTree::Leaf(0: 430), 2: BinaryTree::Leaf(0: 431))))), 2: BinaryTree::Node(0: 27, 1: BinaryTree::Node(0: 54, 1: BinaryTree::Node(0: 108, 1: BinaryTree::Node(0: 216, 1: BinaryTree::Leaf(0: 432), 2: BinaryTree::Leaf(0: 433)), 2: BinaryTree::Node(0: 217, 1: BinaryTree::Leaf(0: 434), 2: BinaryTree::Leaf(0: 435))), 2: BinaryTree::Node(0: 109, 1: BinaryTree::Node(0: 218, 1: BinaryTree::Leaf(0: 436), 2: BinaryTree::Leaf(0: 437)), 2: BinaryTree::Node(0: 219, 1: BinaryTree::Leaf(0: 438), 2: BinaryTree::Leaf(0: 439)))), 2: BinaryTree::Node(0: 55, 1: BinaryTree::Node(0: 110, 1: BinaryTree::Node(0: 220, 1: BinaryTree::Leaf(0: 440), 2: BinaryTree::Leaf(0: 441)), 2: BinaryTree::Node(0: 221, 1: BinaryTree::Leaf(0: 442), 2: BinaryTree::Leaf(0: 443))), 2: BinaryTree::Node(0: 111, 1: BinaryTree::Node(0: 222, 1: BinaryTree::Leaf(0: 444), 2: BinaryTree::Leaf(0: 445)), 2: BinaryTree::Node(0: 223, 1: BinaryTree::Leaf(0: 446), 2: BinaryTree::Leaf(0: 447))))))), 2: BinaryTree::Node(0: 7, 1: BinaryTree::Node(0: 14, 1: BinaryTree::Node(0: 28, 1: BinaryTree::Node(0: 56, 1: BinaryTree::Node(0: 112, 1: BinaryTree::Node(0: 224, 1: BinaryTree::Leaf(0: 448), 2: BinaryTree::Leaf(0: 449)), 2: BinaryTree::Node(0: 225, 1: BinaryTree::Leaf(0: 450), 2: BinaryTree::Leaf(0: 451))), 2: BinaryTree::Node(0: 113, 1: BinaryTree::Node(0: 226, 1: BinaryTree::Leaf(0: 452), 2: BinaryTree::Leaf(0: 453)), 2: BinaryTree::Node(0: 227, 1: BinaryTree::Leaf(0: 454), 2: BinaryTree::Leaf(0: 455)))), 2: BinaryTree::Node(0: 57, 1: BinaryTree::Node(0: 114, 1: BinaryTree::Node(0: 228, 1: BinaryTree::Leaf(0: 456), 2: BinaryTree::Leaf(0: 457)), 2: BinaryTree::Node(0: 229, 1: BinaryTree::Leaf(0: 458), 2: BinaryTree::Leaf(0: 459))), 2: BinaryTree::Node(0: 115, 1: BinaryTree::Node(0: 230, 1: BinaryTree::Leaf(0: 460), 2: BinaryTree::Leaf(0: 461)), 2: BinaryTree::Node(0: 231, 1: BinaryTree::Leaf(0: 462), 2: BinaryTree::Leaf(0: 463))))), 2: BinaryTree::Node(0: 29, 1: BinaryTree::Node(0: 58, 1: BinaryTree::Node(0: 116, 1: BinaryTree::Node(0: 232, 1: BinaryTree::Leaf(0: 464), 2: BinaryTree::Leaf(0: 465)), 2: BinaryTree::Node(0: 233, 1: BinaryTree::Leaf(0: 466), 2: BinaryTree::Leaf(0: 467))), 2: BinaryTree::Node(0: 117, 1: BinaryTree::Node(0: 234, 1: BinaryTree::Leaf(0: 468), 2: BinaryTree::Leaf(0: 469)), 2: BinaryTree::Node(0: 235, 1: BinaryTree::Leaf(0: 470), 2: BinaryTree::Leaf(0: 471)))), 2: BinaryTree::Node(0: 59, 1: BinaryTree::Node(0: 118, 1: BinaryTree::Node(0: 236, 1: BinaryTree::Leaf(0: 472), 2: BinaryTree::Leaf(0: 473)), 2: BinaryTree::Node(0: 237, 1: BinaryTree::Leaf(0: 474), 2: BinaryTree::Leaf(0: 475))), 2: BinaryTree::Node(0: 119, 1: BinaryTree::Node(0: 238, 1: BinaryTree::Leaf(0: 476), 2: BinaryTree::Leaf(0: 477)), 2: BinaryTree::Node(0: 239, 1: BinaryTree::Leaf(0: 478), 2: BinaryTree::Leaf(0: 479)))))), 2: BinaryTree::Node(0: 15, 1: BinaryTree::Node(0: 30, 1: BinaryTree::Node(0: 60, 1: BinaryTree::Node(0: 120, 1: BinaryTree::Node(0: 240, 1: BinaryTree::Leaf(0: 480), 2: BinaryTree::Leaf(0: 481)), 2: BinaryTree::Node(0: 241, 1: BinaryTree::Leaf(0: 482), 2: BinaryTree::Leaf(0: 483))), 2: BinaryTree::Node(0: 121, 1: BinaryTree::Node(0: 242, 1: BinaryTree::Leaf(0: 484), 2: BinaryTree::Leaf(0: 485)), 2: BinaryTree::Node(0: 243, 1: BinaryTree::Leaf(0: 486), 2: BinaryTree::Leaf(0: 487)))), 2: BinaryTree::Node(0: 61, 1: BinaryTree::Node(0: 122, 1: BinaryTree::Node(0: 244, 1: BinaryTree::Leaf(0: 488), 2: BinaryTree::Leaf(0: 489)), 2: BinaryTree::Node(0: 245, 1: BinaryTree::Leaf(0: 490), 2: BinaryTree::Leaf(0: 491))), 2: BinaryTree::Node(0: 123, 1: BinaryTree::Node(0: 246, 1: BinaryTree::Leaf(0: 492), 2: BinaryTree::Leaf(0: 493)), 2: BinaryTree::Node(0: 247, 1: BinaryTree::Leaf(0: 494), 2: BinaryTree::Leaf(0: 495))))), 2: BinaryTree::Node(0: 31, 1: BinaryTree::Node(0: 62, 1: BinaryTree::Node(0: 124, 1: BinaryTree::Node(0: 248, 1: BinaryTree::Leaf(0: 496), 2: BinaryTree::Leaf(0: 497)), 2: BinaryTree::Node(0: 249, 1: BinaryTree::Leaf(0: 498), 2: BinaryTree::Leaf(0: 499))), 2: BinaryTree::Node(0: 125, 1: BinaryTree::Node(0: 250, 1: BinaryTree::Leaf(0: 500), 2: BinaryTree::Leaf(0: 501)), 2: BinaryTree::Node(0: 251, 1: BinaryTree::Leaf(0: 502), 2: BinaryTree::Leaf(0: 503)))), 2: BinaryTree::Node(0: 63, 1: BinaryTree::Node(0: 126, 1: BinaryTree::Node(0: 252, 1: BinaryTree::Leaf(0: 504), 2: BinaryTree::Leaf(0: 505)), 2: BinaryTree::Node(0: 253, 1: BinaryTree::Leaf(0: 506), 2: BinaryTree::Leaf(0: 507))), 2: BinaryTree::Node(0: 127, 1: BinaryTree::Node(0: 254, 1: BinaryTree::Leaf(0: 508), 2: BinaryTree::Leaf(0: 509)), 2: BinaryTree::Node(0: 255, 1: BinaryTree::Leaf(0: 510), 2: BinaryTree::Leaf(0: 511))))))))),
    BinaryTree::Node(0: 50, 1: BinaryTree::Node(0: 49, 1: BinaryTree::Node(0: 48, 1: BinaryTree::Node(0: 47, 1: BinaryTree::Node(0: 46, 1: BinaryTree::Node(0: 45, 1: BinaryTree::Node(0: 44, 1: BinaryTree::Node(0: 43, 1: BinaryTree::Node(0: 42, 1: BinaryTree::Node(0: 41, 1: BinaryTree::Node(0: 40, 1: BinaryTree::Node(0: 39, 1: BinaryTree::Node(0: 38, 1: BinaryTree::Node(0: 37, 1: BinaryTree::Node(0: 36, 1: BinaryTree::Node(0: 35, 1: BinaryTree::Node(0: 34, 1: BinaryTree::Node(0: 33, 1: BinaryTree::Node(0: 32, 1: BinaryTree::Node(0: 31, 1: BinaryTree::Node(0: 30, 1: BinaryTree::Node(0: 29, 1: BinaryTree::Node(0: 28, 1: BinaryTree::Node(0: 27, 1: BinaryTree::Node(0: 26, 1: BinaryTree::Node(0: 25, 1: BinaryTree::Node(0: 24, 1: BinaryTree::Node(0: 23, 1: BinaryTree::Node(0: 22, 1: BinaryTree::Node(0: 21, 1: BinaryTree::Node(0: 20, 1: BinaryTree::Node(0: 19, 1: BinaryTree::Node(0: 18, 1: BinaryTree::Node(0: 17, 1: BinaryTree::Node(0: 16, 1: BinaryTree::Node(0: 15, 1: BinaryTree::Node(0: 14, 1: BinaryTree::Node(0: 13, 1: BinaryTree::Node(0: 12, 1: BinaryTree::Node(0: 11, 1: BinaryTree::Node(0: 10, 1: BinaryTree::Node(0: 9, 1: BinaryTree::Node(0: 8, 1: BinaryTree::Node(0: 7, 1: BinaryTree::Node(0: 6, 1: BinaryTree::Node(0: 5, 1: BinaryTree::Node(0: 4, 1: BinaryTree::Node(0: 3, 1: BinaryTree::Node(0: 2, 1: BinaryTree::Node(0: 1, 1: BinaryTree::Empty, 2: BinaryTree::Leaf(0: 10)), 2: BinaryTree::Leaf(0: 20)), 2: BinaryTree::Leaf(0: 30)), 2: BinaryTree::Leaf(0: 40)), 2: BinaryTree::Leaf(0: 50)), 2: BinaryTree::Leaf(0: 60)), 2: BinaryTree::Leaf(0: 70)), 2: BinaryTree::Leaf(0: 80)), 2: BinaryTree::Leaf(0: 90)), 2: BinaryTree::Leaf(0: 100)), 2: BinaryTree::Leaf(0: 110)), 2: BinaryTree::Leaf(0: 120)), 2: BinaryTree::Leaf(0: 130)), 2: BinaryTree::Leaf(0: 140)), 2: BinaryTree::Leaf(0: 150)), 2: BinaryTree::Leaf(0: 160)), 2: BinaryTree::Leaf(0: 170)), 2: BinaryTree::Leaf(0: 180)), 2: BinaryTree::Leaf(0: 190)), 2: BinaryTree::Leaf(0: 200)), 2: BinaryTree::Leaf(0: 210)), 2: BinaryTree::Leaf(0: 220)), 2: BinaryTree::Leaf(0: 230)), 2: BinaryTree::Leaf(0: 240)), 2: BinaryTree::Leaf(0: 250)), 2: BinaryTree::Leaf(0: 260)), 2: BinaryTree::Leaf(0: 270)), 2: BinaryTree::Leaf(0: 280)), 2: BinaryTree::Leaf(0: 290)), 2: BinaryTree::Leaf(0: 300)), 2: BinaryTree::Leaf(0: 310)), 2: BinaryTree::Leaf(0: 320)), 2: BinaryTree::Leaf(0: 330)), 2: BinaryTree::Leaf(0: 340)), 2: BinaryTree::Leaf(0: 350)), 2: BinaryTree::Leaf(0: 360)), 2: BinaryTree::Leaf(0: 370)), 2: BinaryTree::Leaf(0: 380)), 2: BinaryTree::Leaf(0: 390)), 2: BinaryTree::Leaf(0: 400)), 2: BinaryTree::Leaf(0: 410)), 2: BinaryTree::Leaf(0: 420)), 2: BinaryTree::Leaf(0: 430)), 2: BinaryTree::Leaf(0: 440)), 2: BinaryTree::Leaf(0: 450)), 2: BinaryTree::Leaf(0: 460)), 2: BinaryTree::Leaf(0: 470)), 2: BinaryTree::Leaf(0: 480)), 2: BinaryTree::Leaf(0: 490)), 2: BinaryTree::Leaf(0: 500)),
  },
  {
    fn tree_depth#97(tree),
    BinaryTree::Node(0: 1, 1: BinaryTree::Node(0: 2, 1: BinaryTree::Node(0: 4, 1: BinaryTree::Node(0: 8, 1: BinaryTree::Node(0: 16, 1: BinaryTree::Node(0: 32, 1: BinaryTree::Node(0: 64, 1: BinaryTree::Node(0: 128, 1: BinaryTree::Leaf(0: 256), 2: BinaryTree::Leaf(0: 257)), 2: BinaryTree::Node(0: 129, 1: BinaryTree::Leaf(0: 258), 2: BinaryTree::Leaf(0: 259))), 2: BinaryTree::Node(0: 65, 1: BinaryTree::Node(0: 130, 1: BinaryTree::Leaf(0: 260), 2: BinaryTree::Leaf(0: 261)), 2: BinaryTree::Node(0: 131, 1: BinaryTree::Leaf(0: 262), 2: BinaryTree::Leaf(0: 263)))), 2: BinaryTree::Node(0: 33, 1: BinaryTree::Node(0: 66, 1: BinaryTree::Node(0: 132, 1: BinaryTree::Leaf(0: 264), 2: BinaryTree::Leaf(0: 265)), 2: BinaryTree::Node(0: 133, 1: BinaryTree::Leaf(0: 266), 2: BinaryTree::Leaf(0: 267))), 2: BinaryTree::Node(0: 67, 1: BinaryTree::Node(0: 134, 1: BinaryTree::Leaf(0: 268), 2: BinaryTree::Leaf(0: 269)), 2: BinaryTree::Node(0: 135, 1: BinaryTree::Leaf(0: 270), 2: BinaryTree::Leaf(0: 271))))), 2: BinaryTree::Node(0: 17, 1: BinaryTree::Node(0: 34, 1: BinaryTree::Node(0: 68, 1: BinaryTree::Node(0: 136, 1: BinaryTree::Leaf(0: 272), 2: BinaryTree::Leaf(0: 273)), 2: BinaryTree::Node(0: 137, 1: BinaryTree::Leaf(0: 274), 2: BinaryTree::Leaf(0: 275))), 2: BinaryTree::Node(0: 69, 1: BinaryTree::Node(0: 138, 1: BinaryTree::Leaf(0: 276), 2: BinaryTree::Leaf(0: 277)), 2: BinaryTree::Node(0: 139, 1: BinaryTree::Leaf(0: 278), 2: BinaryTree::Leaf(0: 279)))), 2: BinaryTree::Node(0: 35, 1: BinaryTree::Node(0: 70, 1: BinaryTree::Node(0: 140, 1: BinaryTree::Leaf(0: 280), 2: BinaryTree::Leaf(0: 281)), 2: BinaryTree::Node(0: 141, 1: BinaryTree::Leaf(0: 282), 2: BinaryTree::Leaf(0: 283))), 2: BinaryTree::Node(0: 71, 1: BinaryTree::Node(0: 142, 1: BinaryTree::Leaf(0: 284), 2: BinaryTree::Leaf(0: 285)), 2: BinaryTree::Node(0: 143, 1: BinaryTree::Leaf(0: 286), 2: BinaryTree::Leaf(0: 287)))))), 2: BinaryTree::Node(0: 9, 1: BinaryTree::Node(0: 18, 1: BinaryTree::Node(0: 36, 1: BinaryTree::Node(0: 72, 1: BinaryTree::Node(0: 144, 1: BinaryTree::Leaf(0: 288), 2: BinaryTree::Leaf(0: 289)), 2: BinaryTree::Node(0: 145, 1: BinaryTree::Leaf(0: 290), 2: BinaryTree::Leaf(0: 291))), 2: BinaryTree::Node(0: 73, 1: BinaryTree::Node(0: 146, 1: BinaryTree::Leaf(0: 292), 2: BinaryTree::Leaf(0: 293)), 2: BinaryTree::Node(0: 147, 1: BinaryTree::Leaf(0: 294), 2: BinaryTree::Leaf(0: 295)))), 2: BinaryTree::Node(0: 37, 1: BinaryTree::Node(0: 74, 1: BinaryTree::Node(0: 148, 1: BinaryTree::Leaf(0: 296), 2: BinaryTree::Leaf(0: 297)), 2: BinaryTree::Node(0: 149, 1: BinaryTree::Leaf(0: 298), 2: BinaryTree::Leaf(0: 299))), 2: BinaryTree::Node(0: 75, 1: BinaryTree::Node(0: 150, 1: BinaryTree::Leaf(0: 300), 2: BinaryTree::Leaf(0: 301)), 2: BinaryTree::Node(0: 151, 1: BinaryTree::Leaf(0: 302), 2: BinaryTree::Leaf(0: 303))))), 2: BinaryTree::Node(0: 19, 1: BinaryTree::Node(0: 38, 1: BinaryTree::Node(0: 76, 1: BinaryTree::Node(0: 152, 1: BinaryTree::Leaf(0: 304), 2: BinaryTree::Leaf(0: 305)), 2: BinaryTree::Node(0: 153, 1: BinaryTree::Leaf(0: 306), 2: BinaryTree::Leaf(0: 307))), 2: BinaryTree::Node(0: 77, 1: BinaryTree::Node(0: 154, 1: BinaryTree::Leaf(0: 308), 2: BinaryTree::Leaf(0: 309)), 2: BinaryTree::Node(0: 155, 1: BinaryTree::Leaf(0: 310), 2: BinaryTree::Leaf(0: 311)))), 2: BinaryTree::Node(0: 39, 1: BinaryTree::Node(0: 78, 1: BinaryTree::Node(0: 156, 1: BinaryTree::Leaf(0: 312), 2: BinaryTree::Leaf(0: 313)), 2: BinaryTree::Node(0: 157, 1: BinaryTree::Leaf(0: 314), 2: BinaryTree::Leaf(0: 315))), 2: BinaryTree::Node(0: 79, 1: BinaryTree::Node(0: 158, 1: BinaryTree::Leaf(0: 316), 2: BinaryTree::Leaf(0: 317)), 2: BinaryTree::Node(0: 159, 1: BinaryTree::Leaf(0: 318), 2: BinaryTree::Leaf(0: 319))))))), 2: BinaryTree::Node(0: 5, 1: BinaryTree::Node(0: 10, 1: BinaryTree::Node(0: 20, 1: BinaryTree::Node(0: 40, 1: BinaryTree::Node(0: 80, 1: BinaryTree::Node(0: 160, 1: BinaryTree::Leaf(0: 320), 2: BinaryTree::Leaf(0: 321)), 2: BinaryTree::Node(0: 161, 1: BinaryTree::Leaf(0: 322), 2: BinaryTree::Leaf(0: 323))), 2: BinaryTree::Node(0: 81, 1: BinaryTree::Node(0: 162, 1: BinaryTree::Leaf(0: 324), 2: BinaryTree::Leaf(0: 325)), 2: BinaryTree::Node(0: 163, 1: BinaryTree::Leaf(0: 326), 2: BinaryTree::Leaf(0: 327)))), 2: BinaryTree::Node(0: 41, 1: BinaryTree::Node(0: 82, 1: BinaryTree::Node(0: 164, 1: BinaryTree::Leaf(0: 328), 2: BinaryTree::Leaf(0: 329)), 2: BinaryTree::Node(0: 165, 1: BinaryTree::Leaf(0: 330), 2: BinaryTree::Leaf(0: 331))), 2: BinaryTree::Node(0: 83, 1: BinaryTree::Node(0: 166, 1: BinaryTree::Leaf(0: 332), 2: BinaryTree::Leaf(0: 333)), 2: BinaryTree::Node(0: 167, 1: BinaryTree::Leaf(0: 334), 2: BinaryTree::Leaf(0: 335))))), 2: BinaryTree::Node(0: 21, 1: BinaryTree::Node(0: 42, 1: BinaryTree::Node(0: 84, 1: BinaryTree::Node(0: 168, 1: BinaryTree::Leaf(0: 336), 2: BinaryTree::Leaf(0: 337)), 2: BinaryTree::Node(0: 169, 1: BinaryTree::Leaf(0: 338), 2: BinaryTree::Leaf(0: 339))), 2: BinaryTree::Node(0: 85, 1: BinaryTree::Node(0: 170, 1: BinaryTree::Leaf(0: 340), 2: BinaryTree::Leaf(0: 341)), 2: BinaryTree::Node(0: 171, 1: BinaryTree::Leaf(0: 342), 2: BinaryTree::Leaf(0: 343)))), 2: BinaryTree::Node(0: 43, 1: BinaryTree::Node(0: 86, 1: BinaryTree::Node(0: 172, 1: BinaryTree::Leaf(0: 344), 2: BinaryTree::Leaf(0: 345)), 2: BinaryTree::Node(0: 173, 1: BinaryTree::Leaf(0: 346), 2: BinaryTree::Leaf(0: 347))), 2: BinaryTree::Node(0: 87, 1: BinaryTree::Node(0: 174, 1: BinaryTree::Leaf(0: 348), 2: BinaryTree::Leaf(0: 349)), 2: BinaryTree::Node(0: 175, 1: BinaryTree::Leaf(0: 350), 2: BinaryTree::Leaf(0: 351)))))), 2: BinaryTree::Node(0: 11, 1: BinaryTree::Node(0: 22, 1: BinaryTree::Node(0: 44, 1: BinaryTree::Node(0: 88, 1: BinaryTree::Node(0: 176, 1: BinaryTree::Leaf(0: 352), 2: BinaryTree::Leaf(0: 353)), 2: BinaryTree::Node(0: 177, 1: BinaryTree::Leaf(0: 354), 2: BinaryTree::Leaf(0: 355))), 2: BinaryTree::Node(0: 89, 1: BinaryTree::Node(0: 178, 1: BinaryTree::Leaf(0: 356), 2: BinaryTree::Leaf(0: 357)), 2: BinaryTree::Node(0: 179, 1: BinaryTree::Leaf(0: 358), 2: BinaryTree::Leaf(0: 359)))), 2: BinaryTree::Node(0: 45, 1: BinaryTree::Node(0: 90, 1: BinaryTree::Node(0: 180, 1: BinaryTree::Leaf(0: 360), 2: BinaryTree::Leaf(0: 361)), 2: BinaryTree::Node(0: 181, 1: BinaryTree::Leaf(0: 362), 2: BinaryTree::Leaf(0: 363))), 2: BinaryTree::Node(0: 91, 1: BinaryTree::Node(0: 182, 1: BinaryTree::Leaf(0: 364), 2: BinaryTree::Leaf(0: 365)), 2: BinaryTree::Node(0: 183, 1: BinaryTree::Leaf(0: 366), 2: BinaryTree::Leaf(0: 367))))), 2: BinaryTree::Node(0: 23, 1: BinaryTree::Node(0: 46, 1: BinaryTree::Node(0: 92, 1: BinaryTree::Node(0: 184, 1: BinaryTree::Leaf(0: 368), 2: BinaryTree::Leaf(0: 369)), 2: BinaryTree::Node(0: 185, 1: BinaryTree::Leaf(0: 370), 2: BinaryTree::Leaf(0: 371))), 2: BinaryTree::Node(0: 93, 1: BinaryTree::Node(0: 186, 1: BinaryTree::Leaf(0: 372), 2: BinaryTree::Leaf(0: 373)), 2: BinaryTree::Node(0: 187, 1: BinaryTree::Leaf(0: 374), 2: BinaryTree::Leaf(0: 375)))), 2: BinaryTree::Node(0: 47, 1: BinaryTree::Node(0: 94, 1: BinaryTree::Node(0: 188, 1: BinaryTree::Leaf(0: 376), 2: BinaryTree::Leaf(0: 377)), 2: BinaryTree::Node(0: 189, 1: BinaryTree::Leaf(0: 378), 2: BinaryTree::Leaf(0: 379))), 2: BinaryTree::Node(0: 95, 1: BinaryTree::Node(0: 190, 1: BinaryTree::Leaf(0: 380), 2: BinaryTree::Leaf(0: 381)), 2: BinaryTree::Node(0: 191, 1: BinaryTree::Leaf(0: 382), 2: BinaryTree::Leaf(0: 383)))))))), 2: BinaryTree::Node(0: 3, 1: BinaryTree::Node(0: 6, 1: BinaryTree::Node(0: 12, 1: BinaryTree::Node(0: 24, 1: BinaryTree::Node(0: 48, 1: BinaryTree::Node(0: 96, 1: BinaryTree::Node(0: 192, 1: BinaryTree::Leaf(0: 384), 2: BinaryTree::Leaf(0: 385)), 2: BinaryTree::Node(0: 193, 1: BinaryTree::Leaf(0: 386), 2: BinaryTree::Leaf(0: 387))), 2: BinaryTree::Node(0: 97, 1: BinaryTree::Node(0: 194, 1: BinaryTree::Leaf(0: 388), 2: BinaryTree::Leaf(0: 389)), 2: BinaryTree::Node(0: 195, 1: BinaryTree::Leaf(0: 390), 2: BinaryTree::Leaf(0: 391)))), 2: BinaryTree::Node(0: 49, 1: BinaryTree::Node(0: 98, 1: BinaryTree::Node(0: 196, 1: BinaryTree::Leaf(0: 392), 2: BinaryTree::Leaf(0: 393)), 2: BinaryTree::Node(0: 197, 1: BinaryTree::Leaf(0: 394), 2: BinaryTree::Leaf(0: 395))), 2: BinaryTree::Node(0: 99, 1: BinaryTree::Node(0: 198, 1: BinaryTree::Leaf(0: 396), 2: BinaryTree::Leaf(0: 397)), 2: BinaryTree::Node(0: 199, 1: BinaryTree::Leaf(0: 398), 2: BinaryTree::Leaf(0: 399))))), 2: BinaryTree::Node(0: 25, 1: BinaryTree::Node(0: 50, 1: BinaryTree::Node(0: 100, 1: BinaryTree::Node(0: 200, 1: BinaryTree::Leaf(0: 400), 2: BinaryTree::Leaf(0: 401)), 2: BinaryTree::Node(0: 201, 1: BinaryTree::Leaf(0: 402), 2: BinaryTree::Leaf(0: 403))), 2: BinaryTree::Node(0: 101, 1: BinaryTree::Node(0: 202, 1: BinaryTree::Leaf(0: 404), 2: BinaryTree::Leaf(0: 405)), 2: BinaryTree::Node(0: 203, 1: BinaryTree::Leaf(0: 406), 2: BinaryTree::Leaf(0: 407)))), 2: BinaryTree::Node(0: 51, 1: BinaryTree::Node(0: 102, 1: BinaryTree::Node(0: 204, 1: BinaryTree::Leaf(0: 408), 2: BinaryTree::Leaf(0: 409)), 2: BinaryTree::Node(0: 205, 1: BinaryTree::Leaf(0: 410), 2: BinaryTree::Leaf(0: 411))), 2: BinaryTree::Node(0: 103, 1: BinaryTree::Node(0: 206, 1: BinaryTree::Leaf(0: 412), 2: BinaryTree::Leaf(0: 413)), 2: BinaryTree::Node(0: 207, 1: BinaryTree::Leaf(0: 414), 2: BinaryTree::Leaf(0: 415)))))), 2: BinaryTree::Node(0: 13, 1: BinaryTree::Node(0: 26, 1: BinaryTree::Node(0: 52, 1: BinaryTree::Node(0: 104, 1: BinaryTree::Node(0: 208, 1: BinaryTree::Leaf(0: 416), 2: BinaryTree::Leaf(0: 417)), 2: BinaryTree::Node(0: 209, 1: BinaryTree::Leaf(0: 418), 2: BinaryTree::Leaf(0: 419))), 2: BinaryTree::Node(0: 105, 1: BinaryTree::Node(0: 210, 1: BinaryTree::Leaf(0: 420), 2: BinaryTree::Leaf(0: 421)), 2: BinaryTree::Node(0: 211, 1: BinaryTree::Leaf(0: 422), 2: BinaryTree::Leaf(0: 423)))), 2: BinaryTree::Node(0: 53, 1: BinaryTree::Node(0: 106, 1: BinaryTree::Node(0: 212, 1: BinaryTree::Leaf(0: 424), 2: BinaryTree::Leaf(0: 425)), 2: BinaryTree::Node(0: 213, 1: BinaryTree::Leaf(0: 426), 2: BinaryTree::Leaf(0: 427))), 2: BinaryTree::Node(0: 107, 1: BinaryTree::Node(0: 214, 1: BinaryTree::Leaf(0: 428), 2: BinaryTree::Leaf(0: 429)), 2: BinaryTree::Node(0: 215, 1: BinaryTree::Leaf(0: 430), 2: BinaryTree::Leaf(0: 431))))), 2: BinaryTree::Node(0: 27, 1: BinaryTree::Node(0: 54, 1: BinaryTree::Node(0: 108, 1: BinaryTree::Node(0: 216, 1: BinaryTree::Leaf(0: 432), 2: BinaryTree::Leaf(0: 433)), 2: BinaryTree::Node(0: 217, 1: BinaryTree::Leaf(0: 434), 2: BinaryTree::Leaf(0: 435))), 2: BinaryTree::Node(0: 109, 1: BinaryTree::Node(0: 218, 1: BinaryTree::Leaf(0: 436), 2: BinaryTree::Leaf(0: 437)), 2: BinaryTree::Node(0: 219, 1: BinaryTree::Leaf(0: 438), 2: BinaryTree::Leaf(0: 439)))), 2: BinaryTree::Node(0: 55, 1: BinaryTree::Node(0: 110, 1: BinaryTree::Node(0: 220, 1: BinaryTree::Leaf(0: 440), 2: BinaryTree::Leaf(0: 441)), 2: BinaryTree::Node(0: 221, 1: BinaryTree::Leaf(0: 442), 2: BinaryTree::Leaf(0: 443))), 2: BinaryTree::Node(0: 111, 1: BinaryTree::Node(0: 222, 1: BinaryTree::Leaf(0: 444), 2: BinaryTree::Leaf(0: 445)), 2: BinaryTree::Node(0: 223, 1: BinaryTree::Leaf(0: 446), 2: BinaryTree::Leaf(0: 447))))))), 2: BinaryTree::Node(0: 7, 1: BinaryTree::Node(0: 14, 1: BinaryTree::Node(0: 28, 1: BinaryTree::Node(0: 56, 1: BinaryTree::Node(0: 112, 1: BinaryTree::Node(0: 224, 1: BinaryTree::Leaf(0: 448), 2: BinaryTree::Leaf(0: 449)), 2: BinaryTree::Node(0: 225, 1: BinaryTree::Leaf(0: 450), 2: BinaryTree::Leaf(0: 451))), 2: BinaryTree::Node(0: 113, 1: BinaryTree::Node(0: 226, 1: BinaryTree::Leaf(0: 452), 2: BinaryTree::Leaf(0: 453)), 2: BinaryTree::Node(0: 227, 1: BinaryTree::Leaf(0: 454), 2: BinaryTree::Leaf(0: 455)))), 2: BinaryTree::Node(0: 57, 1: BinaryTree::Node(0: 114, 1: BinaryTree::Node(0: 228, 1: BinaryTree::Leaf(0: 456), 2: BinaryTree::Leaf(0: 457)), 2: BinaryTree::Node(0: 229, 1: BinaryTree::Leaf(0: 458), 2: BinaryTree::Leaf(0: 459))), 2: BinaryTree::Node(0: 115, 1: BinaryTree::Node(0: 230, 1: BinaryTree::Leaf(0: 460), 2: BinaryTree::Leaf(0: 461)), 2: BinaryTree::Node(0: 231, 1: BinaryTree::Leaf(0: 462), 2: BinaryTree::Leaf(0: 463))))), 2: BinaryTree::Node(0: 29, 1: BinaryTree::Node(0: 58, 1: BinaryTree::Node(0: 116, 1: BinaryTree::Node(0: 232, 1: BinaryTree::Leaf(0: 464), 2: BinaryTree::Leaf(0: 465)), 2: BinaryTree::Node(0: 233, 1: BinaryTree::Leaf(0: 466), 2: BinaryTree::Leaf(0: 467))), 2: BinaryTree::Node(0: 117, 1: BinaryTree::Node(0: 234, 1: BinaryTree::Leaf(0: 468), 2: BinaryTree::Leaf(0: 469)), 2: BinaryTree::Node(0: 235, 1: BinaryTree::Leaf(0: 470), 2: BinaryTree::Leaf(0: 471)))), 2: BinaryTree::Node(0: 59, 1: BinaryTree::Node(0: 118, 1: BinaryTree::Node(0: 236, 1: BinaryTree::Leaf(0: 472), 2: BinaryTree::Leaf(0: 473)), 2: BinaryTree::Node(0: 237, 1: BinaryTree::Leaf(0: 474), 2: BinaryTree::Leaf(0: 475))), 2: BinaryTree::Node(0: 119, 1: BinaryTree::Node(0: 238, 1: BinaryTree::Leaf(0: 476), 2: BinaryTree::Leaf(0: 477)), 2: BinaryTree::Node(0: 239, 1: BinaryTree::Leaf(0: 478), 2: BinaryTree::Leaf(0: 479)))))), 2: BinaryTree::Node(0: 15, 1: BinaryTree::Node(0: 30, 1: BinaryTree::Node(0: 60, 1: BinaryTree::Node(0: 120, 1: BinaryTree::Node(0: 240, 1: BinaryTree::Leaf(0: 480), 2: BinaryTree::Leaf(0: 481)), 2: BinaryTree::Node(0: 241, 1: BinaryTree::Leaf(0: 482), 2: BinaryTree::Leaf(0: 483))), 2: BinaryTree::Node(0: 121, 1: BinaryTree::Node(0: 242, 1: BinaryTree::Leaf(0: 484), 2: BinaryTree::Leaf(0: 485)), 2: BinaryTree::Node(0: 243, 1: BinaryTree::Leaf(0: 486), 2: BinaryTree::Leaf(0: 487)))), 2: BinaryTree::Node(0: 61, 1: BinaryTree::Node(0: 122, 1: BinaryTree::Node(0: 244, 1: BinaryTree::Leaf(0: 488), 2: BinaryTree::Leaf(0: 489)), 2: BinaryTree::Node(0: 245, 1: BinaryTree::Leaf(0: 490), 2: BinaryTree::Leaf(0: 491))), 2: BinaryTree::Node(0: 123, 1: BinaryTree::Node(0: 246, 1: BinaryTree::Leaf(0: 492), 2: BinaryTree::Leaf(0: 493)), 2: BinaryTree::Node(0: 247, 1: BinaryTree::Leaf(0: 494), 2: BinaryTree::Leaf(0: 495))))), 2: BinaryTree::Node(0: 31, 1: BinaryTree::Node(0: 62, 1: BinaryTree::Node(0: 124, 1: BinaryTree::Node(0: 248, 1: BinaryTree::Leaf(0: 496), 2: BinaryTree::Leaf(0: 497)), 2: BinaryTree::Node(0: 249, 1: BinaryTree::Leaf(0: 498), 2: BinaryTree::Leaf(0: 499))), 2: BinaryTree::Node(0: 125, 1: BinaryTree::Node(0: 250, 1: BinaryTree::Leaf(0: 500), 2: BinaryTree::Leaf(0: 501)), 2: BinaryTree::Node(0: 251, 1: BinaryTree::Leaf(0: 502), 2: BinaryTree::Leaf(0: 503)))), 2: BinaryTree::Node(0: 63, 1: BinaryTree::Node(0: 126, 1: BinaryTree::Node(0: 252, 1: BinaryTree::Leaf(0: 504), 2: BinaryTree::Leaf(0: 505)), 2: BinaryTree::Node(0: 253, 1: BinaryTree::Leaf(0: 506), 2: BinaryTree::Leaf(0: 507))), 2: BinaryTree::Node(0: 127, 1: BinaryTree::Node(0: 254, 1: BinaryTree::Leaf(0: 508), 2: BinaryTree::Leaf(0: 509)), 2: BinaryTree::Node(0: 255, 1: BinaryTree::Leaf(0: 510), 2: BinaryTree::Leaf(0: 511))))))))),
  },
  {
    BinaryTree::Node(0: 2, 1: BinaryTree::Node(0: 4, 1: BinaryTree::Node(0: 8, 1: BinaryTree::Node(0: 16, 1: BinaryTree::Node(0: 32, 1: BinaryTree::Node(0: 64, 1: BinaryTree::Node(0: 128, 1: BinaryTree::Leaf(0: 256), 2: BinaryTree::Leaf(0: 257)), 2: BinaryTree::Node(0: 129, 1: BinaryTree::Leaf(0: 258), 2: BinaryTree::Leaf(0: 259))), 2: BinaryTree::Node(0: 65, 1: BinaryTree::Node(0: 130, 1: BinaryTree::Leaf(0: 260), 2: BinaryTree::Leaf(0: 261)), 2: BinaryTree::Node(0: 131, 1: BinaryTree::Leaf(0: 262), 2: BinaryTree::Leaf(0: 263)))), 2: BinaryTree::Node(0: 33, 1: BinaryTree::Node(0: 66, 1: BinaryTree::Node(0: 132, 1: BinaryTree::Leaf(0: 264), 2: BinaryTree::Leaf(0: 265)), 2: BinaryTree::Node(0: 133, 1: BinaryTree::Leaf(0: 266), 2: BinaryTree::Leaf(0: 267))), 2: BinaryTree::Node(0: 67, 1: BinaryTree::Node(0: 134, 1: BinaryTree::Leaf(0: 268), 2: BinaryTree::Leaf(0: 269)), 2: BinaryTree::Node(0: 135, 1: BinaryTree::Leaf(0: 270), 2: BinaryTree::Leaf(0: 271))))), 2: BinaryTree::Node(0: 17, 1: BinaryTree::Node(0: 34, 1: BinaryTree::Node(0: 68, 1: BinaryTree::Node(0: 136, 1: BinaryTree::Leaf(0: 272), 2: BinaryTree::Leaf(0: 273)), 2: BinaryTree::Node(0: 137, 1: BinaryTree::Leaf(0: 274), 2: BinaryTree::Leaf(0: 275))), 2: BinaryTree::Node(0: 69, 1: BinaryTree::Node(0: 138, 1: BinaryTree::Leaf(0: 276), 2: BinaryTree::Leaf(0: 277)), 2: BinaryTree::Node(0: 139, 1: BinaryTree::Leaf(0: 278), 2: BinaryTree::Leaf(0: 279)))), 2: BinaryTree::Node(0: 35, 1: BinaryTree::Node(0: 70, 1: BinaryTree::Node(0: 140, 1: BinaryTree::Leaf(0: 280), 2: BinaryTree::Leaf(0: 281)), 2: BinaryTree::Node(0: 141, 1: BinaryTree::Leaf(0: 282), 2: BinaryTree::Leaf(0: 283))), 2: BinaryTree::Node(0: 71, 1: BinaryTree::Node(0: 142, 1: BinaryTree::Leaf(0: 284), 2: BinaryTree::Leaf(0: 285)), 2: BinaryTree::Node(0: 143, 1: BinaryTree::Leaf(0: 286), 2: BinaryTree::Leaf(0: 287)))))), 2: BinaryTree::Node(0: 9, 1: BinaryTree::Node(0: 18, 1: BinaryTree::Node(0: 36, 1: BinaryTree::Node(0: 72, 1: BinaryTree::Node(0: 144, 1: BinaryTree::Leaf(0: 288), 2: BinaryTree::Leaf(0: 289)), 2: BinaryTree::Node(0: 145, 1: BinaryTree::Leaf(0: 290), 2: BinaryTree::Leaf(0: 291))), 2: BinaryTree::Node(0: 73, 1: BinaryTree::Node(0: 146, 1: BinaryTree::Leaf(0: 292), 2: BinaryTree::Leaf(0: 293)), 2: BinaryTree::Node(0: 147, 1: BinaryTree::Leaf(0: 294), 2: BinaryTree::Leaf(0: 295)))), 2: BinaryTree::Node(0: 37, 1: BinaryTree::Node(0: 74, 1: BinaryTree::Node(0: 148, 1: BinaryTree::Leaf(0: 296), 2: BinaryTree::Leaf(0: 297)), 2: BinaryTree::Node(0: 149, 1: BinaryTree::Leaf(0: 298), 2: BinaryTree::Leaf(0: 299))), 2: BinaryTree::Node(0: 75, 1: BinaryTree::Node(0: 150, 1: BinaryTree::Leaf(0: 300), 2: BinaryTree::Leaf(0: 301)), 2: BinaryTree::Node(0: 151, 1: BinaryTree::Leaf(0: 302), 2: BinaryTree::Leaf(0: 303))))), 2: BinaryTree::Node(0: 19, 1: BinaryTree::Node(0: 38, 1: BinaryTree::Node(0: 76, 1: BinaryTree::Node(0: 152, 1: BinaryTree::Leaf(0: 304), 2: BinaryTree::Leaf(0: 305)), 2: BinaryTree::Node(0: 153, 1: BinaryTree::Leaf(0: 306), 2: BinaryTree::Leaf(0: 307))), 2: BinaryTree::Node(0: 77, 1: BinaryTree::Node(0: 154, 1: BinaryTree::Leaf(0: 308), 2: BinaryTree::Leaf(0: 309)), 2: BinaryTree::Node(0: 155, 1: BinaryTree::Leaf(0: 310), 2: BinaryTree::Leaf(0: 311)))), 2: BinaryTree::Node(0: 39, 1: BinaryTree::Node(0: 78, 1: BinaryTree::Node(0: 156, 1: BinaryTree::Leaf(0: 312), 2: BinaryTree::Leaf(0: 313)), 2: BinaryTree::Node(0: 157, 1: BinaryTree::Leaf(0: 314), 2: BinaryTree::Leaf(0: 315))), 2: BinaryTree::Node(0: 79, 1: BinaryTree::Node(0: 158, 1: BinaryTree::Leaf(0: 316), 2: BinaryTree::Leaf(0: 317)), 2: BinaryTree::Node(0: 159, 1: BinaryTree::Leaf(0: 318), 2: BinaryTree::Leaf(0: 319))))))), 2: BinaryTree::Node(0: 5, 1: BinaryTree::Node(0: 10, 1: BinaryTree::Node(0: 20, 1: BinaryTree::Node(0: 40, 1: BinaryTree::Node(0: 80, 1: BinaryTree::Node(0: 160, 1: BinaryTree::Leaf(0: 320), 2: BinaryTree::Leaf(0: 321)), 2: BinaryTree::Node(0: 161, 1: BinaryTree::Leaf(0: 322), 2: BinaryTree::Leaf(0: 323))), 2: BinaryTree::Node(0: 81, 1: BinaryTree::Node(0: 162, 1: BinaryTree::Leaf(0: 324), 2: BinaryTree::Leaf(0: 325)), 2: BinaryTree::Node(0: 163, 1: BinaryTree::Leaf(0: 326), 2: BinaryTree::Leaf(0: 327)))), 2: BinaryTree::Node(0: 41, 1: BinaryTree::Node(0: 82, 1: BinaryTree::Node(0: 164, 1: BinaryTree::Leaf(0: 328), 2: BinaryTree::Leaf(0: 329)), 2: BinaryTree::Node(0: 165, 1: BinaryTree::Leaf(0: 330), 2: BinaryTree::Leaf(0: 331))), 2: BinaryTree::Node(0: 83, 1: BinaryTree::Node(0: 166, 1: BinaryTree::Leaf(0: 332), 2: BinaryTree::Leaf(0: 333)), 2: BinaryTree::Node(0: 167, 1: BinaryTree::Leaf(0: 334), 2: BinaryTree::Leaf(0: 335))))), 2: BinaryTree::Node(0: 21, 1: BinaryTree::Node(0: 42, 1: BinaryTree::Node(0: 84, 1: BinaryTree::Node(0: 168, 1: BinaryTree::Leaf(0: 336), 2: BinaryTree::Leaf(0: 337)), 2: BinaryTree::Node(0: 169, 1: BinaryTree::Leaf(0: 338), 2: BinaryTree::Leaf(0: 339))), 2: BinaryTree::Node(0: 85, 1: BinaryTree::Node(0: 170, 1: BinaryTree::Leaf(0: 340), 2: BinaryTree::Leaf(0: 341)), 2: BinaryTree::Node(0: 171, 1: BinaryTree::Leaf(0: 342), 2: BinaryTree::Leaf(0: 343)))), 2: BinaryTree::Node(0: 43, 1: BinaryTree::Node(0: 86, 1: BinaryTree::Node(0: 172, 1: BinaryTree::Leaf(0: 344), 2: BinaryTree::Leaf(0: 345)), 2: BinaryTree::Node(0: 173, 1: BinaryTree::Leaf(0: 346), 2: BinaryTree::Leaf(0: 347))), 2: BinaryTree::Node(0: 87, 1: BinaryTree::Node(0: 174, 1: BinaryTree::Leaf(0: 348), 2: BinaryTree::Leaf(0: 349)), 2: BinaryTree::Node(0: 175, 1: BinaryTree::Leaf(0: 350), 2: BinaryTree::Leaf(0: 351)))))), 2: BinaryTree::Node(0: 11, 1: BinaryTree::Node(0: 22, 1: BinaryTree::Node(0: 44, 1: BinaryTree::Node(0: 88, 1: BinaryTree::Node(0: 176, 1: BinaryTree::Leaf(0: 352), 2: BinaryTree::Leaf(0: 353)), 2: BinaryTree::Node(0: 177, 1: BinaryTree::Leaf(0: 354), 2: BinaryTree::Leaf(0: 355))), 2: BinaryTree::Node(0: 89, 1: BinaryTree::Node(0: 178, 1: BinaryTree::Leaf(0: 356), 2: BinaryTree::Leaf(0: 357)), 2: BinaryTree::Node(0: 179, 1: BinaryTree::Leaf(0: 358), 2: BinaryTree::Leaf(0: 359)))), 2: BinaryTree::Node(0: 45, 1: BinaryTree::Node(0: 90, 1: BinaryTree::Node(0: 180, 1: BinaryTree::Leaf(0: 360), 2: BinaryTree::Leaf(0: 361)), 2: BinaryTree::Node(0: 181, 1: BinaryTree::Leaf(0: 362), 2: BinaryTree::Leaf(0: 363))), 2: BinaryTree::Node(0: 91, 1: BinaryTree::Node(0: 182, 1: BinaryTree::Leaf(0: 364), 2: BinaryTree::Leaf(0: 365)), 2: BinaryTree::Node(0: 183, 1: BinaryTree::Leaf(0: 366), 2: BinaryTree::Leaf(0: 367))))), 2: BinaryTree::Node(0: 23, 1: BinaryTree::Node(0: 46, 1: BinaryTree::Node(0: 92, 1: BinaryTree::Node(0: 184, 1: BinaryTree::Leaf(0: 368), 2: BinaryTree::Leaf(0: 369)), 2: BinaryTree::Node(0: 185, 1: BinaryTree::Leaf(0: 370), 2: BinaryTree::Leaf(0: 371))), 2: BinaryTree::Node(0: 93, 1: BinaryTree::Node(0: 186, 1: BinaryTree::Leaf(0: 372), 2: BinaryTree::Leaf(0: 373)), 2: BinaryTree::Node(0: 187, 1: BinaryTree::Leaf(0: 374), 2: BinaryTree::Leaf(0: 375)))), 2: BinaryTree::Node(0: 47, 1: BinaryTree::Node(0: 94, 1: BinaryTree::Node(0: 188, 1: BinaryTree::Leaf(0: 376), 2: BinaryTree::Leaf(0: 377)), 2: BinaryTree::Node(0: 189, 1: BinaryTree::Leaf(0: 378), 2: BinaryTree::Leaf(0: 379))), 2: BinaryTree::Node(0: 95, 1: BinaryTree::Node(0: 190, 1: BinaryTree::Leaf(0: 380), 2: BinaryTree::Leaf(0: 381)), 2: BinaryTree::Node(0: 191, 1: BinaryTree::Leaf(0: 382), 2: BinaryTree::Leaf(0: 383)))))))),
    BinaryTree::Node(0: 3, 1: BinaryTree::Node(0: 6, 1: BinaryTree::Node(0: 12, 1: BinaryTree::Node(0: 24, 1: BinaryTree::Node(0: 48, 1: BinaryTree::Node(0: 96, 1: BinaryTree::Node(0: 192, 1: BinaryTree::Leaf(0: 384), 2: BinaryTree::Leaf(0: 385)), 2: BinaryTree::Node(0: 193, 1: BinaryTree::Leaf(0: 386), 2: BinaryTree::Leaf(0: 387))), 2: BinaryTree::Node(0: 97, 1: BinaryTree::Node(0: 194, 1: BinaryTree::Leaf(0: 388), 2: BinaryTree::Leaf(0: 389)), 2: BinaryTree::Node(0: 195, 1: BinaryTree::Leaf(0: 390), 2: BinaryTree::Leaf(0: 391)))), 2: BinaryTree::Node(0: 49, 1: BinaryTree::Node(0: 98, 1: BinaryTree::Node(0: 196, 1: BinaryTree::Leaf(0: 392), 2: BinaryTree::Leaf(0: 393)), 2: BinaryTree::Node(0: 197, 1: BinaryTree::Leaf(0: 394), 2: BinaryTree::Leaf(0: 395))), 2: BinaryTree::Node(0: 99, 1: BinaryTree::Node(0: 198, 1: BinaryTree::Leaf(0: 396), 2: BinaryTree::Leaf(0: 397)), 2: BinaryTree::Node(0: 199, 1: BinaryTree::Leaf(0: 398), 2: BinaryTree::Leaf(0: 399))))), 2: BinaryTree::Node(0: 25, 1: BinaryTree::Node(0: 50, 1: BinaryTree::Node(0: 100, 1: BinaryTree::Node(0: 200, 1: BinaryTree::Leaf(0: 400), 2: BinaryTree::Leaf(0: 401)), 2: BinaryTree::Node(0: 201, 1: BinaryTree::Leaf(0: 402), 2: BinaryTree::Leaf(0: 403))), 2: BinaryTree::Node(0: 101, 1: BinaryTree::Node(0: 202, 1: BinaryTree::Leaf(0: 404), 2: BinaryTree::Leaf(0: 405)), 2: BinaryTree::Node(0: 203, 1: BinaryTree::Leaf(0: 406), 2: BinaryTree::Leaf(0: 407)))), 2: BinaryTree::Node(0: 51, 1: BinaryTree::Node(0: 102, 1: BinaryTree::Node(0: 204, 1: BinaryTree::Leaf(0: 408), 2: BinaryTree::Leaf(0: 409)), 2: BinaryTree::Node(0: 205, 1: BinaryTree::Leaf(0: 410), 2: BinaryTree::Leaf(0: 411))), 2: BinaryTree::Node(0: 103, 1: BinaryTree::Node(0: 206, 1: BinaryTree::Leaf(0: 412), 2: BinaryTree::Leaf(0: 413)), 2: BinaryTree::Node(0: 207, 1: BinaryTree::Leaf(0: 414), 2: BinaryTree::Leaf(0: 415)))))), 2: BinaryTree::Node(0: 13, 1: BinaryTree::Node(0: 26, 1: BinaryTree::Node(0: 52, 1: BinaryTree::Node(0: 104, 1: BinaryTree::Node(0: 208, 1: BinaryTree::Leaf(0: 416), 2: BinaryTree::Leaf(0: 417)), 2: BinaryTree::Node(0: 209, 1: BinaryTree::Leaf(0: 418), 2: BinaryTree::Leaf(0: 419))), 2: BinaryTree::Node(0: 105, 1: BinaryTree::Node(0: 210, 1: BinaryTree::Leaf(0: 420), 2: BinaryTree::Leaf(0: 421)), 2: BinaryTree::Node(0: 211, 1: BinaryTree::Leaf(0: 422), 2: BinaryTree::Leaf(0: 423)))), 2: BinaryTree::Node(0: 53, 1: BinaryTree::Node(0: 106, 1: BinaryTree::Node(0: 212, 1: BinaryTree::Leaf(0: 424), 2: BinaryTree::Leaf(0: 425)), 2: BinaryTree::Node(0: 213, 1: BinaryTree::Leaf(0: 426), 2: BinaryTree::Leaf(0: 427))), 2: BinaryTree::Node(0: 107, 1: BinaryTree::Node(0: 214, 1: BinaryTree::Leaf(0: 428), 2: BinaryTree::Leaf(0: 429)), 2: BinaryTree::Node(0: 215, 1: BinaryTree::Leaf(0: 430), 2: BinaryTree::Leaf(0: 431))))), 2: BinaryTree::Node(0: 27, 1: BinaryTree::Node(0: 54, 1: BinaryTree::Node(0: 108, 1: BinaryTree::Node(0: 216, 1: BinaryTree::Leaf(0: 432), 2: BinaryTree::Leaf(0: 433)), 2: BinaryTree::Node(0: 217, 1: BinaryTree::Leaf(0: 434), 2: BinaryTree::Leaf(0: 435))), 2: BinaryTree::Node(0: 109, 1: BinaryTree::Node(0: 218, 1: BinaryTree::Leaf(0: 436), 2: BinaryTree::Leaf(0: 437)), 2: BinaryTree::Node(0: 219, 1: BinaryTree::Leaf(0: 438), 2: BinaryTree::Leaf(0: 439)))), 2: BinaryTree::Node(0: 55, 1: BinaryTree::Node(0: 110, 1: BinaryTree::Node(0: 220, 1: BinaryTree::Leaf(0: 440), 2: BinaryTree::Leaf(0: 441)), 2: BinaryTree::Node(0: 221, 1: BinaryTree::Leaf(0: 442), 2: BinaryTree::Leaf(0: 443))), 2: BinaryTree::Node(0: 111, 1: BinaryTree::Node(0: 222, 1: BinaryTree::Leaf(0: 444), 2: BinaryTree::Leaf(0: 445)), 2: BinaryTree::Node(0: 223, 1: BinaryTree::Leaf(0: 446), 2: BinaryTree::Leaf(0: 447))))))), 2: BinaryTree::Node(0: 7, 1: BinaryTree::Node(0: 14, 1: BinaryTree::Node(0: 28, 1: BinaryTree::Node(0: 56, 1: BinaryTree::Node(0: 112, 1: BinaryTree::Node(0: 224, 1: BinaryTree::Leaf(0: 448), 2: BinaryTree::Leaf(0: 449)), 2: BinaryTree::Node(0: 225, 1: BinaryTree::Leaf(0: 450), 2: BinaryTree::Leaf(0: 451))), 2: BinaryTree::Node(0: 113, 1: BinaryTree::Node(0: 226, 1: BinaryTree::Leaf(0: 452), 2: BinaryTree::Leaf(0: 453)), 2: BinaryTree::Node(0: 227, 1: BinaryTree::Leaf(0: 454), 2: BinaryTree::Leaf(0: 455)))), 2: BinaryTree::Node(0: 57, 1: BinaryTree::Node(0: 114, 1: BinaryTree::Node(0: 228, 1: BinaryTree::Leaf(0: 456), 2: BinaryTree::Leaf(0: 457)), 2: BinaryTree::Node(0: 229, 1: BinaryTree::Leaf(0: 458), 2: BinaryTree::Leaf(0: 459))), 2: BinaryTree::Node(0: 115, 1: BinaryTree::Node(0: 230, 1: BinaryTree::Leaf(0: 460), 2: BinaryTree::Leaf(0: 461)), 2: BinaryTree::Node(0: 231, 1: BinaryTree::Leaf(0: 462), 2: BinaryTree::Leaf(0: 463))))), 2: BinaryTree::Node(0: 29, 1: BinaryTree::Node(0: 58, 1: BinaryTree::Node(0: 116, 1: BinaryTree::Node(0: 232, 1: BinaryTree::Leaf(0: 464), 2: BinaryTree::Leaf(0: 465)), 2: BinaryTree::Node(0: 233, 1: BinaryTree::Leaf(0: 466), 2: BinaryTree::Leaf(0: 467))), 2: BinaryTree::Node(0: 117, 1: BinaryTree::Node(0: 234, 1: BinaryTree::Leaf(0: 468), 2: BinaryTree::Leaf(0: 469)), 2: BinaryTree::Node(0: 235, 1: BinaryTree::Leaf(0: 470), 2: BinaryTree::Leaf(0: 471)))), 2: BinaryTree::Node(0: 59, 1: BinaryTree::Node(0: 118, 1: BinaryTree::Node(0: 236, 1: BinaryTree::Leaf(0: 472), 2: BinaryTree::Leaf(0: 473)), 2: BinaryTree::Node(0: 237, 1: BinaryTree::Leaf(0: 474), 2: BinaryTree::Leaf(0: 475))), 2: BinaryTree::Node(0: 119, 1: BinaryTree::Node(0: 238, 1: BinaryTree::Leaf(0: 476), 2: BinaryTree::Leaf(0: 477)), 2: BinaryTree::Node(0: 239, 1: BinaryTree::Leaf(0: 478), 2: BinaryTree::Leaf(0: 479)))))), 2: BinaryTree::Node(0: 15, 1: BinaryTree::Node(0: 30, 1: BinaryTree::Node(0: 60, 1: BinaryTree::Node(0: 120, 1: BinaryTree::Node(0: 240, 1: BinaryTree::Leaf(0: 480), 2: BinaryTree::Leaf(0: 481)), 2: BinaryTree::Node(0: 241, 1: BinaryTree::Leaf(0: 482), 2: BinaryTree::Leaf(0: 483))), 2: BinaryTree::Node(0: 121, 1: BinaryTree::Node(0: 242, 1: BinaryTree::Leaf(0: 484), 2: BinaryTree::Leaf(0: 485)), 2: BinaryTree::Node(0: 243, 1: BinaryTree::Leaf(0: 486), 2: BinaryTree::Leaf(0: 487)))), 2: BinaryTree::Node(0: 61, 1: BinaryTree::Node(0: 122, 1: BinaryTree::Node(0: 244, 1: BinaryTree::Leaf(0: 488), 2: BinaryTree::Leaf(0: 489)), 2: BinaryTree::Node(0: 245, 1: BinaryTree::Leaf(0: 490), 2: BinaryTree::Leaf(0: 491))), 2: BinaryTree::Node(0: 123, 1: BinaryTree::Node(0: 246, 1: BinaryTree::Leaf(0: 492), 2: BinaryTree::Leaf(0: 493)), 2: BinaryTree::Node(0: 247, 1: BinaryTree::Leaf(0: 494), 2: BinaryTree::Leaf(0: 495))))), 2: BinaryTree::Node(0: 31, 1: BinaryTree::Node(0: 62, 1: BinaryTree::Node(0: 124, 1: BinaryTree::Node(0: 248, 1: BinaryTree::Leaf(0: 496), 2: BinaryTree::Leaf(0: 497)), 2: BinaryTree::Node(0: 249, 1: BinaryTree::Leaf(0: 498), 2: BinaryTree::Leaf(0: 499))), 2: BinaryTree::Node(0: 125, 1: BinaryTree::Node(0: 250, 1: BinaryTree::Leaf(0: 500), 2: BinaryTree::Leaf(0: 501)), 2: BinaryTree::Node(0: 251, 1: BinaryTree::Leaf(0: 502), 2: BinaryTree::Leaf(0: 503)))), 2: BinaryTree::Node(0: 63, 1: BinaryTree::Node(0: 126, 1: BinaryTree::Node(0: 252, 1: BinaryTree::Leaf(0: 504), 2: BinaryTree::Leaf(0: 505)), 2: BinaryTree::Node(0: 253, 1: BinaryTree::Leaf(0: 506), 2: BinaryTree::Leaf(0: 507))), 2: BinaryTree::Node(0: 127, 1: BinaryTree::Node(0: 254, 1: BinaryTree::Leaf(0: 508), 2: BinaryTree::Leaf(0: 509)), 2: BinaryTree::Node(0: 255, 1: BinaryTree::Leaf(0: 510), 2: BinaryTree::Leaf(0: 511)))))))),
  },
]

  at function tree_depth:49:41
  at root 82:12

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
