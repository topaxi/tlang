---
source: crates/tlang_test_runner/src/main.rs
description: Known failure - output may not match expected
expression: output
input_file: tests/known_failures/recursive_data_structures.tlang
---
=== Recursive Data Structures Test ===
5050

[2025-08-27T10:15:21Z WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'left' on line 49:41. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[2025-08-27T10:15:21Z WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'right' on line 50:42. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[2025-08-27T10:15:21Z WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'left' on line 49:41, as it has not been resolved
[2025-08-27T10:15:21Z WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'right' on line 50:42, as it has not been resolved

thread 'main' panicked at crates/tlang_runtime/tlang_memory/src/state.rs:328:9:
Could not resolve path "left" (Res { hir_id: None, binding_kind: Unknown, slot: None })
Current scope: [
  {
    LinkedList::Empty,
    BinaryTree::Empty,
    fn create_list#17(n),
    fn create_balanced_tree#39(depth, value),
    fn sum_list#79(list),
    fn tree_depth#97(tree),
    fn create_unbalanced_tree#136(depth),
    LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Node(1: LinkedList::Empty, 0: 1), 0: 2), 0: 3), 0: 4), 0: 5), 0: 6), 0: 7), 0: 8), 0: 9), 0: 10), 0: 11), 0: 12), 0: 13), 0: 14), 0: 15), 0: 16), 0: 17), 0: 18), 0: 19), 0: 20), 0: 21), 0: 22), 0: 23), 0: 24), 0: 25), 0: 26), 0: 27), 0: 28), 0: 29), 0: 30), 0: 31), 0: 32), 0: 33), 0: 34), 0: 35), 0: 36), 0: 37), 0: 38), 0: 39), 0: 40), 0: 41), 0: 42), 0: 43), 0: 44), 0: 45), 0: 46), 0: 47), 0: 48), 0: 49), 0: 50), 0: 51), 0: 52), 0: 53), 0: 54), 0: 55), 0: 56), 0: 57), 0: 58), 0: 59), 0: 60), 0: 61), 0: 62), 0: 63), 0: 64), 0: 65), 0: 66), 0: 67), 0: 68), 0: 69), 0: 70), 0: 71), 0: 72), 0: 73), 0: 74), 0: 75), 0: 76), 0: 77), 0: 78), 0: 79), 0: 80), 0: 81), 0: 82), 0: 83), 0: 84), 0: 85), 0: 86), 0: 87), 0: 88), 0: 89), 0: 90), 0: 91), 0: 92), 0: 93), 0: 94), 0: 95), 0: 96), 0: 97), 0: 98), 0: 99), 0: 100),
    BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 256), 0: 128, 2: BinaryTree::Leaf(0: 257)), 0: 64, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 258), 0: 129, 2: BinaryTree::Leaf(0: 259))), 0: 32, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 260), 0: 130, 2: BinaryTree::Leaf(0: 261)), 0: 65, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 262), 0: 131, 2: BinaryTree::Leaf(0: 263)))), 0: 16, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 264), 0: 132, 2: BinaryTree::Leaf(0: 265)), 0: 66, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 266), 0: 133, 2: BinaryTree::Leaf(0: 267))), 0: 33, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 268), 0: 134, 2: BinaryTree::Leaf(0: 269)), 0: 67, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 270), 0: 135, 2: BinaryTree::Leaf(0: 271))))), 0: 8, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 272), 0: 136, 2: BinaryTree::Leaf(0: 273)), 0: 68, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 274), 0: 137, 2: BinaryTree::Leaf(0: 275))), 0: 34, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 276), 0: 138, 2: BinaryTree::Leaf(0: 277)), 0: 69, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 278), 0: 139, 2: BinaryTree::Leaf(0: 279)))), 0: 17, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 280), 0: 140, 2: BinaryTree::Leaf(0: 281)), 0: 70, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 282), 0: 141, 2: BinaryTree::Leaf(0: 283))), 0: 35, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 284), 0: 142, 2: BinaryTree::Leaf(0: 285)), 0: 71, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 286), 0: 143, 2: BinaryTree::Leaf(0: 287)))))), 0: 4, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 288), 0: 144, 2: BinaryTree::Leaf(0: 289)), 0: 72, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 290), 0: 145, 2: BinaryTree::Leaf(0: 291))), 0: 36, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 292), 0: 146, 2: BinaryTree::Leaf(0: 293)), 0: 73, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 294), 0: 147, 2: BinaryTree::Leaf(0: 295)))), 0: 18, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 296), 0: 148, 2: BinaryTree::Leaf(0: 297)), 0: 74, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 298), 0: 149, 2: BinaryTree::Leaf(0: 299))), 0: 37, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 300), 0: 150, 2: BinaryTree::Leaf(0: 301)), 0: 75, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 302), 0: 151, 2: BinaryTree::Leaf(0: 303))))), 0: 9, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 304), 0: 152, 2: BinaryTree::Leaf(0: 305)), 0: 76, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 306), 0: 153, 2: BinaryTree::Leaf(0: 307))), 0: 38, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 308), 0: 154, 2: BinaryTree::Leaf(0: 309)), 0: 77, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 310), 0: 155, 2: BinaryTree::Leaf(0: 311)))), 0: 19, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 312), 0: 156, 2: BinaryTree::Leaf(0: 313)), 0: 78, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 314), 0: 157, 2: BinaryTree::Leaf(0: 315))), 0: 39, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 316), 0: 158, 2: BinaryTree::Leaf(0: 317)), 0: 79, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 318), 0: 159, 2: BinaryTree::Leaf(0: 319))))))), 0: 2, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 320), 0: 160, 2: BinaryTree::Leaf(0: 321)), 0: 80, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 322), 0: 161, 2: BinaryTree::Leaf(0: 323))), 0: 40, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 324), 0: 162, 2: BinaryTree::Leaf(0: 325)), 0: 81, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 326), 0: 163, 2: BinaryTree::Leaf(0: 327)))), 0: 20, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 328), 0: 164, 2: BinaryTree::Leaf(0: 329)), 0: 82, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 330), 0: 165, 2: BinaryTree::Leaf(0: 331))), 0: 41, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 332), 0: 166, 2: BinaryTree::Leaf(0: 333)), 0: 83, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 334), 0: 167, 2: BinaryTree::Leaf(0: 335))))), 0: 10, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 336), 0: 168, 2: BinaryTree::Leaf(0: 337)), 0: 84, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 338), 0: 169, 2: BinaryTree::Leaf(0: 339))), 0: 42, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 340), 0: 170, 2: BinaryTree::Leaf(0: 341)), 0: 85, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 342), 0: 171, 2: BinaryTree::Leaf(0: 343)))), 0: 21, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 344), 0: 172, 2: BinaryTree::Leaf(0: 345)), 0: 86, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 346), 0: 173, 2: BinaryTree::Leaf(0: 347))), 0: 43, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 348), 0: 174, 2: BinaryTree::Leaf(0: 349)), 0: 87, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 350), 0: 175, 2: BinaryTree::Leaf(0: 351)))))), 0: 5, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 352), 0: 176, 2: BinaryTree::Leaf(0: 353)), 0: 88, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 354), 0: 177, 2: BinaryTree::Leaf(0: 355))), 0: 44, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 356), 0: 178, 2: BinaryTree::Leaf(0: 357)), 0: 89, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 358), 0: 179, 2: BinaryTree::Leaf(0: 359)))), 0: 22, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 360), 0: 180, 2: BinaryTree::Leaf(0: 361)), 0: 90, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 362), 0: 181, 2: BinaryTree::Leaf(0: 363))), 0: 45, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 364), 0: 182, 2: BinaryTree::Leaf(0: 365)), 0: 91, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 366), 0: 183, 2: BinaryTree::Leaf(0: 367))))), 0: 11, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 368), 0: 184, 2: BinaryTree::Leaf(0: 369)), 0: 92, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 370), 0: 185, 2: BinaryTree::Leaf(0: 371))), 0: 46, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 372), 0: 186, 2: BinaryTree::Leaf(0: 373)), 0: 93, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 374), 0: 187, 2: BinaryTree::Leaf(0: 375)))), 0: 23, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 376), 0: 188, 2: BinaryTree::Leaf(0: 377)), 0: 94, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 378), 0: 189, 2: BinaryTree::Leaf(0: 379))), 0: 47, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 380), 0: 190, 2: BinaryTree::Leaf(0: 381)), 0: 95, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 382), 0: 191, 2: BinaryTree::Leaf(0: 383)))))))), 0: 1, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 384), 0: 192, 2: BinaryTree::Leaf(0: 385)), 0: 96, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 386), 0: 193, 2: BinaryTree::Leaf(0: 387))), 0: 48, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 388), 0: 194, 2: BinaryTree::Leaf(0: 389)), 0: 97, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 390), 0: 195, 2: BinaryTree::Leaf(0: 391)))), 0: 24, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 392), 0: 196, 2: BinaryTree::Leaf(0: 393)), 0: 98, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 394), 0: 197, 2: BinaryTree::Leaf(0: 395))), 0: 49, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 396), 0: 198, 2: BinaryTree::Leaf(0: 397)), 0: 99, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 398), 0: 199, 2: BinaryTree::Leaf(0: 399))))), 0: 12, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 400), 0: 200, 2: BinaryTree::Leaf(0: 401)), 0: 100, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 402), 0: 201, 2: BinaryTree::Leaf(0: 403))), 0: 50, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 404), 0: 202, 2: BinaryTree::Leaf(0: 405)), 0: 101, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 406), 0: 203, 2: BinaryTree::Leaf(0: 407)))), 0: 25, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 408), 0: 204, 2: BinaryTree::Leaf(0: 409)), 0: 102, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 410), 0: 205, 2: BinaryTree::Leaf(0: 411))), 0: 51, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 412), 0: 206, 2: BinaryTree::Leaf(0: 413)), 0: 103, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 414), 0: 207, 2: BinaryTree::Leaf(0: 415)))))), 0: 6, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 416), 0: 208, 2: BinaryTree::Leaf(0: 417)), 0: 104, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 418), 0: 209, 2: BinaryTree::Leaf(0: 419))), 0: 52, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 420), 0: 210, 2: BinaryTree::Leaf(0: 421)), 0: 105, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 422), 0: 211, 2: BinaryTree::Leaf(0: 423)))), 0: 26, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 424), 0: 212, 2: BinaryTree::Leaf(0: 425)), 0: 106, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 426), 0: 213, 2: BinaryTree::Leaf(0: 427))), 0: 53, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 428), 0: 214, 2: BinaryTree::Leaf(0: 429)), 0: 107, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 430), 0: 215, 2: BinaryTree::Leaf(0: 431))))), 0: 13, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 432), 0: 216, 2: BinaryTree::Leaf(0: 433)), 0: 108, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 434), 0: 217, 2: BinaryTree::Leaf(0: 435))), 0: 54, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 436), 0: 218, 2: BinaryTree::Leaf(0: 437)), 0: 109, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 438), 0: 219, 2: BinaryTree::Leaf(0: 439)))), 0: 27, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 440), 0: 220, 2: BinaryTree::Leaf(0: 441)), 0: 110, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 442), 0: 221, 2: BinaryTree::Leaf(0: 443))), 0: 55, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 444), 0: 222, 2: BinaryTree::Leaf(0: 445)), 0: 111, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 446), 0: 223, 2: BinaryTree::Leaf(0: 447))))))), 0: 3, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 448), 0: 224, 2: BinaryTree::Leaf(0: 449)), 0: 112, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 450), 0: 225, 2: BinaryTree::Leaf(0: 451))), 0: 56, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 452), 0: 226, 2: BinaryTree::Leaf(0: 453)), 0: 113, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 454), 0: 227, 2: BinaryTree::Leaf(0: 455)))), 0: 28, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 456), 0: 228, 2: BinaryTree::Leaf(0: 457)), 0: 114, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 458), 0: 229, 2: BinaryTree::Leaf(0: 459))), 0: 57, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 460), 0: 230, 2: BinaryTree::Leaf(0: 461)), 0: 115, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 462), 0: 231, 2: BinaryTree::Leaf(0: 463))))), 0: 14, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 464), 0: 232, 2: BinaryTree::Leaf(0: 465)), 0: 116, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 466), 0: 233, 2: BinaryTree::Leaf(0: 467))), 0: 58, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 468), 0: 234, 2: BinaryTree::Leaf(0: 469)), 0: 117, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 470), 0: 235, 2: BinaryTree::Leaf(0: 471)))), 0: 29, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 472), 0: 236, 2: BinaryTree::Leaf(0: 473)), 0: 118, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 474), 0: 237, 2: BinaryTree::Leaf(0: 475))), 0: 59, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 476), 0: 238, 2: BinaryTree::Leaf(0: 477)), 0: 119, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 478), 0: 239, 2: BinaryTree::Leaf(0: 479)))))), 0: 7, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 480), 0: 240, 2: BinaryTree::Leaf(0: 481)), 0: 120, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 482), 0: 241, 2: BinaryTree::Leaf(0: 483))), 0: 60, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 484), 0: 242, 2: BinaryTree::Leaf(0: 485)), 0: 121, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 486), 0: 243, 2: BinaryTree::Leaf(0: 487)))), 0: 30, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 488), 0: 244, 2: BinaryTree::Leaf(0: 489)), 0: 122, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 490), 0: 245, 2: BinaryTree::Leaf(0: 491))), 0: 61, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 492), 0: 246, 2: BinaryTree::Leaf(0: 493)), 0: 123, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 494), 0: 247, 2: BinaryTree::Leaf(0: 495))))), 0: 15, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 496), 0: 248, 2: BinaryTree::Leaf(0: 497)), 0: 124, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 498), 0: 249, 2: BinaryTree::Leaf(0: 499))), 0: 62, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 500), 0: 250, 2: BinaryTree::Leaf(0: 501)), 0: 125, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 502), 0: 251, 2: BinaryTree::Leaf(0: 503)))), 0: 31, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 504), 0: 252, 2: BinaryTree::Leaf(0: 505)), 0: 126, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 506), 0: 253, 2: BinaryTree::Leaf(0: 507))), 0: 63, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 508), 0: 254, 2: BinaryTree::Leaf(0: 509)), 0: 127, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 510), 0: 255, 2: BinaryTree::Leaf(0: 511))))))))),
    BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Empty, 0: 1, 2: BinaryTree::Leaf(0: 10)), 0: 2, 2: BinaryTree::Leaf(0: 20)), 0: 3, 2: BinaryTree::Leaf(0: 30)), 0: 4, 2: BinaryTree::Leaf(0: 40)), 0: 5, 2: BinaryTree::Leaf(0: 50)), 0: 6, 2: BinaryTree::Leaf(0: 60)), 0: 7, 2: BinaryTree::Leaf(0: 70)), 0: 8, 2: BinaryTree::Leaf(0: 80)), 0: 9, 2: BinaryTree::Leaf(0: 90)), 0: 10, 2: BinaryTree::Leaf(0: 100)), 0: 11, 2: BinaryTree::Leaf(0: 110)), 0: 12, 2: BinaryTree::Leaf(0: 120)), 0: 13, 2: BinaryTree::Leaf(0: 130)), 0: 14, 2: BinaryTree::Leaf(0: 140)), 0: 15, 2: BinaryTree::Leaf(0: 150)), 0: 16, 2: BinaryTree::Leaf(0: 160)), 0: 17, 2: BinaryTree::Leaf(0: 170)), 0: 18, 2: BinaryTree::Leaf(0: 180)), 0: 19, 2: BinaryTree::Leaf(0: 190)), 0: 20, 2: BinaryTree::Leaf(0: 200)), 0: 21, 2: BinaryTree::Leaf(0: 210)), 0: 22, 2: BinaryTree::Leaf(0: 220)), 0: 23, 2: BinaryTree::Leaf(0: 230)), 0: 24, 2: BinaryTree::Leaf(0: 240)), 0: 25, 2: BinaryTree::Leaf(0: 250)), 0: 26, 2: BinaryTree::Leaf(0: 260)), 0: 27, 2: BinaryTree::Leaf(0: 270)), 0: 28, 2: BinaryTree::Leaf(0: 280)), 0: 29, 2: BinaryTree::Leaf(0: 290)), 0: 30, 2: BinaryTree::Leaf(0: 300)), 0: 31, 2: BinaryTree::Leaf(0: 310)), 0: 32, 2: BinaryTree::Leaf(0: 320)), 0: 33, 2: BinaryTree::Leaf(0: 330)), 0: 34, 2: BinaryTree::Leaf(0: 340)), 0: 35, 2: BinaryTree::Leaf(0: 350)), 0: 36, 2: BinaryTree::Leaf(0: 360)), 0: 37, 2: BinaryTree::Leaf(0: 370)), 0: 38, 2: BinaryTree::Leaf(0: 380)), 0: 39, 2: BinaryTree::Leaf(0: 390)), 0: 40, 2: BinaryTree::Leaf(0: 400)), 0: 41, 2: BinaryTree::Leaf(0: 410)), 0: 42, 2: BinaryTree::Leaf(0: 420)), 0: 43, 2: BinaryTree::Leaf(0: 430)), 0: 44, 2: BinaryTree::Leaf(0: 440)), 0: 45, 2: BinaryTree::Leaf(0: 450)), 0: 46, 2: BinaryTree::Leaf(0: 460)), 0: 47, 2: BinaryTree::Leaf(0: 470)), 0: 48, 2: BinaryTree::Leaf(0: 480)), 0: 49, 2: BinaryTree::Leaf(0: 490)), 0: 50, 2: BinaryTree::Leaf(0: 500)),
  },
  {
    fn tree_depth#97(tree),
    BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 256), 0: 128, 2: BinaryTree::Leaf(0: 257)), 0: 64, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 258), 0: 129, 2: BinaryTree::Leaf(0: 259))), 0: 32, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 260), 0: 130, 2: BinaryTree::Leaf(0: 261)), 0: 65, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 262), 0: 131, 2: BinaryTree::Leaf(0: 263)))), 0: 16, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 264), 0: 132, 2: BinaryTree::Leaf(0: 265)), 0: 66, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 266), 0: 133, 2: BinaryTree::Leaf(0: 267))), 0: 33, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 268), 0: 134, 2: BinaryTree::Leaf(0: 269)), 0: 67, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 270), 0: 135, 2: BinaryTree::Leaf(0: 271))))), 0: 8, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 272), 0: 136, 2: BinaryTree::Leaf(0: 273)), 0: 68, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 274), 0: 137, 2: BinaryTree::Leaf(0: 275))), 0: 34, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 276), 0: 138, 2: BinaryTree::Leaf(0: 277)), 0: 69, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 278), 0: 139, 2: BinaryTree::Leaf(0: 279)))), 0: 17, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 280), 0: 140, 2: BinaryTree::Leaf(0: 281)), 0: 70, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 282), 0: 141, 2: BinaryTree::Leaf(0: 283))), 0: 35, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 284), 0: 142, 2: BinaryTree::Leaf(0: 285)), 0: 71, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 286), 0: 143, 2: BinaryTree::Leaf(0: 287)))))), 0: 4, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 288), 0: 144, 2: BinaryTree::Leaf(0: 289)), 0: 72, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 290), 0: 145, 2: BinaryTree::Leaf(0: 291))), 0: 36, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 292), 0: 146, 2: BinaryTree::Leaf(0: 293)), 0: 73, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 294), 0: 147, 2: BinaryTree::Leaf(0: 295)))), 0: 18, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 296), 0: 148, 2: BinaryTree::Leaf(0: 297)), 0: 74, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 298), 0: 149, 2: BinaryTree::Leaf(0: 299))), 0: 37, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 300), 0: 150, 2: BinaryTree::Leaf(0: 301)), 0: 75, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 302), 0: 151, 2: BinaryTree::Leaf(0: 303))))), 0: 9, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 304), 0: 152, 2: BinaryTree::Leaf(0: 305)), 0: 76, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 306), 0: 153, 2: BinaryTree::Leaf(0: 307))), 0: 38, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 308), 0: 154, 2: BinaryTree::Leaf(0: 309)), 0: 77, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 310), 0: 155, 2: BinaryTree::Leaf(0: 311)))), 0: 19, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 312), 0: 156, 2: BinaryTree::Leaf(0: 313)), 0: 78, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 314), 0: 157, 2: BinaryTree::Leaf(0: 315))), 0: 39, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 316), 0: 158, 2: BinaryTree::Leaf(0: 317)), 0: 79, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 318), 0: 159, 2: BinaryTree::Leaf(0: 319))))))), 0: 2, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 320), 0: 160, 2: BinaryTree::Leaf(0: 321)), 0: 80, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 322), 0: 161, 2: BinaryTree::Leaf(0: 323))), 0: 40, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 324), 0: 162, 2: BinaryTree::Leaf(0: 325)), 0: 81, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 326), 0: 163, 2: BinaryTree::Leaf(0: 327)))), 0: 20, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 328), 0: 164, 2: BinaryTree::Leaf(0: 329)), 0: 82, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 330), 0: 165, 2: BinaryTree::Leaf(0: 331))), 0: 41, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 332), 0: 166, 2: BinaryTree::Leaf(0: 333)), 0: 83, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 334), 0: 167, 2: BinaryTree::Leaf(0: 335))))), 0: 10, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 336), 0: 168, 2: BinaryTree::Leaf(0: 337)), 0: 84, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 338), 0: 169, 2: BinaryTree::Leaf(0: 339))), 0: 42, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 340), 0: 170, 2: BinaryTree::Leaf(0: 341)), 0: 85, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 342), 0: 171, 2: BinaryTree::Leaf(0: 343)))), 0: 21, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 344), 0: 172, 2: BinaryTree::Leaf(0: 345)), 0: 86, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 346), 0: 173, 2: BinaryTree::Leaf(0: 347))), 0: 43, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 348), 0: 174, 2: BinaryTree::Leaf(0: 349)), 0: 87, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 350), 0: 175, 2: BinaryTree::Leaf(0: 351)))))), 0: 5, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 352), 0: 176, 2: BinaryTree::Leaf(0: 353)), 0: 88, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 354), 0: 177, 2: BinaryTree::Leaf(0: 355))), 0: 44, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 356), 0: 178, 2: BinaryTree::Leaf(0: 357)), 0: 89, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 358), 0: 179, 2: BinaryTree::Leaf(0: 359)))), 0: 22, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 360), 0: 180, 2: BinaryTree::Leaf(0: 361)), 0: 90, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 362), 0: 181, 2: BinaryTree::Leaf(0: 363))), 0: 45, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 364), 0: 182, 2: BinaryTree::Leaf(0: 365)), 0: 91, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 366), 0: 183, 2: BinaryTree::Leaf(0: 367))))), 0: 11, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 368), 0: 184, 2: BinaryTree::Leaf(0: 369)), 0: 92, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 370), 0: 185, 2: BinaryTree::Leaf(0: 371))), 0: 46, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 372), 0: 186, 2: BinaryTree::Leaf(0: 373)), 0: 93, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 374), 0: 187, 2: BinaryTree::Leaf(0: 375)))), 0: 23, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 376), 0: 188, 2: BinaryTree::Leaf(0: 377)), 0: 94, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 378), 0: 189, 2: BinaryTree::Leaf(0: 379))), 0: 47, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 380), 0: 190, 2: BinaryTree::Leaf(0: 381)), 0: 95, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 382), 0: 191, 2: BinaryTree::Leaf(0: 383)))))))), 0: 1, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 384), 0: 192, 2: BinaryTree::Leaf(0: 385)), 0: 96, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 386), 0: 193, 2: BinaryTree::Leaf(0: 387))), 0: 48, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 388), 0: 194, 2: BinaryTree::Leaf(0: 389)), 0: 97, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 390), 0: 195, 2: BinaryTree::Leaf(0: 391)))), 0: 24, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 392), 0: 196, 2: BinaryTree::Leaf(0: 393)), 0: 98, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 394), 0: 197, 2: BinaryTree::Leaf(0: 395))), 0: 49, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 396), 0: 198, 2: BinaryTree::Leaf(0: 397)), 0: 99, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 398), 0: 199, 2: BinaryTree::Leaf(0: 399))))), 0: 12, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 400), 0: 200, 2: BinaryTree::Leaf(0: 401)), 0: 100, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 402), 0: 201, 2: BinaryTree::Leaf(0: 403))), 0: 50, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 404), 0: 202, 2: BinaryTree::Leaf(0: 405)), 0: 101, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 406), 0: 203, 2: BinaryTree::Leaf(0: 407)))), 0: 25, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 408), 0: 204, 2: BinaryTree::Leaf(0: 409)), 0: 102, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 410), 0: 205, 2: BinaryTree::Leaf(0: 411))), 0: 51, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 412), 0: 206, 2: BinaryTree::Leaf(0: 413)), 0: 103, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 414), 0: 207, 2: BinaryTree::Leaf(0: 415)))))), 0: 6, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 416), 0: 208, 2: BinaryTree::Leaf(0: 417)), 0: 104, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 418), 0: 209, 2: BinaryTree::Leaf(0: 419))), 0: 52, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 420), 0: 210, 2: BinaryTree::Leaf(0: 421)), 0: 105, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 422), 0: 211, 2: BinaryTree::Leaf(0: 423)))), 0: 26, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 424), 0: 212, 2: BinaryTree::Leaf(0: 425)), 0: 106, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 426), 0: 213, 2: BinaryTree::Leaf(0: 427))), 0: 53, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 428), 0: 214, 2: BinaryTree::Leaf(0: 429)), 0: 107, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 430), 0: 215, 2: BinaryTree::Leaf(0: 431))))), 0: 13, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 432), 0: 216, 2: BinaryTree::Leaf(0: 433)), 0: 108, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 434), 0: 217, 2: BinaryTree::Leaf(0: 435))), 0: 54, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 436), 0: 218, 2: BinaryTree::Leaf(0: 437)), 0: 109, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 438), 0: 219, 2: BinaryTree::Leaf(0: 439)))), 0: 27, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 440), 0: 220, 2: BinaryTree::Leaf(0: 441)), 0: 110, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 442), 0: 221, 2: BinaryTree::Leaf(0: 443))), 0: 55, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 444), 0: 222, 2: BinaryTree::Leaf(0: 445)), 0: 111, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 446), 0: 223, 2: BinaryTree::Leaf(0: 447))))))), 0: 3, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 448), 0: 224, 2: BinaryTree::Leaf(0: 449)), 0: 112, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 450), 0: 225, 2: BinaryTree::Leaf(0: 451))), 0: 56, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 452), 0: 226, 2: BinaryTree::Leaf(0: 453)), 0: 113, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 454), 0: 227, 2: BinaryTree::Leaf(0: 455)))), 0: 28, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 456), 0: 228, 2: BinaryTree::Leaf(0: 457)), 0: 114, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 458), 0: 229, 2: BinaryTree::Leaf(0: 459))), 0: 57, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 460), 0: 230, 2: BinaryTree::Leaf(0: 461)), 0: 115, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 462), 0: 231, 2: BinaryTree::Leaf(0: 463))))), 0: 14, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 464), 0: 232, 2: BinaryTree::Leaf(0: 465)), 0: 116, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 466), 0: 233, 2: BinaryTree::Leaf(0: 467))), 0: 58, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 468), 0: 234, 2: BinaryTree::Leaf(0: 469)), 0: 117, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 470), 0: 235, 2: BinaryTree::Leaf(0: 471)))), 0: 29, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 472), 0: 236, 2: BinaryTree::Leaf(0: 473)), 0: 118, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 474), 0: 237, 2: BinaryTree::Leaf(0: 475))), 0: 59, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 476), 0: 238, 2: BinaryTree::Leaf(0: 477)), 0: 119, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 478), 0: 239, 2: BinaryTree::Leaf(0: 479)))))), 0: 7, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 480), 0: 240, 2: BinaryTree::Leaf(0: 481)), 0: 120, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 482), 0: 241, 2: BinaryTree::Leaf(0: 483))), 0: 60, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 484), 0: 242, 2: BinaryTree::Leaf(0: 485)), 0: 121, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 486), 0: 243, 2: BinaryTree::Leaf(0: 487)))), 0: 30, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 488), 0: 244, 2: BinaryTree::Leaf(0: 489)), 0: 122, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 490), 0: 245, 2: BinaryTree::Leaf(0: 491))), 0: 61, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 492), 0: 246, 2: BinaryTree::Leaf(0: 493)), 0: 123, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 494), 0: 247, 2: BinaryTree::Leaf(0: 495))))), 0: 15, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 496), 0: 248, 2: BinaryTree::Leaf(0: 497)), 0: 124, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 498), 0: 249, 2: BinaryTree::Leaf(0: 499))), 0: 62, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 500), 0: 250, 2: BinaryTree::Leaf(0: 501)), 0: 125, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 502), 0: 251, 2: BinaryTree::Leaf(0: 503)))), 0: 31, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 504), 0: 252, 2: BinaryTree::Leaf(0: 505)), 0: 126, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 506), 0: 253, 2: BinaryTree::Leaf(0: 507))), 0: 63, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 508), 0: 254, 2: BinaryTree::Leaf(0: 509)), 0: 127, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 510), 0: 255, 2: BinaryTree::Leaf(0: 511))))))))),
  },
  {
    BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 256), 0: 128, 2: BinaryTree::Leaf(0: 257)), 0: 64, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 258), 0: 129, 2: BinaryTree::Leaf(0: 259))), 0: 32, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 260), 0: 130, 2: BinaryTree::Leaf(0: 261)), 0: 65, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 262), 0: 131, 2: BinaryTree::Leaf(0: 263)))), 0: 16, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 264), 0: 132, 2: BinaryTree::Leaf(0: 265)), 0: 66, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 266), 0: 133, 2: BinaryTree::Leaf(0: 267))), 0: 33, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 268), 0: 134, 2: BinaryTree::Leaf(0: 269)), 0: 67, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 270), 0: 135, 2: BinaryTree::Leaf(0: 271))))), 0: 8, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 272), 0: 136, 2: BinaryTree::Leaf(0: 273)), 0: 68, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 274), 0: 137, 2: BinaryTree::Leaf(0: 275))), 0: 34, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 276), 0: 138, 2: BinaryTree::Leaf(0: 277)), 0: 69, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 278), 0: 139, 2: BinaryTree::Leaf(0: 279)))), 0: 17, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 280), 0: 140, 2: BinaryTree::Leaf(0: 281)), 0: 70, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 282), 0: 141, 2: BinaryTree::Leaf(0: 283))), 0: 35, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 284), 0: 142, 2: BinaryTree::Leaf(0: 285)), 0: 71, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 286), 0: 143, 2: BinaryTree::Leaf(0: 287)))))), 0: 4, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 288), 0: 144, 2: BinaryTree::Leaf(0: 289)), 0: 72, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 290), 0: 145, 2: BinaryTree::Leaf(0: 291))), 0: 36, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 292), 0: 146, 2: BinaryTree::Leaf(0: 293)), 0: 73, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 294), 0: 147, 2: BinaryTree::Leaf(0: 295)))), 0: 18, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 296), 0: 148, 2: BinaryTree::Leaf(0: 297)), 0: 74, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 298), 0: 149, 2: BinaryTree::Leaf(0: 299))), 0: 37, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 300), 0: 150, 2: BinaryTree::Leaf(0: 301)), 0: 75, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 302), 0: 151, 2: BinaryTree::Leaf(0: 303))))), 0: 9, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 304), 0: 152, 2: BinaryTree::Leaf(0: 305)), 0: 76, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 306), 0: 153, 2: BinaryTree::Leaf(0: 307))), 0: 38, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 308), 0: 154, 2: BinaryTree::Leaf(0: 309)), 0: 77, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 310), 0: 155, 2: BinaryTree::Leaf(0: 311)))), 0: 19, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 312), 0: 156, 2: BinaryTree::Leaf(0: 313)), 0: 78, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 314), 0: 157, 2: BinaryTree::Leaf(0: 315))), 0: 39, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 316), 0: 158, 2: BinaryTree::Leaf(0: 317)), 0: 79, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 318), 0: 159, 2: BinaryTree::Leaf(0: 319))))))), 0: 2, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 320), 0: 160, 2: BinaryTree::Leaf(0: 321)), 0: 80, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 322), 0: 161, 2: BinaryTree::Leaf(0: 323))), 0: 40, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 324), 0: 162, 2: BinaryTree::Leaf(0: 325)), 0: 81, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 326), 0: 163, 2: BinaryTree::Leaf(0: 327)))), 0: 20, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 328), 0: 164, 2: BinaryTree::Leaf(0: 329)), 0: 82, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 330), 0: 165, 2: BinaryTree::Leaf(0: 331))), 0: 41, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 332), 0: 166, 2: BinaryTree::Leaf(0: 333)), 0: 83, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 334), 0: 167, 2: BinaryTree::Leaf(0: 335))))), 0: 10, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 336), 0: 168, 2: BinaryTree::Leaf(0: 337)), 0: 84, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 338), 0: 169, 2: BinaryTree::Leaf(0: 339))), 0: 42, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 340), 0: 170, 2: BinaryTree::Leaf(0: 341)), 0: 85, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 342), 0: 171, 2: BinaryTree::Leaf(0: 343)))), 0: 21, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 344), 0: 172, 2: BinaryTree::Leaf(0: 345)), 0: 86, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 346), 0: 173, 2: BinaryTree::Leaf(0: 347))), 0: 43, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 348), 0: 174, 2: BinaryTree::Leaf(0: 349)), 0: 87, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 350), 0: 175, 2: BinaryTree::Leaf(0: 351)))))), 0: 5, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 352), 0: 176, 2: BinaryTree::Leaf(0: 353)), 0: 88, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 354), 0: 177, 2: BinaryTree::Leaf(0: 355))), 0: 44, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 356), 0: 178, 2: BinaryTree::Leaf(0: 357)), 0: 89, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 358), 0: 179, 2: BinaryTree::Leaf(0: 359)))), 0: 22, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 360), 0: 180, 2: BinaryTree::Leaf(0: 361)), 0: 90, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 362), 0: 181, 2: BinaryTree::Leaf(0: 363))), 0: 45, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 364), 0: 182, 2: BinaryTree::Leaf(0: 365)), 0: 91, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 366), 0: 183, 2: BinaryTree::Leaf(0: 367))))), 0: 11, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 368), 0: 184, 2: BinaryTree::Leaf(0: 369)), 0: 92, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 370), 0: 185, 2: BinaryTree::Leaf(0: 371))), 0: 46, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 372), 0: 186, 2: BinaryTree::Leaf(0: 373)), 0: 93, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 374), 0: 187, 2: BinaryTree::Leaf(0: 375)))), 0: 23, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 376), 0: 188, 2: BinaryTree::Leaf(0: 377)), 0: 94, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 378), 0: 189, 2: BinaryTree::Leaf(0: 379))), 0: 47, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 380), 0: 190, 2: BinaryTree::Leaf(0: 381)), 0: 95, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 382), 0: 191, 2: BinaryTree::Leaf(0: 383)))))))),
    BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 384), 0: 192, 2: BinaryTree::Leaf(0: 385)), 0: 96, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 386), 0: 193, 2: BinaryTree::Leaf(0: 387))), 0: 48, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 388), 0: 194, 2: BinaryTree::Leaf(0: 389)), 0: 97, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 390), 0: 195, 2: BinaryTree::Leaf(0: 391)))), 0: 24, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 392), 0: 196, 2: BinaryTree::Leaf(0: 393)), 0: 98, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 394), 0: 197, 2: BinaryTree::Leaf(0: 395))), 0: 49, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 396), 0: 198, 2: BinaryTree::Leaf(0: 397)), 0: 99, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 398), 0: 199, 2: BinaryTree::Leaf(0: 399))))), 0: 12, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 400), 0: 200, 2: BinaryTree::Leaf(0: 401)), 0: 100, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 402), 0: 201, 2: BinaryTree::Leaf(0: 403))), 0: 50, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 404), 0: 202, 2: BinaryTree::Leaf(0: 405)), 0: 101, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 406), 0: 203, 2: BinaryTree::Leaf(0: 407)))), 0: 25, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 408), 0: 204, 2: BinaryTree::Leaf(0: 409)), 0: 102, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 410), 0: 205, 2: BinaryTree::Leaf(0: 411))), 0: 51, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 412), 0: 206, 2: BinaryTree::Leaf(0: 413)), 0: 103, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 414), 0: 207, 2: BinaryTree::Leaf(0: 415)))))), 0: 6, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 416), 0: 208, 2: BinaryTree::Leaf(0: 417)), 0: 104, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 418), 0: 209, 2: BinaryTree::Leaf(0: 419))), 0: 52, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 420), 0: 210, 2: BinaryTree::Leaf(0: 421)), 0: 105, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 422), 0: 211, 2: BinaryTree::Leaf(0: 423)))), 0: 26, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 424), 0: 212, 2: BinaryTree::Leaf(0: 425)), 0: 106, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 426), 0: 213, 2: BinaryTree::Leaf(0: 427))), 0: 53, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 428), 0: 214, 2: BinaryTree::Leaf(0: 429)), 0: 107, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 430), 0: 215, 2: BinaryTree::Leaf(0: 431))))), 0: 13, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 432), 0: 216, 2: BinaryTree::Leaf(0: 433)), 0: 108, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 434), 0: 217, 2: BinaryTree::Leaf(0: 435))), 0: 54, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 436), 0: 218, 2: BinaryTree::Leaf(0: 437)), 0: 109, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 438), 0: 219, 2: BinaryTree::Leaf(0: 439)))), 0: 27, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 440), 0: 220, 2: BinaryTree::Leaf(0: 441)), 0: 110, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 442), 0: 221, 2: BinaryTree::Leaf(0: 443))), 0: 55, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 444), 0: 222, 2: BinaryTree::Leaf(0: 445)), 0: 111, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 446), 0: 223, 2: BinaryTree::Leaf(0: 447))))))), 0: 3, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 448), 0: 224, 2: BinaryTree::Leaf(0: 449)), 0: 112, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 450), 0: 225, 2: BinaryTree::Leaf(0: 451))), 0: 56, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 452), 0: 226, 2: BinaryTree::Leaf(0: 453)), 0: 113, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 454), 0: 227, 2: BinaryTree::Leaf(0: 455)))), 0: 28, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 456), 0: 228, 2: BinaryTree::Leaf(0: 457)), 0: 114, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 458), 0: 229, 2: BinaryTree::Leaf(0: 459))), 0: 57, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 460), 0: 230, 2: BinaryTree::Leaf(0: 461)), 0: 115, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 462), 0: 231, 2: BinaryTree::Leaf(0: 463))))), 0: 14, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 464), 0: 232, 2: BinaryTree::Leaf(0: 465)), 0: 116, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 466), 0: 233, 2: BinaryTree::Leaf(0: 467))), 0: 58, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 468), 0: 234, 2: BinaryTree::Leaf(0: 469)), 0: 117, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 470), 0: 235, 2: BinaryTree::Leaf(0: 471)))), 0: 29, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 472), 0: 236, 2: BinaryTree::Leaf(0: 473)), 0: 118, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 474), 0: 237, 2: BinaryTree::Leaf(0: 475))), 0: 59, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 476), 0: 238, 2: BinaryTree::Leaf(0: 477)), 0: 119, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 478), 0: 239, 2: BinaryTree::Leaf(0: 479)))))), 0: 7, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 480), 0: 240, 2: BinaryTree::Leaf(0: 481)), 0: 120, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 482), 0: 241, 2: BinaryTree::Leaf(0: 483))), 0: 60, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 484), 0: 242, 2: BinaryTree::Leaf(0: 485)), 0: 121, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 486), 0: 243, 2: BinaryTree::Leaf(0: 487)))), 0: 30, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 488), 0: 244, 2: BinaryTree::Leaf(0: 489)), 0: 122, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 490), 0: 245, 2: BinaryTree::Leaf(0: 491))), 0: 61, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 492), 0: 246, 2: BinaryTree::Leaf(0: 493)), 0: 123, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 494), 0: 247, 2: BinaryTree::Leaf(0: 495))))), 0: 15, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 496), 0: 248, 2: BinaryTree::Leaf(0: 497)), 0: 124, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 498), 0: 249, 2: BinaryTree::Leaf(0: 499))), 0: 62, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 500), 0: 250, 2: BinaryTree::Leaf(0: 501)), 0: 125, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 502), 0: 251, 2: BinaryTree::Leaf(0: 503)))), 0: 31, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 504), 0: 252, 2: BinaryTree::Leaf(0: 505)), 0: 126, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 506), 0: 253, 2: BinaryTree::Leaf(0: 507))), 0: 63, 2: BinaryTree::Node(1: BinaryTree::Node(1: BinaryTree::Leaf(0: 508), 0: 254, 2: BinaryTree::Leaf(0: 509)), 0: 127, 2: BinaryTree::Node(1: BinaryTree::Leaf(0: 510), 0: 255, 2: BinaryTree::Leaf(0: 511)))))))),
  },
]

  at function tree_depth:49:41
  at root 82:12

stack backtrace:
   0: __rustc::rust_begin_unwind
   1: core::panicking::panic_fmt
   2: tlang_memory::state::InterpreterState::panic
   3: tlang_interpreter::Interpreter::panic
   4: tlang_interpreter::Interpreter::eval_expr
   5: tlang_interpreter::Interpreter::eval_call
   6: tlang_interpreter::Interpreter::eval_stmts
   7: tlang_interpreter::Interpreter::eval_expr
   8: tlang_interpreter::Interpreter::eval_fn_call
   9: tlang_interpreter::Interpreter::eval_call_object
  10: tlang_interpreter::Interpreter::eval_call
  11: tlang_interpreter::Interpreter::eval_call
  12: tlang_interpreter::Interpreter::eval_stmts
  13: tlangdi::main
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
