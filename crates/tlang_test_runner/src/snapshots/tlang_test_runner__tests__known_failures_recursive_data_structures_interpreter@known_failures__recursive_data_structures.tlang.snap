---
source: crates/tlang_test_runner/src/main.rs
description: Known failure - output may not match expected
expression: output
input_file: tests/known_failures/recursive_data_structures.tlang
---
=== Recursive Data Structures Test ===
5050

[2025-08-27T09:43:52Z WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'left' on line 49:41. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[2025-08-27T09:43:52Z WARN  tlang_hir_opt::symbol_resolution::identifier_resolver] No symbols found for path 'right' on line 50:42. Available symbols: [
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(45),
            name: "left_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(49, 17), LineColumn(49, 27)),
            scope_start: LineColumn(49, 47),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(122),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(114),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(46),
            name: "right_depth",
            symbol_type: Variable,
            defined_at: Span(LineColumn(50, 17), LineColumn(50, 28)),
            scope_start: LineColumn(50, 49),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(127),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(120),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(41),
            name: "tree_depth",
            symbol_type: FunctionSelfRef(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(44, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(42),
            name: "tree",
            symbol_type: Parameter,
            defined_at: Span(LineColumn(44, 15), LineColumn(44, 19)),
            scope_start: LineColumn(44, 19),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(108),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(99),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(21),
            name: "LinkedList",
            symbol_type: Enum,
            defined_at: Span(LineColumn(3, 1), LineColumn(6, 2)),
            scope_start: LineColumn(6, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(9),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(4),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(22),
            name: "LinkedList::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(4, 5), LineColumn(4, 10)),
            scope_start: LineColumn(4, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(3),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(5),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(23),
            name: "LinkedList::Node",
            symbol_type: EnumVariant(
                2,
            ),
            defined_at: Span(LineColumn(5, 5), LineColumn(5, 26)),
            scope_start: LineColumn(5, 26),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(8),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(6),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(24),
            name: "BinaryTree",
            symbol_type: Enum,
            defined_at: Span(LineColumn(8, 1), LineColumn(12, 2)),
            scope_start: LineColumn(12, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(21),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(9),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(25),
            name: "BinaryTree::Empty",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(9, 5), LineColumn(9, 10)),
            scope_start: LineColumn(9, 10),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(10),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(10),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(26),
            name: "BinaryTree::Leaf",
            symbol_type: EnumVariant(
                1,
            ),
            defined_at: Span(LineColumn(10, 5), LineColumn(10, 14)),
            scope_start: LineColumn(10, 14),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(13),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(11),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(27),
            name: "BinaryTree::Node",
            symbol_type: EnumVariant(
                3,
            ),
            defined_at: Span(LineColumn(11, 5), LineColumn(11, 38)),
            scope_start: LineColumn(11, 38),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(20),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(13),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(28),
            name: "create_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(15, 4), LineColumn(15, 15)),
            scope_start: LineColumn(21, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(43),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(17),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(31),
            name: "create_balanced_tree",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(24, 4), LineColumn(24, 24)),
            scope_start: LineColumn(34, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(83),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(39),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(35),
            name: "sum_list",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(37, 4), LineColumn(37, 12)),
            scope_start: LineColumn(42, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(104),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(79),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(40),
            name: "tree_depth",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(44, 4), LineColumn(44, 14)),
            scope_start: LineColumn(58, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(152),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(97),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(47),
            name: "create_unbalanced_tree",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(61, 4), LineColumn(61, 26)),
            scope_start: LineColumn(71, 2),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(181),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(136),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(50),
            name: "deep_list",
            symbol_type: Variable,
            defined_at: Span(LineColumn(76, 5), LineColumn(76, 14)),
            scope_start: LineColumn(76, 34),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(187),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(173),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(51),
            name: "balanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(77, 5), LineColumn(77, 18)),
            scope_start: LineColumn(77, 48),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(192),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(180),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(52),
            name: "unbalanced_tree",
            symbol_type: Variable,
            defined_at: Span(LineColumn(78, 5), LineColumn(78, 20)),
            scope_start: LineColumn(78, 50),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(198),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(186),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(53),
            name: "complex_structure",
            symbol_type: Variable,
            defined_at: Span(LineColumn(86, 5), LineColumn(86, 22)),
            scope_start: LineColumn(90, 3),
            node_id: Some(
                tlang_span::node_id::NodeIdTag(224),
            ),
            hir_id: Some(
                tlang_span::hir_id::HirIdTag(235),
            ),
            temp: false,
            builtin: false,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(1),
            name: "globals",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(2),
            name: "result",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(3),
            name: "option",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(4),
            name: "math",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(5),
            name: "collections",
            symbol_type: Module,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(6),
            name: "panic",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(7),
            name: "log",
            symbol_type: Function(
                65535,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: true,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(8),
            name: "Result::Ok",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(9),
            name: "Result::Err",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(10),
            name: "Option::Some",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(11),
            name: "math::sqrt",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(12),
            name: "math::floor",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(13),
            name: "math::random",
            symbol_type: Function(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(14),
            name: "math::max",
            symbol_type: Function(
                2,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(15),
            name: "math::random_int",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(16),
            name: "len",
            symbol_type: Function(
                1,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(17),
            name: "Option",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(18),
            name: "Option::None",
            symbol_type: EnumVariant(
                0,
            ),
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(19),
            name: "Result",
            symbol_type: Enum,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
        SymbolInfo {
            id: tlang_symbols::SymbolIdTag(20),
            name: "math::pi",
            symbol_type: Variable,
            defined_at: Span(LineColumn(0, 0), LineColumn(0, 0)),
            scope_start: LineColumn(0, 0),
            node_id: None,
            hir_id: None,
            temp: false,
            builtin: true,
            used: false,
            declared: true,
        },
    ]
[2025-08-27T09:43:52Z WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'left' on line 49:41, as it has not been resolved
[2025-08-27T09:43:52Z WARN  tlang_hir_opt::slot_allocation::slot_allocator] Unable to assign slot for path 'right' on line 50:42, as it has not been resolved

thread 'main' panicked at crates/tlang_runtime/tlang_memory/src/state.rs:328:9:
Could not resolve path "left" (Res { hir_id: None, binding_kind: Unknown, slot: None })
Current scope: [
  {
    LinkedList::Empty,
    BinaryTree::Empty,
    fn create_list#17(n),
    fn create_balanced_tree#39(depth, value),
    fn sum_list#79(list),
    fn tree_depth#97(tree),
    fn create_unbalanced_tree#136(depth),
    LinkedList::Node(0: 100, 1: LinkedList::Node(0: 99, 1: LinkedList::Node(0: 98, 1: LinkedList::Node(0: 97, 1: LinkedList::Node(0: 96, 1: LinkedList::Node(0: 95, 1: LinkedList::Node(0: 94, 1: LinkedList::Node(0: 93, 1: LinkedList::Node(0: 92, 1: LinkedList::Node(0: 91, 1: LinkedList::Node(0: 90, 1: LinkedList::Node(0: 89, 1: LinkedList::Node(0: 88, 1: LinkedList::Node(0: 87, 1: LinkedList::Node(0: 86, 1: LinkedList::Node(0: 85, 1: LinkedList::Node(0: 84, 1: LinkedList::Node(0: 83, 1: LinkedList::Node(0: 82, 1: LinkedList::Node(0: 81, 1: LinkedList::Node(0: 80, 1: LinkedList::Node(0: 79, 1: LinkedList::Node(0: 78, 1: LinkedList::Node(0: 77, 1: LinkedList::Node(0: 76, 1: LinkedList::Node(0: 75, 1: LinkedList::Node(0: 74, 1: LinkedList::Node(0: 73, 1: LinkedList::Node(0: 72, 1: LinkedList::Node(0: 71, 1: LinkedList::Node(0: 70, 1: LinkedList::Node(0: 69, 1: LinkedList::Node(0: 68, 1: LinkedList::Node(0: 67, 1: LinkedList::Node(0: 66, 1: LinkedList::Node(0: 65, 1: LinkedList::Node(0: 64, 1: LinkedList::Node(0: 63, 1: LinkedList::Node(0: 62, 1: LinkedList::Node(0: 61, 1: LinkedList::Node(0: 60, 1: LinkedList::Node(0: 59, 1: LinkedList::Node(0: 58, 1: LinkedList::Node(0: 57, 1: LinkedList::Node(0: 56, 1: LinkedList::Node(0: 55, 1: LinkedList::Node(0: 54, 1: LinkedList::Node(0: 53, 1: LinkedList::Node(0: 52, 1: LinkedList::Node(0: 51, 1: LinkedList::Node(0: 50, 1: LinkedList::Node(0: 49, 1: LinkedList::Node(0: 48, 1: LinkedList::Node(0: 47, 1: LinkedList::Node(0: 46, 1: LinkedList::Node(0: 45, 1: LinkedList::Node(0: 44, 1: LinkedList::Node(0: 43, 1: LinkedList::Node(0: 42, 1: LinkedList::Node(0: 41, 1: LinkedList::Node(0: 40, 1: LinkedList::Node(0: 39, 1: LinkedList::Node(0: 38, 1: LinkedList::Node(0: 37, 1: LinkedList::Node(0: 36, 1: LinkedList::Node(0: 35, 1: LinkedList::Node(0: 34, 1: LinkedList::Node(0: 33, 1: LinkedList::Node(0: 32, 1: LinkedList::Node(0: 31, 1: LinkedList::Node(0: 30, 1: LinkedList::Node(0: 29, 1: LinkedList::Node(0: 28, 1: LinkedList::Node(0: 27, 1: LinkedList::Node(0: 26, 1: LinkedList::Node(0: 25, 1: LinkedList::Node(0: 24, 1: LinkedList::Node(0: 23, 1: LinkedList::Node(0: 22, 1: LinkedList::Node(0: 21, 1: LinkedList::Node(0: 20, 1: LinkedList::Node(0: 19, 1: LinkedList::Node(0: 18, 1: LinkedList::Node(0: 17, 1: LinkedList::Node(0: 16, 1: LinkedList::Node(0: 15, 1: LinkedList::Node(0: 14, 1: LinkedList::Node(0: 13, 1: LinkedList::Node(0: 12, 1: LinkedList::Node(0: 11, 1: LinkedList::Node(0: 10, 1: LinkedList::Node(0: 9, 1: LinkedList::Node(0: 8, 1: LinkedList::Node(0: 7, 1: LinkedList::Node(0: 6, 1: LinkedList::Node(0: 5, 1: LinkedList::Node(0: 4, 1: LinkedList::Node(0: 3, 1: LinkedList::Node(0: 2, 1: LinkedList::Node(0: 1, 1: LinkedList::Empty)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
    BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 511), 0: 255, 1: BinaryTree::Leaf(0: 510)), 0: 127, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 509), 0: 254, 1: BinaryTree::Leaf(0: 508))), 0: 63, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 507), 0: 253, 1: BinaryTree::Leaf(0: 506)), 0: 126, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 505), 0: 252, 1: BinaryTree::Leaf(0: 504)))), 0: 31, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 503), 0: 251, 1: BinaryTree::Leaf(0: 502)), 0: 125, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 501), 0: 250, 1: BinaryTree::Leaf(0: 500))), 0: 62, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 499), 0: 249, 1: BinaryTree::Leaf(0: 498)), 0: 124, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 497), 0: 248, 1: BinaryTree::Leaf(0: 496))))), 0: 15, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 495), 0: 247, 1: BinaryTree::Leaf(0: 494)), 0: 123, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 493), 0: 246, 1: BinaryTree::Leaf(0: 492))), 0: 61, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 491), 0: 245, 1: BinaryTree::Leaf(0: 490)), 0: 122, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 489), 0: 244, 1: BinaryTree::Leaf(0: 488)))), 0: 30, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 487), 0: 243, 1: BinaryTree::Leaf(0: 486)), 0: 121, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 485), 0: 242, 1: BinaryTree::Leaf(0: 484))), 0: 60, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 483), 0: 241, 1: BinaryTree::Leaf(0: 482)), 0: 120, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 481), 0: 240, 1: BinaryTree::Leaf(0: 480)))))), 0: 7, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 479), 0: 239, 1: BinaryTree::Leaf(0: 478)), 0: 119, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 477), 0: 238, 1: BinaryTree::Leaf(0: 476))), 0: 59, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 475), 0: 237, 1: BinaryTree::Leaf(0: 474)), 0: 118, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 473), 0: 236, 1: BinaryTree::Leaf(0: 472)))), 0: 29, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 471), 0: 235, 1: BinaryTree::Leaf(0: 470)), 0: 117, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 469), 0: 234, 1: BinaryTree::Leaf(0: 468))), 0: 58, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 467), 0: 233, 1: BinaryTree::Leaf(0: 466)), 0: 116, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 465), 0: 232, 1: BinaryTree::Leaf(0: 464))))), 0: 14, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 463), 0: 231, 1: BinaryTree::Leaf(0: 462)), 0: 115, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 461), 0: 230, 1: BinaryTree::Leaf(0: 460))), 0: 57, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 459), 0: 229, 1: BinaryTree::Leaf(0: 458)), 0: 114, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 457), 0: 228, 1: BinaryTree::Leaf(0: 456)))), 0: 28, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 455), 0: 227, 1: BinaryTree::Leaf(0: 454)), 0: 113, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 453), 0: 226, 1: BinaryTree::Leaf(0: 452))), 0: 56, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 451), 0: 225, 1: BinaryTree::Leaf(0: 450)), 0: 112, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 449), 0: 224, 1: BinaryTree::Leaf(0: 448))))))), 0: 3, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 447), 0: 223, 1: BinaryTree::Leaf(0: 446)), 0: 111, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 445), 0: 222, 1: BinaryTree::Leaf(0: 444))), 0: 55, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 443), 0: 221, 1: BinaryTree::Leaf(0: 442)), 0: 110, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 441), 0: 220, 1: BinaryTree::Leaf(0: 440)))), 0: 27, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 439), 0: 219, 1: BinaryTree::Leaf(0: 438)), 0: 109, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 437), 0: 218, 1: BinaryTree::Leaf(0: 436))), 0: 54, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 435), 0: 217, 1: BinaryTree::Leaf(0: 434)), 0: 108, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 433), 0: 216, 1: BinaryTree::Leaf(0: 432))))), 0: 13, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 431), 0: 215, 1: BinaryTree::Leaf(0: 430)), 0: 107, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 429), 0: 214, 1: BinaryTree::Leaf(0: 428))), 0: 53, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 427), 0: 213, 1: BinaryTree::Leaf(0: 426)), 0: 106, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 425), 0: 212, 1: BinaryTree::Leaf(0: 424)))), 0: 26, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 423), 0: 211, 1: BinaryTree::Leaf(0: 422)), 0: 105, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 421), 0: 210, 1: BinaryTree::Leaf(0: 420))), 0: 52, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 419), 0: 209, 1: BinaryTree::Leaf(0: 418)), 0: 104, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 417), 0: 208, 1: BinaryTree::Leaf(0: 416)))))), 0: 6, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 415), 0: 207, 1: BinaryTree::Leaf(0: 414)), 0: 103, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 413), 0: 206, 1: BinaryTree::Leaf(0: 412))), 0: 51, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 411), 0: 205, 1: BinaryTree::Leaf(0: 410)), 0: 102, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 409), 0: 204, 1: BinaryTree::Leaf(0: 408)))), 0: 25, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 407), 0: 203, 1: BinaryTree::Leaf(0: 406)), 0: 101, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 405), 0: 202, 1: BinaryTree::Leaf(0: 404))), 0: 50, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 403), 0: 201, 1: BinaryTree::Leaf(0: 402)), 0: 100, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 401), 0: 200, 1: BinaryTree::Leaf(0: 400))))), 0: 12, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 399), 0: 199, 1: BinaryTree::Leaf(0: 398)), 0: 99, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 397), 0: 198, 1: BinaryTree::Leaf(0: 396))), 0: 49, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 395), 0: 197, 1: BinaryTree::Leaf(0: 394)), 0: 98, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 393), 0: 196, 1: BinaryTree::Leaf(0: 392)))), 0: 24, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 391), 0: 195, 1: BinaryTree::Leaf(0: 390)), 0: 97, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 389), 0: 194, 1: BinaryTree::Leaf(0: 388))), 0: 48, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 387), 0: 193, 1: BinaryTree::Leaf(0: 386)), 0: 96, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 385), 0: 192, 1: BinaryTree::Leaf(0: 384)))))))), 0: 1, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 383), 0: 191, 1: BinaryTree::Leaf(0: 382)), 0: 95, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 381), 0: 190, 1: BinaryTree::Leaf(0: 380))), 0: 47, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 379), 0: 189, 1: BinaryTree::Leaf(0: 378)), 0: 94, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 377), 0: 188, 1: BinaryTree::Leaf(0: 376)))), 0: 23, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 375), 0: 187, 1: BinaryTree::Leaf(0: 374)), 0: 93, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 373), 0: 186, 1: BinaryTree::Leaf(0: 372))), 0: 46, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 371), 0: 185, 1: BinaryTree::Leaf(0: 370)), 0: 92, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 369), 0: 184, 1: BinaryTree::Leaf(0: 368))))), 0: 11, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 367), 0: 183, 1: BinaryTree::Leaf(0: 366)), 0: 91, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 365), 0: 182, 1: BinaryTree::Leaf(0: 364))), 0: 45, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 363), 0: 181, 1: BinaryTree::Leaf(0: 362)), 0: 90, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 361), 0: 180, 1: BinaryTree::Leaf(0: 360)))), 0: 22, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 359), 0: 179, 1: BinaryTree::Leaf(0: 358)), 0: 89, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 357), 0: 178, 1: BinaryTree::Leaf(0: 356))), 0: 44, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 355), 0: 177, 1: BinaryTree::Leaf(0: 354)), 0: 88, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 353), 0: 176, 1: BinaryTree::Leaf(0: 352)))))), 0: 5, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 351), 0: 175, 1: BinaryTree::Leaf(0: 350)), 0: 87, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 349), 0: 174, 1: BinaryTree::Leaf(0: 348))), 0: 43, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 347), 0: 173, 1: BinaryTree::Leaf(0: 346)), 0: 86, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 345), 0: 172, 1: BinaryTree::Leaf(0: 344)))), 0: 21, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 343), 0: 171, 1: BinaryTree::Leaf(0: 342)), 0: 85, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 341), 0: 170, 1: BinaryTree::Leaf(0: 340))), 0: 42, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 339), 0: 169, 1: BinaryTree::Leaf(0: 338)), 0: 84, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 337), 0: 168, 1: BinaryTree::Leaf(0: 336))))), 0: 10, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 335), 0: 167, 1: BinaryTree::Leaf(0: 334)), 0: 83, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 333), 0: 166, 1: BinaryTree::Leaf(0: 332))), 0: 41, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 331), 0: 165, 1: BinaryTree::Leaf(0: 330)), 0: 82, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 329), 0: 164, 1: BinaryTree::Leaf(0: 328)))), 0: 20, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 327), 0: 163, 1: BinaryTree::Leaf(0: 326)), 0: 81, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 325), 0: 162, 1: BinaryTree::Leaf(0: 324))), 0: 40, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 323), 0: 161, 1: BinaryTree::Leaf(0: 322)), 0: 80, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 321), 0: 160, 1: BinaryTree::Leaf(0: 320))))))), 0: 2, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 319), 0: 159, 1: BinaryTree::Leaf(0: 318)), 0: 79, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 317), 0: 158, 1: BinaryTree::Leaf(0: 316))), 0: 39, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 315), 0: 157, 1: BinaryTree::Leaf(0: 314)), 0: 78, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 313), 0: 156, 1: BinaryTree::Leaf(0: 312)))), 0: 19, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 311), 0: 155, 1: BinaryTree::Leaf(0: 310)), 0: 77, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 309), 0: 154, 1: BinaryTree::Leaf(0: 308))), 0: 38, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 307), 0: 153, 1: BinaryTree::Leaf(0: 306)), 0: 76, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 305), 0: 152, 1: BinaryTree::Leaf(0: 304))))), 0: 9, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 303), 0: 151, 1: BinaryTree::Leaf(0: 302)), 0: 75, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 301), 0: 150, 1: BinaryTree::Leaf(0: 300))), 0: 37, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 299), 0: 149, 1: BinaryTree::Leaf(0: 298)), 0: 74, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 297), 0: 148, 1: BinaryTree::Leaf(0: 296)))), 0: 18, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 295), 0: 147, 1: BinaryTree::Leaf(0: 294)), 0: 73, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 293), 0: 146, 1: BinaryTree::Leaf(0: 292))), 0: 36, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 291), 0: 145, 1: BinaryTree::Leaf(0: 290)), 0: 72, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 289), 0: 144, 1: BinaryTree::Leaf(0: 288)))))), 0: 4, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 287), 0: 143, 1: BinaryTree::Leaf(0: 286)), 0: 71, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 285), 0: 142, 1: BinaryTree::Leaf(0: 284))), 0: 35, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 283), 0: 141, 1: BinaryTree::Leaf(0: 282)), 0: 70, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 281), 0: 140, 1: BinaryTree::Leaf(0: 280)))), 0: 17, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 279), 0: 139, 1: BinaryTree::Leaf(0: 278)), 0: 69, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 277), 0: 138, 1: BinaryTree::Leaf(0: 276))), 0: 34, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 275), 0: 137, 1: BinaryTree::Leaf(0: 274)), 0: 68, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 273), 0: 136, 1: BinaryTree::Leaf(0: 272))))), 0: 8, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 271), 0: 135, 1: BinaryTree::Leaf(0: 270)), 0: 67, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 269), 0: 134, 1: BinaryTree::Leaf(0: 268))), 0: 33, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 267), 0: 133, 1: BinaryTree::Leaf(0: 266)), 0: 66, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 265), 0: 132, 1: BinaryTree::Leaf(0: 264)))), 0: 16, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 263), 0: 131, 1: BinaryTree::Leaf(0: 262)), 0: 65, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 261), 0: 130, 1: BinaryTree::Leaf(0: 260))), 0: 32, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 259), 0: 129, 1: BinaryTree::Leaf(0: 258)), 0: 64, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 257), 0: 128, 1: BinaryTree::Leaf(0: 256))))))))),
    BinaryTree::Node(2: BinaryTree::Leaf(0: 500), 0: 50, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 490), 0: 49, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 480), 0: 48, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 470), 0: 47, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 460), 0: 46, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 450), 0: 45, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 440), 0: 44, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 430), 0: 43, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 420), 0: 42, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 410), 0: 41, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 400), 0: 40, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 390), 0: 39, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 380), 0: 38, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 370), 0: 37, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 360), 0: 36, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 350), 0: 35, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 340), 0: 34, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 330), 0: 33, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 320), 0: 32, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 310), 0: 31, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 300), 0: 30, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 290), 0: 29, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 280), 0: 28, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 270), 0: 27, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 260), 0: 26, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 250), 0: 25, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 240), 0: 24, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 230), 0: 23, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 220), 0: 22, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 210), 0: 21, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 200), 0: 20, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 190), 0: 19, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 180), 0: 18, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 170), 0: 17, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 160), 0: 16, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 150), 0: 15, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 140), 0: 14, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 130), 0: 13, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 120), 0: 12, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 110), 0: 11, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 100), 0: 10, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 90), 0: 9, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 80), 0: 8, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 70), 0: 7, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 60), 0: 6, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 50), 0: 5, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 40), 0: 4, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 30), 0: 3, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 20), 0: 2, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 10), 0: 1, 1: BinaryTree::Empty)))))))))))))))))))))))))))))))))))))))))))))))))),
  },
  {
    fn tree_depth#97(tree),
    BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 511), 0: 255, 1: BinaryTree::Leaf(0: 510)), 0: 127, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 509), 0: 254, 1: BinaryTree::Leaf(0: 508))), 0: 63, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 507), 0: 253, 1: BinaryTree::Leaf(0: 506)), 0: 126, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 505), 0: 252, 1: BinaryTree::Leaf(0: 504)))), 0: 31, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 503), 0: 251, 1: BinaryTree::Leaf(0: 502)), 0: 125, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 501), 0: 250, 1: BinaryTree::Leaf(0: 500))), 0: 62, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 499), 0: 249, 1: BinaryTree::Leaf(0: 498)), 0: 124, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 497), 0: 248, 1: BinaryTree::Leaf(0: 496))))), 0: 15, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 495), 0: 247, 1: BinaryTree::Leaf(0: 494)), 0: 123, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 493), 0: 246, 1: BinaryTree::Leaf(0: 492))), 0: 61, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 491), 0: 245, 1: BinaryTree::Leaf(0: 490)), 0: 122, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 489), 0: 244, 1: BinaryTree::Leaf(0: 488)))), 0: 30, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 487), 0: 243, 1: BinaryTree::Leaf(0: 486)), 0: 121, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 485), 0: 242, 1: BinaryTree::Leaf(0: 484))), 0: 60, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 483), 0: 241, 1: BinaryTree::Leaf(0: 482)), 0: 120, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 481), 0: 240, 1: BinaryTree::Leaf(0: 480)))))), 0: 7, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 479), 0: 239, 1: BinaryTree::Leaf(0: 478)), 0: 119, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 477), 0: 238, 1: BinaryTree::Leaf(0: 476))), 0: 59, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 475), 0: 237, 1: BinaryTree::Leaf(0: 474)), 0: 118, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 473), 0: 236, 1: BinaryTree::Leaf(0: 472)))), 0: 29, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 471), 0: 235, 1: BinaryTree::Leaf(0: 470)), 0: 117, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 469), 0: 234, 1: BinaryTree::Leaf(0: 468))), 0: 58, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 467), 0: 233, 1: BinaryTree::Leaf(0: 466)), 0: 116, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 465), 0: 232, 1: BinaryTree::Leaf(0: 464))))), 0: 14, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 463), 0: 231, 1: BinaryTree::Leaf(0: 462)), 0: 115, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 461), 0: 230, 1: BinaryTree::Leaf(0: 460))), 0: 57, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 459), 0: 229, 1: BinaryTree::Leaf(0: 458)), 0: 114, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 457), 0: 228, 1: BinaryTree::Leaf(0: 456)))), 0: 28, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 455), 0: 227, 1: BinaryTree::Leaf(0: 454)), 0: 113, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 453), 0: 226, 1: BinaryTree::Leaf(0: 452))), 0: 56, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 451), 0: 225, 1: BinaryTree::Leaf(0: 450)), 0: 112, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 449), 0: 224, 1: BinaryTree::Leaf(0: 448))))))), 0: 3, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 447), 0: 223, 1: BinaryTree::Leaf(0: 446)), 0: 111, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 445), 0: 222, 1: BinaryTree::Leaf(0: 444))), 0: 55, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 443), 0: 221, 1: BinaryTree::Leaf(0: 442)), 0: 110, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 441), 0: 220, 1: BinaryTree::Leaf(0: 440)))), 0: 27, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 439), 0: 219, 1: BinaryTree::Leaf(0: 438)), 0: 109, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 437), 0: 218, 1: BinaryTree::Leaf(0: 436))), 0: 54, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 435), 0: 217, 1: BinaryTree::Leaf(0: 434)), 0: 108, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 433), 0: 216, 1: BinaryTree::Leaf(0: 432))))), 0: 13, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 431), 0: 215, 1: BinaryTree::Leaf(0: 430)), 0: 107, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 429), 0: 214, 1: BinaryTree::Leaf(0: 428))), 0: 53, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 427), 0: 213, 1: BinaryTree::Leaf(0: 426)), 0: 106, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 425), 0: 212, 1: BinaryTree::Leaf(0: 424)))), 0: 26, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 423), 0: 211, 1: BinaryTree::Leaf(0: 422)), 0: 105, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 421), 0: 210, 1: BinaryTree::Leaf(0: 420))), 0: 52, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 419), 0: 209, 1: BinaryTree::Leaf(0: 418)), 0: 104, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 417), 0: 208, 1: BinaryTree::Leaf(0: 416)))))), 0: 6, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 415), 0: 207, 1: BinaryTree::Leaf(0: 414)), 0: 103, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 413), 0: 206, 1: BinaryTree::Leaf(0: 412))), 0: 51, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 411), 0: 205, 1: BinaryTree::Leaf(0: 410)), 0: 102, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 409), 0: 204, 1: BinaryTree::Leaf(0: 408)))), 0: 25, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 407), 0: 203, 1: BinaryTree::Leaf(0: 406)), 0: 101, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 405), 0: 202, 1: BinaryTree::Leaf(0: 404))), 0: 50, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 403), 0: 201, 1: BinaryTree::Leaf(0: 402)), 0: 100, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 401), 0: 200, 1: BinaryTree::Leaf(0: 400))))), 0: 12, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 399), 0: 199, 1: BinaryTree::Leaf(0: 398)), 0: 99, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 397), 0: 198, 1: BinaryTree::Leaf(0: 396))), 0: 49, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 395), 0: 197, 1: BinaryTree::Leaf(0: 394)), 0: 98, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 393), 0: 196, 1: BinaryTree::Leaf(0: 392)))), 0: 24, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 391), 0: 195, 1: BinaryTree::Leaf(0: 390)), 0: 97, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 389), 0: 194, 1: BinaryTree::Leaf(0: 388))), 0: 48, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 387), 0: 193, 1: BinaryTree::Leaf(0: 386)), 0: 96, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 385), 0: 192, 1: BinaryTree::Leaf(0: 384)))))))), 0: 1, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 383), 0: 191, 1: BinaryTree::Leaf(0: 382)), 0: 95, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 381), 0: 190, 1: BinaryTree::Leaf(0: 380))), 0: 47, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 379), 0: 189, 1: BinaryTree::Leaf(0: 378)), 0: 94, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 377), 0: 188, 1: BinaryTree::Leaf(0: 376)))), 0: 23, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 375), 0: 187, 1: BinaryTree::Leaf(0: 374)), 0: 93, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 373), 0: 186, 1: BinaryTree::Leaf(0: 372))), 0: 46, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 371), 0: 185, 1: BinaryTree::Leaf(0: 370)), 0: 92, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 369), 0: 184, 1: BinaryTree::Leaf(0: 368))))), 0: 11, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 367), 0: 183, 1: BinaryTree::Leaf(0: 366)), 0: 91, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 365), 0: 182, 1: BinaryTree::Leaf(0: 364))), 0: 45, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 363), 0: 181, 1: BinaryTree::Leaf(0: 362)), 0: 90, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 361), 0: 180, 1: BinaryTree::Leaf(0: 360)))), 0: 22, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 359), 0: 179, 1: BinaryTree::Leaf(0: 358)), 0: 89, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 357), 0: 178, 1: BinaryTree::Leaf(0: 356))), 0: 44, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 355), 0: 177, 1: BinaryTree::Leaf(0: 354)), 0: 88, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 353), 0: 176, 1: BinaryTree::Leaf(0: 352)))))), 0: 5, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 351), 0: 175, 1: BinaryTree::Leaf(0: 350)), 0: 87, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 349), 0: 174, 1: BinaryTree::Leaf(0: 348))), 0: 43, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 347), 0: 173, 1: BinaryTree::Leaf(0: 346)), 0: 86, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 345), 0: 172, 1: BinaryTree::Leaf(0: 344)))), 0: 21, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 343), 0: 171, 1: BinaryTree::Leaf(0: 342)), 0: 85, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 341), 0: 170, 1: BinaryTree::Leaf(0: 340))), 0: 42, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 339), 0: 169, 1: BinaryTree::Leaf(0: 338)), 0: 84, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 337), 0: 168, 1: BinaryTree::Leaf(0: 336))))), 0: 10, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 335), 0: 167, 1: BinaryTree::Leaf(0: 334)), 0: 83, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 333), 0: 166, 1: BinaryTree::Leaf(0: 332))), 0: 41, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 331), 0: 165, 1: BinaryTree::Leaf(0: 330)), 0: 82, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 329), 0: 164, 1: BinaryTree::Leaf(0: 328)))), 0: 20, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 327), 0: 163, 1: BinaryTree::Leaf(0: 326)), 0: 81, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 325), 0: 162, 1: BinaryTree::Leaf(0: 324))), 0: 40, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 323), 0: 161, 1: BinaryTree::Leaf(0: 322)), 0: 80, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 321), 0: 160, 1: BinaryTree::Leaf(0: 320))))))), 0: 2, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 319), 0: 159, 1: BinaryTree::Leaf(0: 318)), 0: 79, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 317), 0: 158, 1: BinaryTree::Leaf(0: 316))), 0: 39, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 315), 0: 157, 1: BinaryTree::Leaf(0: 314)), 0: 78, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 313), 0: 156, 1: BinaryTree::Leaf(0: 312)))), 0: 19, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 311), 0: 155, 1: BinaryTree::Leaf(0: 310)), 0: 77, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 309), 0: 154, 1: BinaryTree::Leaf(0: 308))), 0: 38, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 307), 0: 153, 1: BinaryTree::Leaf(0: 306)), 0: 76, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 305), 0: 152, 1: BinaryTree::Leaf(0: 304))))), 0: 9, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 303), 0: 151, 1: BinaryTree::Leaf(0: 302)), 0: 75, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 301), 0: 150, 1: BinaryTree::Leaf(0: 300))), 0: 37, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 299), 0: 149, 1: BinaryTree::Leaf(0: 298)), 0: 74, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 297), 0: 148, 1: BinaryTree::Leaf(0: 296)))), 0: 18, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 295), 0: 147, 1: BinaryTree::Leaf(0: 294)), 0: 73, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 293), 0: 146, 1: BinaryTree::Leaf(0: 292))), 0: 36, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 291), 0: 145, 1: BinaryTree::Leaf(0: 290)), 0: 72, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 289), 0: 144, 1: BinaryTree::Leaf(0: 288)))))), 0: 4, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 287), 0: 143, 1: BinaryTree::Leaf(0: 286)), 0: 71, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 285), 0: 142, 1: BinaryTree::Leaf(0: 284))), 0: 35, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 283), 0: 141, 1: BinaryTree::Leaf(0: 282)), 0: 70, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 281), 0: 140, 1: BinaryTree::Leaf(0: 280)))), 0: 17, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 279), 0: 139, 1: BinaryTree::Leaf(0: 278)), 0: 69, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 277), 0: 138, 1: BinaryTree::Leaf(0: 276))), 0: 34, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 275), 0: 137, 1: BinaryTree::Leaf(0: 274)), 0: 68, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 273), 0: 136, 1: BinaryTree::Leaf(0: 272))))), 0: 8, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 271), 0: 135, 1: BinaryTree::Leaf(0: 270)), 0: 67, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 269), 0: 134, 1: BinaryTree::Leaf(0: 268))), 0: 33, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 267), 0: 133, 1: BinaryTree::Leaf(0: 266)), 0: 66, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 265), 0: 132, 1: BinaryTree::Leaf(0: 264)))), 0: 16, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 263), 0: 131, 1: BinaryTree::Leaf(0: 262)), 0: 65, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 261), 0: 130, 1: BinaryTree::Leaf(0: 260))), 0: 32, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 259), 0: 129, 1: BinaryTree::Leaf(0: 258)), 0: 64, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 257), 0: 128, 1: BinaryTree::Leaf(0: 256))))))))),
  },
  {
    BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 383), 0: 191, 1: BinaryTree::Leaf(0: 382)), 0: 95, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 381), 0: 190, 1: BinaryTree::Leaf(0: 380))), 0: 47, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 379), 0: 189, 1: BinaryTree::Leaf(0: 378)), 0: 94, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 377), 0: 188, 1: BinaryTree::Leaf(0: 376)))), 0: 23, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 375), 0: 187, 1: BinaryTree::Leaf(0: 374)), 0: 93, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 373), 0: 186, 1: BinaryTree::Leaf(0: 372))), 0: 46, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 371), 0: 185, 1: BinaryTree::Leaf(0: 370)), 0: 92, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 369), 0: 184, 1: BinaryTree::Leaf(0: 368))))), 0: 11, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 367), 0: 183, 1: BinaryTree::Leaf(0: 366)), 0: 91, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 365), 0: 182, 1: BinaryTree::Leaf(0: 364))), 0: 45, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 363), 0: 181, 1: BinaryTree::Leaf(0: 362)), 0: 90, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 361), 0: 180, 1: BinaryTree::Leaf(0: 360)))), 0: 22, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 359), 0: 179, 1: BinaryTree::Leaf(0: 358)), 0: 89, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 357), 0: 178, 1: BinaryTree::Leaf(0: 356))), 0: 44, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 355), 0: 177, 1: BinaryTree::Leaf(0: 354)), 0: 88, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 353), 0: 176, 1: BinaryTree::Leaf(0: 352)))))), 0: 5, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 351), 0: 175, 1: BinaryTree::Leaf(0: 350)), 0: 87, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 349), 0: 174, 1: BinaryTree::Leaf(0: 348))), 0: 43, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 347), 0: 173, 1: BinaryTree::Leaf(0: 346)), 0: 86, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 345), 0: 172, 1: BinaryTree::Leaf(0: 344)))), 0: 21, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 343), 0: 171, 1: BinaryTree::Leaf(0: 342)), 0: 85, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 341), 0: 170, 1: BinaryTree::Leaf(0: 340))), 0: 42, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 339), 0: 169, 1: BinaryTree::Leaf(0: 338)), 0: 84, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 337), 0: 168, 1: BinaryTree::Leaf(0: 336))))), 0: 10, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 335), 0: 167, 1: BinaryTree::Leaf(0: 334)), 0: 83, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 333), 0: 166, 1: BinaryTree::Leaf(0: 332))), 0: 41, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 331), 0: 165, 1: BinaryTree::Leaf(0: 330)), 0: 82, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 329), 0: 164, 1: BinaryTree::Leaf(0: 328)))), 0: 20, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 327), 0: 163, 1: BinaryTree::Leaf(0: 326)), 0: 81, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 325), 0: 162, 1: BinaryTree::Leaf(0: 324))), 0: 40, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 323), 0: 161, 1: BinaryTree::Leaf(0: 322)), 0: 80, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 321), 0: 160, 1: BinaryTree::Leaf(0: 320))))))), 0: 2, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 319), 0: 159, 1: BinaryTree::Leaf(0: 318)), 0: 79, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 317), 0: 158, 1: BinaryTree::Leaf(0: 316))), 0: 39, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 315), 0: 157, 1: BinaryTree::Leaf(0: 314)), 0: 78, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 313), 0: 156, 1: BinaryTree::Leaf(0: 312)))), 0: 19, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 311), 0: 155, 1: BinaryTree::Leaf(0: 310)), 0: 77, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 309), 0: 154, 1: BinaryTree::Leaf(0: 308))), 0: 38, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 307), 0: 153, 1: BinaryTree::Leaf(0: 306)), 0: 76, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 305), 0: 152, 1: BinaryTree::Leaf(0: 304))))), 0: 9, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 303), 0: 151, 1: BinaryTree::Leaf(0: 302)), 0: 75, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 301), 0: 150, 1: BinaryTree::Leaf(0: 300))), 0: 37, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 299), 0: 149, 1: BinaryTree::Leaf(0: 298)), 0: 74, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 297), 0: 148, 1: BinaryTree::Leaf(0: 296)))), 0: 18, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 295), 0: 147, 1: BinaryTree::Leaf(0: 294)), 0: 73, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 293), 0: 146, 1: BinaryTree::Leaf(0: 292))), 0: 36, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 291), 0: 145, 1: BinaryTree::Leaf(0: 290)), 0: 72, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 289), 0: 144, 1: BinaryTree::Leaf(0: 288)))))), 0: 4, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 287), 0: 143, 1: BinaryTree::Leaf(0: 286)), 0: 71, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 285), 0: 142, 1: BinaryTree::Leaf(0: 284))), 0: 35, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 283), 0: 141, 1: BinaryTree::Leaf(0: 282)), 0: 70, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 281), 0: 140, 1: BinaryTree::Leaf(0: 280)))), 0: 17, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 279), 0: 139, 1: BinaryTree::Leaf(0: 278)), 0: 69, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 277), 0: 138, 1: BinaryTree::Leaf(0: 276))), 0: 34, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 275), 0: 137, 1: BinaryTree::Leaf(0: 274)), 0: 68, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 273), 0: 136, 1: BinaryTree::Leaf(0: 272))))), 0: 8, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 271), 0: 135, 1: BinaryTree::Leaf(0: 270)), 0: 67, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 269), 0: 134, 1: BinaryTree::Leaf(0: 268))), 0: 33, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 267), 0: 133, 1: BinaryTree::Leaf(0: 266)), 0: 66, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 265), 0: 132, 1: BinaryTree::Leaf(0: 264)))), 0: 16, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 263), 0: 131, 1: BinaryTree::Leaf(0: 262)), 0: 65, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 261), 0: 130, 1: BinaryTree::Leaf(0: 260))), 0: 32, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 259), 0: 129, 1: BinaryTree::Leaf(0: 258)), 0: 64, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 257), 0: 128, 1: BinaryTree::Leaf(0: 256)))))))),
    BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 511), 0: 255, 1: BinaryTree::Leaf(0: 510)), 0: 127, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 509), 0: 254, 1: BinaryTree::Leaf(0: 508))), 0: 63, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 507), 0: 253, 1: BinaryTree::Leaf(0: 506)), 0: 126, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 505), 0: 252, 1: BinaryTree::Leaf(0: 504)))), 0: 31, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 503), 0: 251, 1: BinaryTree::Leaf(0: 502)), 0: 125, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 501), 0: 250, 1: BinaryTree::Leaf(0: 500))), 0: 62, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 499), 0: 249, 1: BinaryTree::Leaf(0: 498)), 0: 124, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 497), 0: 248, 1: BinaryTree::Leaf(0: 496))))), 0: 15, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 495), 0: 247, 1: BinaryTree::Leaf(0: 494)), 0: 123, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 493), 0: 246, 1: BinaryTree::Leaf(0: 492))), 0: 61, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 491), 0: 245, 1: BinaryTree::Leaf(0: 490)), 0: 122, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 489), 0: 244, 1: BinaryTree::Leaf(0: 488)))), 0: 30, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 487), 0: 243, 1: BinaryTree::Leaf(0: 486)), 0: 121, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 485), 0: 242, 1: BinaryTree::Leaf(0: 484))), 0: 60, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 483), 0: 241, 1: BinaryTree::Leaf(0: 482)), 0: 120, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 481), 0: 240, 1: BinaryTree::Leaf(0: 480)))))), 0: 7, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 479), 0: 239, 1: BinaryTree::Leaf(0: 478)), 0: 119, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 477), 0: 238, 1: BinaryTree::Leaf(0: 476))), 0: 59, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 475), 0: 237, 1: BinaryTree::Leaf(0: 474)), 0: 118, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 473), 0: 236, 1: BinaryTree::Leaf(0: 472)))), 0: 29, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 471), 0: 235, 1: BinaryTree::Leaf(0: 470)), 0: 117, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 469), 0: 234, 1: BinaryTree::Leaf(0: 468))), 0: 58, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 467), 0: 233, 1: BinaryTree::Leaf(0: 466)), 0: 116, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 465), 0: 232, 1: BinaryTree::Leaf(0: 464))))), 0: 14, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 463), 0: 231, 1: BinaryTree::Leaf(0: 462)), 0: 115, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 461), 0: 230, 1: BinaryTree::Leaf(0: 460))), 0: 57, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 459), 0: 229, 1: BinaryTree::Leaf(0: 458)), 0: 114, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 457), 0: 228, 1: BinaryTree::Leaf(0: 456)))), 0: 28, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 455), 0: 227, 1: BinaryTree::Leaf(0: 454)), 0: 113, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 453), 0: 226, 1: BinaryTree::Leaf(0: 452))), 0: 56, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 451), 0: 225, 1: BinaryTree::Leaf(0: 450)), 0: 112, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 449), 0: 224, 1: BinaryTree::Leaf(0: 448))))))), 0: 3, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 447), 0: 223, 1: BinaryTree::Leaf(0: 446)), 0: 111, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 445), 0: 222, 1: BinaryTree::Leaf(0: 444))), 0: 55, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 443), 0: 221, 1: BinaryTree::Leaf(0: 442)), 0: 110, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 441), 0: 220, 1: BinaryTree::Leaf(0: 440)))), 0: 27, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 439), 0: 219, 1: BinaryTree::Leaf(0: 438)), 0: 109, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 437), 0: 218, 1: BinaryTree::Leaf(0: 436))), 0: 54, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 435), 0: 217, 1: BinaryTree::Leaf(0: 434)), 0: 108, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 433), 0: 216, 1: BinaryTree::Leaf(0: 432))))), 0: 13, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 431), 0: 215, 1: BinaryTree::Leaf(0: 430)), 0: 107, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 429), 0: 214, 1: BinaryTree::Leaf(0: 428))), 0: 53, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 427), 0: 213, 1: BinaryTree::Leaf(0: 426)), 0: 106, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 425), 0: 212, 1: BinaryTree::Leaf(0: 424)))), 0: 26, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 423), 0: 211, 1: BinaryTree::Leaf(0: 422)), 0: 105, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 421), 0: 210, 1: BinaryTree::Leaf(0: 420))), 0: 52, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 419), 0: 209, 1: BinaryTree::Leaf(0: 418)), 0: 104, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 417), 0: 208, 1: BinaryTree::Leaf(0: 416)))))), 0: 6, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 415), 0: 207, 1: BinaryTree::Leaf(0: 414)), 0: 103, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 413), 0: 206, 1: BinaryTree::Leaf(0: 412))), 0: 51, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 411), 0: 205, 1: BinaryTree::Leaf(0: 410)), 0: 102, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 409), 0: 204, 1: BinaryTree::Leaf(0: 408)))), 0: 25, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 407), 0: 203, 1: BinaryTree::Leaf(0: 406)), 0: 101, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 405), 0: 202, 1: BinaryTree::Leaf(0: 404))), 0: 50, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 403), 0: 201, 1: BinaryTree::Leaf(0: 402)), 0: 100, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 401), 0: 200, 1: BinaryTree::Leaf(0: 400))))), 0: 12, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 399), 0: 199, 1: BinaryTree::Leaf(0: 398)), 0: 99, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 397), 0: 198, 1: BinaryTree::Leaf(0: 396))), 0: 49, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 395), 0: 197, 1: BinaryTree::Leaf(0: 394)), 0: 98, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 393), 0: 196, 1: BinaryTree::Leaf(0: 392)))), 0: 24, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 391), 0: 195, 1: BinaryTree::Leaf(0: 390)), 0: 97, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 389), 0: 194, 1: BinaryTree::Leaf(0: 388))), 0: 48, 1: BinaryTree::Node(2: BinaryTree::Node(2: BinaryTree::Leaf(0: 387), 0: 193, 1: BinaryTree::Leaf(0: 386)), 0: 96, 1: BinaryTree::Node(2: BinaryTree::Leaf(0: 385), 0: 192, 1: BinaryTree::Leaf(0: 384)))))))),
  },
]

  at function tree_depth:49:41
  at root 82:12

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
