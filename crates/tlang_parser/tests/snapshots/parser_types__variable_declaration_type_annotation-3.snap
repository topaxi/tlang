---
source: crates/tlang_parser/tests/parser_types.rs
expression: "parse!(\"let x: std::hash::Map<str, i64> = std::hash::Map();\")"
---
Node(
  ast_node: Program([
    Node(
      ast_node: VariableDeclaration(
        id: SymbolId(1),
        pattern: Node(
          ast_node: Identifier("x"),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 5,
            ),
          ),
        ),
        expression: Node(
          ast_node: Call(
            function: Node(
              ast_node: NestedIdentifier([
                "std",
                "hash",
                "Map",
              ]),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 0,
                ),
                end: LineColumn(
                  line: 0,
                  column: 0,
                ),
              ),
            ),
            arguments: [],
          ),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 34,
            ),
            end: LineColumn(
              line: 0,
              column: 50,
            ),
          ),
        ),
        type_annotation: Some(Node(
          ast_node: TypeAnnotation(
            name: Node(
              ast_node: NestedIdentifier([
                "std",
                "hash",
                "Map",
              ]),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 7,
                ),
                end: LineColumn(
                  line: 0,
                  column: 21,
                ),
              ),
            ),
            parameters: [
              Node(
                ast_node: TypeAnnotation(
                  name: Node(
                    ast_node: Identifier("str"),
                    symbol_table: None,
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 22,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 25,
                      ),
                    ),
                  ),
                  parameters: [],
                ),
                symbol_table: None,
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                ),
              ),
              Node(
                ast_node: TypeAnnotation(
                  name: Node(
                    ast_node: Identifier("i64"),
                    symbol_table: None,
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 27,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 30,
                      ),
                    ),
                  ),
                  parameters: [],
                ),
                symbol_table: None,
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                ),
              ),
            ],
          ),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 0,
            ),
            end: LineColumn(
              line: 0,
              column: 0,
            ),
          ),
        )),
      ),
      symbol_table: None,
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 51,
        ),
      ),
    ),
  ]),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
