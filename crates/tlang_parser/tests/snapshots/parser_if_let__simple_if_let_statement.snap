---
source: crates/tlang_parser/tests/parser_if_let.rs
expression: "parse!(indoc! { \"\n        if let x = 1 {\n            x\n        }\n    \" })"
---
Module(
  statements: [
    Stmt(
      kind: Expr(Expr(
        kind: IfElse(
          condition: Expr(
            kind: Let(Pattern(
              kind: Identifier(
                id: SymbolId(1),
                name: Ident(
                  name: "x",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 7,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 8,
                    ),
                  ),
                ),
              ),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 7,
                ),
                end: LineColumn(
                  line: 0,
                  column: 8,
                ),
              ),
            ), Expr(
              kind: Literal(Integer(1)),
              leading_comments: [],
              trailing_comments: [],
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 11,
                ),
                end: LineColumn(
                  line: 0,
                  column: 12,
                ),
              ),
            )),
            leading_comments: [],
            trailing_comments: [],
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 0,
              ),
            ),
          ),
          then_branch: Expr(
            kind: Block(Block(
              statements: [],
              expression: Some(Expr(
                kind: Path(Path(
                  segments: [
                    Ident(
                      name: "x",
                      span: Span(
                        start: LineColumn(
                          line: 1,
                          column: 5,
                        ),
                        end: LineColumn(
                          line: 1,
                          column: 6,
                        ),
                      ),
                    ),
                  ],
                  span: Span(
                    start: LineColumn(
                      line: 1,
                      column: 5,
                    ),
                    end: LineColumn(
                      line: 1,
                      column: 6,
                    ),
                  ),
                )),
                leading_comments: [],
                trailing_comments: [],
                symbol_table: None,
                span: Span(
                  start: LineColumn(
                    line: 1,
                    column: 5,
                  ),
                  end: LineColumn(
                    line: 1,
                    column: 6,
                  ),
                ),
              )),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 13,
                ),
                end: LineColumn(
                  line: 2,
                  column: 2,
                ),
              ),
              symbol_table: None,
            )),
            leading_comments: [],
            trailing_comments: [],
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 0,
              ),
            ),
          ),
          else_branch: None,
        ),
        leading_comments: [],
        trailing_comments: [],
        symbol_table: None,
        span: Span(
          start: LineColumn(
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            line: 2,
            column: 2,
          ),
        ),
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 2,
          column: 2,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
      symbol_table: None,
    ),
  ],
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
