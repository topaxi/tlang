---
source: crates/tlang_parser/tests/parser.rs
expression: "parse! (\"let x = match 1 { 1 => 2, 3 => 4, _ => 5 };\")"
---
Module(
  id: NodeId(1),
  statements: [
    Stmt(
      id: NodeId(14),
      kind: Let(LetDeclaration(
        pattern: Pat(
          id: NodeId(2),
          kind: Identifier(Ident(
            name: "x",
            span: Span(
              start: LineColumn(
                line: 0,
                column: 4,
              ),
              end: LineColumn(
                line: 0,
                column: 5,
              ),
            ),
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 5,
            ),
          ),
        ),
        expression: Expr(
          id: NodeId(13),
          kind: Match(MatchExpression(
            expression: Expr(
              id: NodeId(3),
              kind: Literal(UnsignedInteger(1)),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 14,
                ),
                end: LineColumn(
                  line: 0,
                  column: 15,
                ),
              ),
            ),
            arms: [
              MatchArm(
                id: NodeId(6),
                pattern: Pat(
                  id: NodeId(4),
                  kind: Literal(UnsignedInteger(1)),
                  leading_comments: [],
                  trailing_comments: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 18,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 19,
                    ),
                  ),
                ),
                guard: None,
                expression: Expr(
                  id: NodeId(5),
                  kind: Literal(UnsignedInteger(2)),
                  leading_comments: [],
                  trailing_comments: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 23,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 24,
                    ),
                  ),
                ),
              ),
              MatchArm(
                id: NodeId(9),
                pattern: Pat(
                  id: NodeId(7),
                  kind: Literal(UnsignedInteger(3)),
                  leading_comments: [],
                  trailing_comments: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 26,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 27,
                    ),
                  ),
                ),
                guard: None,
                expression: Expr(
                  id: NodeId(8),
                  kind: Literal(UnsignedInteger(4)),
                  leading_comments: [],
                  trailing_comments: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 31,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 32,
                    ),
                  ),
                ),
              ),
              MatchArm(
                id: NodeId(12),
                pattern: Pat(
                  id: NodeId(10),
                  kind: Wildcard,
                  leading_comments: [],
                  trailing_comments: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 34,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 35,
                    ),
                  ),
                ),
                guard: None,
                expression: Expr(
                  id: NodeId(11),
                  kind: Literal(UnsignedInteger(5)),
                  leading_comments: [],
                  trailing_comments: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 39,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 40,
                    ),
                  ),
                ),
              ),
            ],
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 0,
              column: 8,
            ),
            end: LineColumn(
              line: 0,
              column: 42,
            ),
          ),
        ),
        type_annotation: None,
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 43,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
