---
source: crates/tlang_parser/tests/parser.rs
expression: "parse!(\"let x = match 1 { 1 => 2, 3 => 4, _ => 5 };\")"
---
Node(
  ast_node: Legacy(Module([
    Stmt(
      kind: Let(
        pattern: Pattern(
          kind: Identifier(
            id: SymbolId(1),
            name: Ident(
              name: "x",
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 4,
                ),
                end: LineColumn(
                  line: 0,
                  column: 5,
                ),
              ),
            ),
          ),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 5,
            ),
          ),
        ),
        expression: Expr(
          kind: Match(
            expression: Expr(
              kind: Literal(Integer(1)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 14,
                ),
                end: LineColumn(
                  line: 0,
                  column: 15,
                ),
              ),
            ),
            arms: [
              MatchArm(
                pattern: Pattern(
                  kind: Literal(Integer(1)),
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 18,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 19,
                    ),
                  ),
                ),
                expression: Expr(
                  kind: Literal(Integer(2)),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 23,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 24,
                    ),
                  ),
                ),
              ),
              MatchArm(
                pattern: Pattern(
                  kind: Literal(Integer(3)),
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 26,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 27,
                    ),
                  ),
                ),
                expression: Expr(
                  kind: Literal(Integer(4)),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 31,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 32,
                    ),
                  ),
                ),
              ),
              MatchArm(
                pattern: Pattern(
                  kind: Wildcard,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 34,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 35,
                    ),
                  ),
                ),
                expression: Expr(
                  kind: Literal(Integer(5)),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 39,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 40,
                    ),
                  ),
                ),
              ),
            ],
          ),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 8,
            ),
            end: LineColumn(
              line: 0,
              column: 42,
            ),
          ),
        ),
        type_annotation: None,
      ),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 43,
        ),
      ),
      symbol_table: None,
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
