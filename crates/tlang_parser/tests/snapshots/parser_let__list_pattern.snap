---
source: crates/tlang_parser/tests/parser_let.rs
expression: "parse!(\"let [x, y, ...z] = [1, 2, 3, 4];\")"
---
Node(
  ast_node: Legacy(Module([
    Stmt(
      kind: Let(
        pattern: Pattern(
          kind: List([
            Pattern(
              kind: Identifier(
                id: SymbolId(1),
                name: Ident(
                  name: "x",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 5,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 6,
                    ),
                  ),
                ),
              ),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 5,
                ),
                end: LineColumn(
                  line: 0,
                  column: 6,
                ),
              ),
            ),
            Pattern(
              kind: Identifier(
                id: SymbolId(2),
                name: Ident(
                  name: "y",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 8,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 9,
                    ),
                  ),
                ),
              ),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 8,
                ),
                end: LineColumn(
                  line: 0,
                  column: 9,
                ),
              ),
            ),
            Pattern(
              kind: Rest(Pattern(
                kind: Identifier(
                  id: SymbolId(3),
                  name: Ident(
                    name: "z",
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 14,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 15,
                      ),
                    ),
                  ),
                ),
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 14,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 15,
                  ),
                ),
              )),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 0,
                ),
                end: LineColumn(
                  line: 0,
                  column: 0,
                ),
              ),
            ),
          ]),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 16,
            ),
          ),
        ),
        expression: Expr(
          kind: List([
            Expr(
              kind: Literal(Integer(1)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 20,
                ),
                end: LineColumn(
                  line: 0,
                  column: 21,
                ),
              ),
            ),
            Expr(
              kind: Literal(Integer(2)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 23,
                ),
                end: LineColumn(
                  line: 0,
                  column: 24,
                ),
              ),
            ),
            Expr(
              kind: Literal(Integer(3)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 26,
                ),
                end: LineColumn(
                  line: 0,
                  column: 27,
                ),
              ),
            ),
            Expr(
              kind: Literal(Integer(4)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 29,
                ),
                end: LineColumn(
                  line: 0,
                  column: 30,
                ),
              ),
            ),
          ]),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 19,
            ),
            end: LineColumn(
              line: 0,
              column: 31,
            ),
          ),
        ),
        type_annotation: None,
      ),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 32,
        ),
      ),
      symbol_table: None,
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
