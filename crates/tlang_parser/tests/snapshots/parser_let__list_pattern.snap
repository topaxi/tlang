---
source: crates/tlang_parser/tests/parser_let.rs
expression: "parse! (\"let [x, y, ...z] = [1, 2, 3, 4];\")"
---
Module(
  id: NodeId(1),
  statements: [
    Stmt(
      id: NodeId(12),
      kind: Let(LetDeclaration(
        pattern: Pat(
          id: NodeId(6),
          kind: List([
            Pat(
              id: NodeId(2),
              kind: Identifier(Ident(
                name: "x",
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 5,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 6,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 5,
                ),
                end: LineColumn(
                  line: 0,
                  column: 6,
                ),
              ),
            ),
            Pat(
              id: NodeId(3),
              kind: Identifier(Ident(
                name: "y",
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 8,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 9,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 8,
                ),
                end: LineColumn(
                  line: 0,
                  column: 9,
                ),
              ),
            ),
            Pat(
              id: NodeId(4),
              kind: Rest(Pat(
                id: NodeId(5),
                kind: Identifier(Ident(
                  name: "z",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 14,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 15,
                    ),
                  ),
                )),
                leading_comments: [],
                trailing_comments: [],
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 14,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 15,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 0,
                ),
                end: LineColumn(
                  line: 0,
                  column: 0,
                ),
              ),
            ),
          ]),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 16,
            ),
          ),
        ),
        expression: Expr(
          id: NodeId(11),
          kind: List([
            Expr(
              id: NodeId(7),
              kind: Literal(UnsignedInteger(1)),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 20,
                ),
                end: LineColumn(
                  line: 0,
                  column: 21,
                ),
              ),
            ),
            Expr(
              id: NodeId(8),
              kind: Literal(UnsignedInteger(2)),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 23,
                ),
                end: LineColumn(
                  line: 0,
                  column: 24,
                ),
              ),
            ),
            Expr(
              id: NodeId(9),
              kind: Literal(UnsignedInteger(3)),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 26,
                ),
                end: LineColumn(
                  line: 0,
                  column: 27,
                ),
              ),
            ),
            Expr(
              id: NodeId(10),
              kind: Literal(UnsignedInteger(4)),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 29,
                ),
                end: LineColumn(
                  line: 0,
                  column: 30,
                ),
              ),
            ),
          ]),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 0,
              column: 19,
            ),
            end: LineColumn(
              line: 0,
              column: 31,
            ),
          ),
        ),
        type_annotation: None,
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 32,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
