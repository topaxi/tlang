---
source: crates/tlang_parser/tests/parser_fn.rs
expression: "parse! (\"fn foo(x,) {}\")"
---
Module(
  id: 1,
  statements: [
    Stmt(
      id: 6,
      kind: FunctionDeclaration(FunctionDeclaration(
        id: 5,
        name: Expr(
          id: 2,
          kind: Path(Path(
            segments: [
              Ident(
                name: "foo",
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 3,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 6,
                  ),
                ),
              ),
            ],
            res: Res(
              node_id: None,
            ),
            span: Span(
              start: LineColumn(
                line: 0,
                column: 3,
              ),
              end: LineColumn(
                line: 0,
                column: 6,
              ),
            ),
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 0,
              column: 3,
            ),
            end: LineColumn(
              line: 0,
              column: 6,
            ),
          ),
        ),
        parameters: [
          FunctionParameter(
            pattern: Pat(
              id: 3,
              kind: Identifier(Ident(
                name: "x",
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 7,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 8,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 7,
                ),
                end: LineColumn(
                  line: 0,
                  column: 8,
                ),
              ),
            ),
            type_annotation: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 7,
              ),
              end: LineColumn(
                line: 0,
                column: 8,
              ),
            ),
          ),
        ],
        guard: None,
        return_type_annotation: None,
        body: Block(
          id: 4,
          statements: [],
          expression: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 11,
            ),
            end: LineColumn(
              line: 0,
              column: 13,
            ),
          ),
        ),
        leading_comments: [],
        trailing_comments: [],
        span: Span(
          start: LineColumn(
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            line: 0,
            column: 13,
          ),
        ),
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 13,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
