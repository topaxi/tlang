---
source: crates/tlang_parser/tests/parser_if_let.rs
expression: "parse!\n(indoc!\n{\"\n        if let Option::Some(y) = x; {\n            y\n        }\n    \"})"
---
Module(
  id: 1,
  statements: [
    Stmt(
      id: 2,
      kind: Expr(Expr(
        id: 10,
        kind: IfElse(IfElseExpression(
          condition: Expr(
            id: 6,
            kind: Let(Pat(
              id: 4,
              kind: Enum(EnumPattern(
                path: Path(
                  segments: [
                    Ident(
                      name: "Option",
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 7,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 13,
                        ),
                      ),
                    ),
                    Ident(
                      name: "Some",
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 15,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 19,
                        ),
                      ),
                    ),
                  ],
                  res: Res(
                    node_id: None,
                  ),
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 7,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 19,
                    ),
                  ),
                ),
                elements: [
                  (Ident(
                    name: "0",
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 0,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 0,
                      ),
                    ),
                  ), Pat(
                    id: 3,
                    kind: Identifier(Ident(
                      name: "y",
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 20,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 21,
                        ),
                      ),
                    )),
                    leading_comments: [],
                    trailing_comments: [],
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 20,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 21,
                      ),
                    ),
                  )),
                ],
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 7,
                ),
                end: LineColumn(
                  line: 0,
                  column: 22,
                ),
              ),
            ), Expr(
              id: 5,
              kind: Path(Path(
                segments: [
                  Ident(
                    name: "x",
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 25,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 26,
                      ),
                    ),
                  ),
                ],
                res: Res(
                  node_id: None,
                ),
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 25,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 26,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 25,
                ),
                end: LineColumn(
                  line: 0,
                  column: 26,
                ),
              ),
            )),
            leading_comments: [],
            trailing_comments: [],
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 0,
              ),
            ),
          ),
          then_branch: Block(
            id: 9,
            statements: [],
            expression: Some(Expr(
              id: 8,
              kind: Path(Path(
                segments: [
                  Ident(
                    name: "y",
                    span: Span(
                      start: LineColumn(
                        line: 1,
                        column: 5,
                      ),
                      end: LineColumn(
                        line: 1,
                        column: 6,
                      ),
                    ),
                  ),
                ],
                res: Res(
                  node_id: None,
                ),
                span: Span(
                  start: LineColumn(
                    line: 1,
                    column: 5,
                  ),
                  end: LineColumn(
                    line: 1,
                    column: 6,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 1,
                  column: 5,
                ),
                end: LineColumn(
                  line: 1,
                  column: 6,
                ),
              ),
            )),
            span: Span(
              start: LineColumn(
                line: 0,
                column: 28,
              ),
              end: LineColumn(
                line: 2,
                column: 2,
              ),
            ),
          ),
          else_branches: [],
        )),
        leading_comments: [],
        trailing_comments: [],
        span: Span(
          start: LineColumn(
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            line: 2,
            column: 2,
          ),
        ),
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 2,
          column: 2,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
