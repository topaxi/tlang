---
source: crates/tlang_parser/tests/parser_if_let.rs
expression: "parse!(indoc! {\n        \"\n        if let Option::Some(y) = x; {\n            y\n        }\n    \"\n    })"
---
Node(
  ast_node: Legacy(Module([
    Node(
      ast_node: Legacy(ExpressionStatement(Expr(
        kind: IfElse(
          condition: Expr(
            kind: Let(Pattern(
              kind: Enum(
                identifier: Expr(
                  kind: NestedIdentifier([
                    Ident(
                      name: "Option",
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 7,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 13,
                        ),
                      ),
                    ),
                    Ident(
                      name: "Some",
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 15,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 19,
                        ),
                      ),
                    ),
                  ]),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 7,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 19,
                    ),
                  ),
                ),
                elements: [
                  Pattern(
                    kind: Identifier(
                      id: SymbolId(1),
                      name: Ident(
                        name: "y",
                        span: Span(
                          start: LineColumn(
                            line: 0,
                            column: 20,
                          ),
                          end: LineColumn(
                            line: 0,
                            column: 21,
                          ),
                        ),
                      ),
                    ),
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 20,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 21,
                      ),
                    ),
                  ),
                ],
                named_fields: false,
              ),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 7,
                ),
                end: LineColumn(
                  line: 0,
                  column: 22,
                ),
              ),
            ), Expr(
              kind: Identifier(Ident(
                name: "x",
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 25,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 26,
                  ),
                ),
              )),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 25,
                ),
                end: LineColumn(
                  line: 0,
                  column: 26,
                ),
              ),
            )),
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 0,
              ),
            ),
          ),
          then_branch: Expr(
            kind: Block([], Some(Expr(
              kind: Identifier(Ident(
                name: "y",
                span: Span(
                  start: LineColumn(
                    line: 1,
                    column: 5,
                  ),
                  end: LineColumn(
                    line: 1,
                    column: 6,
                  ),
                ),
              )),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 1,
                  column: 5,
                ),
                end: LineColumn(
                  line: 1,
                  column: 6,
                ),
              ),
            ))),
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 0,
              ),
            ),
          ),
          else_branch: None,
        ),
        symbol_table: None,
        span: Span(
          start: LineColumn(
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            line: 2,
            column: 2,
          ),
        ),
      ))),
      symbol_table: None,
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 2,
          column: 2,
        ),
      ),
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
