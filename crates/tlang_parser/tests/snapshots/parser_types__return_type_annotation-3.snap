---
source: crates/tlang_parser/tests/parser_types.rs
expression: "parse!(\"let expr = fn foo() -> i64 { 1 };\")"
---
Node(
  ast_node: Legacy(Module([
    Node(
      ast_node: Legacy(VariableDeclaration(
        id: SymbolId(3),
        pattern: Pattern(
          kind: Identifier(
            id: SymbolId(1),
            name: Ident(
              name: "expr",
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 4,
                ),
                end: LineColumn(
                  line: 0,
                  column: 8,
                ),
              ),
            ),
          ),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 8,
            ),
          ),
        ),
        expression: Expr(
          kind: FunctionExpression(
            id: SymbolId(2),
            name: Some(Expr(
              kind: Identifier(Ident(
                name: "foo",
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 14,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 17,
                  ),
                ),
              )),
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 14,
                ),
                end: LineColumn(
                  line: 0,
                  column: 17,
                ),
              ),
            )),
            declaration: Node(
              ast_node: Legacy(FunctionDeclaration(FunctionDeclaration(
                parameters: [],
                guard: None,
                return_type_annotation: Some(Node(
                  ast_node: Legacy(TypeAnnotation(
                    name: Expr(
                      kind: Identifier(Ident(
                        name: "i64",
                        span: Span(
                          start: LineColumn(
                            line: 0,
                            column: 23,
                          ),
                          end: LineColumn(
                            line: 0,
                            column: 26,
                          ),
                        ),
                      )),
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 23,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 26,
                        ),
                      ),
                    ),
                    parameters: [],
                  )),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                  ),
                )),
                body: Expr(
                  kind: Block([], Some(Expr(
                    kind: Literal(Integer(1)),
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 29,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 30,
                      ),
                    ),
                  ))),
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                  ),
                ),
              ))),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 0,
                ),
                end: LineColumn(
                  line: 0,
                  column: 0,
                ),
              ),
            ),
          ),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 11,
            ),
            end: LineColumn(
              line: 0,
              column: 32,
            ),
          ),
        ),
        type_annotation: None,
      )),
      symbol_table: None,
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 33,
        ),
      ),
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
