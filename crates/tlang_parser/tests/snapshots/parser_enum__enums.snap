---
source: crates/tlang_parser/tests/parser_enum.rs
expression: "parse!\n(indoc!\n{\"\n        enum Option {\n            Some(x),\n            None,\n        }\n\n        let x = Option::Some(42);\n    \"})"
---
Module(
  id: 1,
  statements: [
    Stmt(
      id: 6,
      kind: EnumDeclaration(EnumDeclaration(
        name: Ident(
          name: "Option",
          span: Span(
            start: LineColumn(
              line: 0,
              column: 5,
            ),
            end: LineColumn(
              line: 0,
              column: 11,
            ),
          ),
        ),
        variants: [
          EnumVariant(
            id: 4,
            name: Ident(
              name: "Some",
              span: Span(
                start: LineColumn(
                  line: 1,
                  column: 5,
                ),
                end: LineColumn(
                  line: 1,
                  column: 9,
                ),
              ),
            ),
            parameters: [
              StructField(
                id: 3,
                name: Ident(
                  name: "0",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                  ),
                ),
                ty: Ty(
                  id: 2,
                  name: Path(
                    segments: [
                      Ident(
                        name: "x",
                        span: Span(
                          start: LineColumn(
                            line: 1,
                            column: 10,
                          ),
                          end: LineColumn(
                            line: 1,
                            column: 11,
                          ),
                        ),
                      ),
                    ],
                    span: Span(
                      start: LineColumn(
                        line: 1,
                        column: 10,
                      ),
                      end: LineColumn(
                        line: 1,
                        column: 11,
                      ),
                    ),
                  ),
                  parameters: [],
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                  ),
                ),
              ),
            ],
            span: Span(
              start: LineColumn(
                line: 1,
                column: 5,
              ),
              end: LineColumn(
                line: 1,
                column: 12,
              ),
            ),
          ),
          EnumVariant(
            id: 5,
            name: Ident(
              name: "None",
              span: Span(
                start: LineColumn(
                  line: 2,
                  column: 5,
                ),
                end: LineColumn(
                  line: 2,
                  column: 9,
                ),
              ),
            ),
            parameters: [],
            span: Span(
              start: LineColumn(
                line: 2,
                column: 5,
              ),
              end: LineColumn(
                line: 2,
                column: 9,
              ),
            ),
          ),
        ],
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 3,
          column: 2,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
    Stmt(
      id: 11,
      kind: Let(LetDeclaration(
        pattern: Pat(
          id: 7,
          kind: Identifier(Ident(
            name: "x",
            span: Span(
              start: LineColumn(
                line: 5,
                column: 5,
              ),
              end: LineColumn(
                line: 5,
                column: 6,
              ),
            ),
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 5,
              column: 5,
            ),
            end: LineColumn(
              line: 5,
              column: 6,
            ),
          ),
        ),
        expression: Expr(
          id: 10,
          kind: Call(CallExpression(
            callee: Expr(
              id: 8,
              kind: Path(Path(
                segments: [
                  Ident(
                    name: "Option",
                    span: Span(
                      start: LineColumn(
                        line: 5,
                        column: 9,
                      ),
                      end: LineColumn(
                        line: 5,
                        column: 15,
                      ),
                    ),
                  ),
                  Ident(
                    name: "Some",
                    span: Span(
                      start: LineColumn(
                        line: 5,
                        column: 17,
                      ),
                      end: LineColumn(
                        line: 5,
                        column: 21,
                      ),
                    ),
                  ),
                ],
                span: Span(
                  start: LineColumn(
                    line: 5,
                    column: 9,
                  ),
                  end: LineColumn(
                    line: 5,
                    column: 15,
                  ),
                ),
              )),
              leading_comments: [],
              trailing_comments: [],
              span: Span(
                start: LineColumn(
                  line: 5,
                  column: 9,
                ),
                end: LineColumn(
                  line: 5,
                  column: 21,
                ),
              ),
            ),
            arguments: [
              Expr(
                id: 9,
                kind: Literal(UnsignedInteger(42)),
                leading_comments: [],
                trailing_comments: [],
                span: Span(
                  start: LineColumn(
                    line: 5,
                    column: 22,
                  ),
                  end: LineColumn(
                    line: 5,
                    column: 24,
                  ),
                ),
              ),
            ],
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              line: 5,
              column: 9,
            ),
            end: LineColumn(
              line: 5,
              column: 25,
            ),
          ),
        ),
        type_annotation: None,
      )),
      span: Span(
        start: LineColumn(
          line: 5,
          column: 1,
        ),
        end: LineColumn(
          line: 5,
          column: 26,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
