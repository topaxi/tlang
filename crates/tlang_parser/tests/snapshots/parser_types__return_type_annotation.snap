---
source: crates/tlang_parser/tests/parser_types.rs
expression: "parse! (\"fn foo() -> i64 { 1 }\")"
---
Module(
  id: NodeId(1),
  statements: [
    Stmt(
      id: NodeId(8),
      kind: FunctionDeclaration(FunctionDeclaration(
        id: NodeId(7),
        name: Expr(
          id: NodeId(2),
          kind: Path(Path(
            segments: [
              Ident(
                name: "foo",
                span: Span(
                  start: LineColumn(
                    index: 3,
                    line: 0,
                    column: 3,
                  ),
                  end: LineColumn(
                    index: 6,
                    line: 0,
                    column: 6,
                  ),
                ),
              ),
            ],
            span: Span(
              start: LineColumn(
                index: 3,
                line: 0,
                column: 3,
              ),
              end: LineColumn(
                index: 6,
                line: 0,
                column: 6,
              ),
            ),
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              index: 3,
              line: 0,
              column: 3,
            ),
            end: LineColumn(
              index: 6,
              line: 0,
              column: 6,
            ),
          ),
        ),
        parameters: [],
        guard: None,
        return_type_annotation: Some(Ty(
          id: NodeId(3),
          name: Path(
            segments: [
              Ident(
                name: "i64",
                span: Span(
                  start: LineColumn(
                    index: 12,
                    line: 0,
                    column: 12,
                  ),
                  end: LineColumn(
                    index: 15,
                    line: 0,
                    column: 15,
                  ),
                ),
              ),
            ],
            span: Span(
              start: LineColumn(
                index: 12,
                line: 0,
                column: 12,
              ),
              end: LineColumn(
                index: 15,
                line: 0,
                column: 15,
              ),
            ),
          ),
          parameters: [],
          span: Span(
            start: LineColumn(
              index: 0,
              line: 0,
              column: 0,
            ),
            end: LineColumn(
              index: 0,
              line: 0,
              column: 0,
            ),
          ),
        )),
        body: Block(
          id: NodeId(6),
          statements: [],
          expression: Some(Expr(
            id: NodeId(5),
            kind: Literal(UnsignedInteger(1)),
            leading_comments: [],
            trailing_comments: [],
            span: Span(
              start: LineColumn(
                index: 18,
                line: 0,
                column: 18,
              ),
              end: LineColumn(
                index: 19,
                line: 0,
                column: 19,
              ),
            ),
          )),
          span: Span(
            start: LineColumn(
              index: 16,
              line: 0,
              column: 16,
            ),
            end: LineColumn(
              index: 21,
              line: 0,
              column: 21,
            ),
          ),
        ),
        leading_comments: [],
        trailing_comments: [],
        span: Span(
          start: LineColumn(
            index: 0,
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            index: 21,
            line: 0,
            column: 21,
          ),
        ),
      )),
      span: Span(
        start: LineColumn(
          index: 0,
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          index: 21,
          line: 0,
          column: 21,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      index: 0,
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      index: 0,
      line: 0,
      column: 0,
    ),
  ),
)
