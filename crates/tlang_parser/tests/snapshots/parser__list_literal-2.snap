---
source: crates/tlang_parser/tests/parser.rs
expression: "parse!(\"let x = [1, 2, 3];\")"
---
Module(
  statements: [
    Stmt(
      kind: Let(
        pattern: Pattern(
          kind: Identifier(
            id: SymbolId(1),
            name: Ident(
              name: "x",
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 4,
                ),
                end: LineColumn(
                  line: 0,
                  column: 5,
                ),
              ),
            ),
          ),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 5,
            ),
          ),
        ),
        expression: Expr(
          kind: List([
            Expr(
              kind: Literal(Integer(1)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 9,
                ),
                end: LineColumn(
                  line: 0,
                  column: 10,
                ),
              ),
            ),
            Expr(
              kind: Literal(Integer(2)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 12,
                ),
                end: LineColumn(
                  line: 0,
                  column: 13,
                ),
              ),
            ),
            Expr(
              kind: Literal(Integer(3)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 15,
                ),
                end: LineColumn(
                  line: 0,
                  column: 16,
                ),
              ),
            ),
          ]),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 8,
            ),
            end: LineColumn(
              line: 0,
              column: 17,
            ),
          ),
        ),
        type_annotation: None,
      ),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 18,
        ),
      ),
      symbol_table: None,
    ),
  ],
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
