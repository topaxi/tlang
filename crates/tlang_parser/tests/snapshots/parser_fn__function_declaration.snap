---
source: crates/tlang_parser/tests/parser_fn.rs
expression: "parse!(\"fn foo() { bar(); 1 + 2; }\")"
---
Node(
  ast_node: Legacy(Module([
    Node(
      ast_node: Legacy(FunctionSingleDeclaration(
        id: SymbolId(1),
        name: Node(
          ast_node: Legacy(Identifier("foo")),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 3,
            ),
            end: LineColumn(
              line: 0,
              column: 6,
            ),
          ),
        ),
        declaration: Node(
          ast_node: Legacy(FunctionDeclaration(FunctionDeclaration(
            parameters: [],
            guard: None,
            return_type_annotation: None,
            body: Node(
              ast_node: Legacy(Block([
                Node(
                  ast_node: Legacy(ExpressionStatement(Node(
                    ast_node: Legacy(Call(
                      function: Node(
                        ast_node: Legacy(Identifier("bar")),
                        symbol_table: None,
                        span: Span(
                          start: LineColumn(
                            line: 0,
                            column: 11,
                          ),
                          end: LineColumn(
                            line: 0,
                            column: 14,
                          ),
                        ),
                      ),
                      arguments: [],
                    )),
                    symbol_table: None,
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 11,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 16,
                      ),
                    ),
                  ))),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 11,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 17,
                    ),
                  ),
                ),
                Node(
                  ast_node: Legacy(ExpressionStatement(Node(
                    ast_node: Legacy(BinaryOp(
                      op: Add,
                      lhs: Node(
                        ast_node: Legacy(Literal(Integer(1))),
                        symbol_table: None,
                        span: Span(
                          start: LineColumn(
                            line: 0,
                            column: 18,
                          ),
                          end: LineColumn(
                            line: 0,
                            column: 19,
                          ),
                        ),
                      ),
                      rhs: Node(
                        ast_node: Legacy(Literal(Integer(2))),
                        symbol_table: None,
                        span: Span(
                          start: LineColumn(
                            line: 0,
                            column: 22,
                          ),
                          end: LineColumn(
                            line: 0,
                            column: 23,
                          ),
                        ),
                      ),
                    )),
                    symbol_table: None,
                    span: Span(
                      start: LineColumn(
                        line: 0,
                        column: 18,
                      ),
                      end: LineColumn(
                        line: 0,
                        column: 23,
                      ),
                    ),
                  ))),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 18,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 24,
                    ),
                  ),
                ),
              ], None)),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 0,
                ),
                end: LineColumn(
                  line: 0,
                  column: 0,
                ),
              ),
            ),
          ))),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 0,
            ),
            end: LineColumn(
              line: 0,
              column: 0,
            ),
          ),
        ),
      )),
      symbol_table: None,
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 26,
        ),
      ),
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
