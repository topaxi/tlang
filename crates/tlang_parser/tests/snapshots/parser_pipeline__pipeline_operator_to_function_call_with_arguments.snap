---
source: crates/tlang_parser/tests/parser_pipeline.rs
expression: "parse!(\"1 |> foo(2);\")"
---
Node(
  ast_node: Legacy(Module([
    Node(
      ast_node: Legacy(ExpressionStatement(Expr(
        kind: BinaryOp(
          op: Pipeline,
          lhs: Expr(
            kind: Literal(Integer(1)),
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 1,
              ),
            ),
          ),
          rhs: Expr(
            kind: Call(
              function: Expr(
                kind: Identifier(Ident(
                  name: "foo",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 0,
                    ),
                  ),
                )),
                symbol_table: None,
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                ),
              ),
              arguments: [
                Expr(
                  kind: Literal(Integer(2)),
                  symbol_table: None,
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 9,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 10,
                    ),
                  ),
                ),
              ],
            ),
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 5,
              ),
              end: LineColumn(
                line: 0,
                column: 11,
              ),
            ),
          ),
        ),
        symbol_table: None,
        span: Span(
          start: LineColumn(
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            line: 0,
            column: 11,
          ),
        ),
      ))),
      symbol_table: None,
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 12,
        ),
      ),
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
