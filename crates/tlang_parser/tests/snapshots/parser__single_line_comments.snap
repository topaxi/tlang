---
source: crates/tlang_parser/tests/parser.rs
expression: "parse! (\"// this is a comment\\nlet x = 1;\")"
---
Module(
  id: NodeId(1),
  statements: [
    Stmt(
      id: NodeId(4),
      kind: Let(LetDeclaration(
        pattern: Pat(
          id: NodeId(2),
          kind: Identifier(Ident(
            name: "x",
            span: Span(
              start: LineColumn(
                index: 25,
                line: 1,
                column: 5,
              ),
              end: LineColumn(
                index: 26,
                line: 1,
                column: 6,
              ),
            ),
          )),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              index: 25,
              line: 1,
              column: 5,
            ),
            end: LineColumn(
              index: 26,
              line: 1,
              column: 6,
            ),
          ),
        ),
        expression: Expr(
          id: NodeId(3),
          kind: Literal(UnsignedInteger(1)),
          leading_comments: [],
          trailing_comments: [],
          span: Span(
            start: LineColumn(
              index: 29,
              line: 1,
              column: 9,
            ),
            end: LineColumn(
              index: 30,
              line: 1,
              column: 10,
            ),
          ),
        ),
        type_annotation: None,
      )),
      span: Span(
        start: LineColumn(
          index: 21,
          line: 1,
          column: 1,
        ),
        end: LineColumn(
          index: 31,
          line: 1,
          column: 11,
        ),
      ),
      leading_comments: [
        Token(
          kind: SingleLineComment(" this is a comment"),
          span: Span(
            start: LineColumn(
              index: 0,
              line: 0,
              column: 0,
            ),
            end: LineColumn(
              index: 20,
              line: 0,
              column: 20,
            ),
          ),
        ),
      ],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      index: 0,
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      index: 0,
      line: 0,
      column: 0,
    ),
  ),
)
