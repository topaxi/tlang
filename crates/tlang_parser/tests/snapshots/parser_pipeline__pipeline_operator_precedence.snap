---
source: crates/tlang_parser/tests/parser_pipeline.rs
expression: "parse! (\"1 + 2 |> foo();\")"
---
Module(
  id: 2,
  statements: [
    Stmt(
      id: 3,
      kind: Expr(Expr(
        id: 9,
        kind: BinaryOp(BinaryOpExpression(
          op: Pipeline,
          lhs: Expr(
            id: 6,
            kind: BinaryOp(BinaryOpExpression(
              op: Add,
              lhs: Expr(
                id: 4,
                kind: Literal(UnsignedInteger(1)),
                leading_comments: [],
                trailing_comments: [],
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 0,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 1,
                  ),
                ),
              ),
              rhs: Expr(
                id: 5,
                kind: Literal(UnsignedInteger(2)),
                leading_comments: [],
                trailing_comments: [],
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 4,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 5,
                  ),
                ),
              ),
            )),
            leading_comments: [],
            trailing_comments: [],
            span: Span(
              start: LineColumn(
                line: 0,
                column: 0,
              ),
              end: LineColumn(
                line: 0,
                column: 0,
              ),
            ),
          ),
          rhs: Expr(
            id: 8,
            kind: Call(CallExpression(
              callee: Expr(
                id: 7,
                kind: Path(Path(
                  segments: [
                    Ident(
                      name: "foo",
                      span: Span(
                        start: LineColumn(
                          line: 0,
                          column: 9,
                        ),
                        end: LineColumn(
                          line: 0,
                          column: 12,
                        ),
                      ),
                    ),
                  ],
                  res: Res(
                    node_id: None,
                  ),
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 9,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 12,
                    ),
                  ),
                )),
                leading_comments: [],
                trailing_comments: [],
                span: Span(
                  start: LineColumn(
                    line: 0,
                    column: 9,
                  ),
                  end: LineColumn(
                    line: 0,
                    column: 12,
                  ),
                ),
              ),
              arguments: [],
            )),
            leading_comments: [],
            trailing_comments: [],
            span: Span(
              start: LineColumn(
                line: 0,
                column: 9,
              ),
              end: LineColumn(
                line: 0,
                column: 14,
              ),
            ),
          ),
        )),
        leading_comments: [],
        trailing_comments: [],
        span: Span(
          start: LineColumn(
            line: 0,
            column: 0,
          ),
          end: LineColumn(
            line: 0,
            column: 14,
          ),
        ),
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 15,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
    ),
  ],
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 15,
    ),
  ),
)
