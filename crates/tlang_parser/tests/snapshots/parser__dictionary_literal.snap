---
source: crates/tlang_parser/tests/parser.rs
expression: "parse!(r#\"let x = { foo: 1, bar: 2 };\"#)"
---
Node(
  ast_node: Legacy(Module([
    Node(
      ast_node: Legacy(VariableDeclaration(
        id: SymbolId(1),
        pattern: Node(
          ast_node: Legacy(Identifier("x")),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 5,
            ),
          ),
        ),
        expression: Node(
          ast_node: Legacy(Dict([
            (Node(
              ast_node: Legacy(Identifier("foo")),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 10,
                ),
                end: LineColumn(
                  line: 0,
                  column: 13,
                ),
              ),
            ), Node(
              ast_node: Legacy(Literal(Integer(1))),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 15,
                ),
                end: LineColumn(
                  line: 0,
                  column: 16,
                ),
              ),
            )),
            (Node(
              ast_node: Legacy(Identifier("bar")),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 18,
                ),
                end: LineColumn(
                  line: 0,
                  column: 21,
                ),
              ),
            ), Node(
              ast_node: Legacy(Literal(Integer(2))),
              symbol_table: None,
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 23,
                ),
                end: LineColumn(
                  line: 0,
                  column: 24,
                ),
              ),
            )),
          ])),
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 8,
            ),
            end: LineColumn(
              line: 0,
              column: 26,
            ),
          ),
        ),
        type_annotation: None,
      )),
      symbol_table: None,
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 27,
        ),
      ),
    ),
  ])),
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
