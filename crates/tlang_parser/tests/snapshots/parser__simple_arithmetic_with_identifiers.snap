---
source: crates/tlang_parser/tests/parser.rs
expression: "parse!(\"let x = 1; let y = 2; x + y;\")"
---
Module(
  statements: [
    Stmt(
      kind: Let(
        pattern: Pattern(
          kind: Identifier(
            id: SymbolId(1),
            name: Ident(
              name: "x",
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 4,
                ),
                end: LineColumn(
                  line: 0,
                  column: 5,
                ),
              ),
            ),
          ),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 4,
            ),
            end: LineColumn(
              line: 0,
              column: 5,
            ),
          ),
        ),
        expression: Expr(
          kind: Literal(Integer(1)),
          leading_comments: [],
          trailing_comments: [],
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 8,
            ),
            end: LineColumn(
              line: 0,
              column: 9,
            ),
          ),
        ),
        type_annotation: None,
      ),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 0,
        ),
        end: LineColumn(
          line: 0,
          column: 10,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
      symbol_table: None,
    ),
    Stmt(
      kind: Let(
        pattern: Pattern(
          kind: Identifier(
            id: SymbolId(2),
            name: Ident(
              name: "y",
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 15,
                ),
                end: LineColumn(
                  line: 0,
                  column: 16,
                ),
              ),
            ),
          ),
          span: Span(
            start: LineColumn(
              line: 0,
              column: 15,
            ),
            end: LineColumn(
              line: 0,
              column: 16,
            ),
          ),
        ),
        expression: Expr(
          kind: Literal(Integer(2)),
          leading_comments: [],
          trailing_comments: [],
          symbol_table: None,
          span: Span(
            start: LineColumn(
              line: 0,
              column: 19,
            ),
            end: LineColumn(
              line: 0,
              column: 20,
            ),
          ),
        ),
        type_annotation: None,
      ),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 11,
        ),
        end: LineColumn(
          line: 0,
          column: 21,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
      symbol_table: None,
    ),
    Stmt(
      kind: Expr(Expr(
        kind: BinaryOp(
          op: Add,
          lhs: Expr(
            kind: Path(Path(
              segments: [
                Ident(
                  name: "x",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 22,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 23,
                    ),
                  ),
                ),
              ],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 22,
                ),
                end: LineColumn(
                  line: 0,
                  column: 23,
                ),
              ),
            )),
            leading_comments: [],
            trailing_comments: [],
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 22,
              ),
              end: LineColumn(
                line: 0,
                column: 23,
              ),
            ),
          ),
          rhs: Expr(
            kind: Path(Path(
              segments: [
                Ident(
                  name: "y",
                  span: Span(
                    start: LineColumn(
                      line: 0,
                      column: 26,
                    ),
                    end: LineColumn(
                      line: 0,
                      column: 27,
                    ),
                  ),
                ),
              ],
              span: Span(
                start: LineColumn(
                  line: 0,
                  column: 26,
                ),
                end: LineColumn(
                  line: 0,
                  column: 27,
                ),
              ),
            )),
            leading_comments: [],
            trailing_comments: [],
            symbol_table: None,
            span: Span(
              start: LineColumn(
                line: 0,
                column: 26,
              ),
              end: LineColumn(
                line: 0,
                column: 27,
              ),
            ),
          ),
        ),
        leading_comments: [],
        trailing_comments: [],
        symbol_table: None,
        span: Span(
          start: LineColumn(
            line: 0,
            column: 22,
          ),
          end: LineColumn(
            line: 0,
            column: 27,
          ),
        ),
      )),
      span: Span(
        start: LineColumn(
          line: 0,
          column: 22,
        ),
        end: LineColumn(
          line: 0,
          column: 28,
        ),
      ),
      leading_comments: [],
      trailing_comments: [],
      symbol_table: None,
    ),
  ],
  symbol_table: None,
  span: Span(
    start: LineColumn(
      line: 0,
      column: 0,
    ),
    end: LineColumn(
      line: 0,
      column: 0,
    ),
  ),
)
