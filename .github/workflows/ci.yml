name: Build, Test and Deploy

on:
  pull_request:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Add cache for cargo
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            # Taken from <https://doc.rust-lang.org/nightly/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci>.
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            # contains package information of crates installed via `cargo install`.
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            # Cache build targets to avoid rebuilds in case not all crates
            # changed. Especially useful while working on playground/non-rust
            # code.
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install rustup-toolchain-install-master
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          cargo install -f rustup-toolchain-install-master
          cargo install -f cargo-make

      # We always install wasm-bindgen-cli as it must match the installed
      # wasm-bindgen package version, and we can't include this in the cache
      # keys easily.
      - name: Install wasm-bindgen
        run: |
          cargo install -f wasm-bindgen-cli --version $(grep -oP 'wasm-bindgen = "\K[^"]+' crates/tlang_bindings_js/Cargo.toml)

      - name: Install binaryen
        run: sudo apt install -y binaryen

      - name: Install wasm toolchain
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Show Rust version
        run: |
          rustup show
          rustc -Vv
          cargo -V
          cargo make -V

      - name: Cargo Make
        run: cargo make

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install playground dependencies
        run: npm ci

      - name: Lint playground
        run: npm run lint

      - name: TypeCheck playground
        run: npm run typecheck

      - name: Build playground
        run: npm run build -- --base=/tlang

      - name: Upload artifact
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        uses: actions/upload-pages-artifact@v3
        with:
          path: tlang-playground/dist

  deploy-pages:
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    runs-on: ubuntu-latest
    needs: ['build']

    permissions:
      actions: read
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
